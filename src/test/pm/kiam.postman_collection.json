{
	"info": {
		"_postman_id": "7c8b59c1-f676-47fd-b3e7-ace1a9dd33ae",
		"name": "kiam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"cltype is Administrator or Professional or Individual ==> \"+jsonData.cltype] = jsonData.cltype === (\"Administrator\" || \"Professional\" || \"Individual\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Authentication/login?username={{username}}&password={{password}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						},
						"description": "Sends username/password and stores the JSESSIONID."
					},
					"response": []
				},
				{
					"name": "profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"cltype is Administrator or Professional or Individual ==> \"+jsonData.cltype] = jsonData.cltype === (\"Administrator\" || \"Professional\" || \"Individual\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Authentication/profile",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"Password size is 100\", function(){",
									"    pm.expect(pm.response.text().length).to.equal(100);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": ""
							}
						],
						"url": {
							"raw": "{{API_URL}}/Authentication/password?size=100",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"password"
							],
							"query": [
								{
									"key": "size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "hashpwd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Authentication/hash/easy_password",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"hash",
								"easy_password"
							]
						}
					},
					"response": []
				},
				{
					"name": "newPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"A new hashed password is saved\", function(){",
									"   pm.expect(pm.response.json().password !== undefined).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"newpassword\": \"ANOTHER_PASSWORD\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/new-password",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"new-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "newPassword - reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.be.ok;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"newpassword\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/new-password",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"new-password"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "JWTManager",
			"item": [
				{
					"name": "whitemap",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/JWTManager/whitemap",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"JWTManager",
								"whitemap"
							]
						}
					},
					"response": []
				},
				{
					"name": "legal-tokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/JWTManager/legal-tokens",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"JWTManager",
								"legal-tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "refreshed-tokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/JWTManager/refreshed-tokens",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"JWTManager",
								"refreshed-tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "revokedset",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/JWTManager/revokedset",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"JWTManager",
								"revokedset"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "export json",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"body has content\", function() {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"timestamp is defined\", function() {",
									"    pm.expect(jsonData.timestamp).to.not.be.undefined;",
									"});",
									"",
									"pm.test(\"checksum is defined\", function() {",
									"    pm.expect(jsonData.checksum).to.not.be.undefined;",
									"});",
									"",
									"pm.test(\"Professional to backup is \" + pm.environment.get(\"backup_email\"), function() {",
									"    pm.expect(jsonData.professional.email).to.equal(pm.environment.get(\"backup_email\"));",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"backup_email\",\"demo@comptandye.fr\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Backup/export/json?professional={{backup_email}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Backup",
								"export",
								"json"
							],
							"query": [
								{
									"key": "professional",
									"value": "{{backup_email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "control json",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"timestamp\": 1577299447106,\n  \"checksum\": \"0CxTqG84EKqdmp4ZrFWgvDmIrjL/qYPiy17XNX31TjVsEEqV+hee10lCO5Hm/9zLWcRf9NNaQvVOHp/i7LW+tA==\",\n  \"professional\": {\n    \"email\": \"demo@comptandye.fr\",\n    \"cltype\": \"Professional\",\n    \"password\": \"PBKDF2WithHmacSHA256:2048:qvVOSS46SipMO4AAmTGJKh+d+UJJlhRdL4k7alaAjBg=:llQ9N6B9GNtfy0WTHcV6/lMr1DqLlDwUfRX6aH4m634=\",\n    \"username\": \"demo-account\",\n    \"uuid\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755\",\n    \"registrationDate\": 1518088008418,\n    \"blocked\": false,\n    \"userGroups\": [\n      {\n        \"name\": \"Ambassador\",\n        \"description\": \"Group of the users registred in the Ambassadors Program\"\n      },\n      {\n        \"name\": \"Professional\",\n        \"description\": \"Professional User Group\"\n      }\n    ],\n    \"customerDetails\": {\n      \"id\": \"11802\",\n      \"firstName\": \"Hank\",\n      \"lastName\": \"Moody\",\n      \"nickname\": \"Author\",\n      \"phone\": \"0132039405\",\n      \"birthdate\": -296697600000,\n      \"sex\": \"M\",\n      \"comments\": [\n        \"Fun\",\n        \"Book Author\",\n        \"Driving a Porsche 911\"\n      ]\n    },\n    \"address\": {\n      \"id\": \"11801\",\n      \"street\": \"79 Avenue de la jonchère\",\n      \"optional\": \"Appart A113\",\n      \"postalCode\": \"77600\",\n      \"city\": \"Chanteloup-en-Brie\",\n      \"country\": \"France\"\n    },\n    \"socialNetworkAccounts\": {\n      \"id\": \"11803\",\n      \"facebook\": \"https://www.facebook.com/hankmoody\",\n      \"twitter\": \"@hankfuckinmoody\",\n      \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    },\n    \"companyName\": \"Californication\",\n    \"companyID\": \"55211846503644\",\n    \"vatcode\": \"FR91552118465\",\n    \"creationDate\": 1468188000000,\n    \"billsCount\": 41,\n    \"billsRefDate\": 1555279200000,\n    \"tos\": false,\n    \"vatRates\": {\n      \"countryId\": \"FR\",\n      \"country\": \"France\",\n      \"rates\": [\n        20.00,\n        10.00,\n        5.50,\n        2.10\n      ]\n    },\n    \"bills\": [\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-1-CX20180208\",\n        \"deliveryDate\": 1518044400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1200,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1518044400000,\n        \"issueDate\": 1518099521599,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"1012\",\n            \"amount\": 1200,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1013\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux courts\",\n              \"price\": 1200,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1200,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"955\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux courts\",\n              \"price\": 1200,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-10-CX20180228\",\n        \"deliveryDate\": 1519772400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1600,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1519772400000,\n        \"issueDate\": 1519832523496,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2252\",\n            \"amount\": 1600,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2253\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-11-CX20180228\",\n        \"deliveryDate\": 1519772400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 2880,\n        \"currency\": \"EUR\",\n        \"discount\": 320,\n        \"paymentDate\": 1519858800000,\n        \"issueDate\": 1519832551285,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2301\",\n            \"amount\": 2500,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          },\n          {\n            \"id\": \"2302\",\n            \"amount\": 380,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2255\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux mi-longs\",\n              \"price\": 2000,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 2000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"959\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux mi-longs\",\n              \"price\": 2000,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"2256\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux courts\",\n              \"price\": 1200,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1200,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"955\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux courts\",\n              \"price\": 1200,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-12-CG20180305\",\n        \"deliveryDate\": 1520204400000,\n        \"cltype\": \"collectivegroupbill\",\n        \"amount\": 1900,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1520204400000,\n        \"issueDate\": 1520283377286,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2403\",\n            \"amount\": 1900,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2404\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1900,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1007\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"978\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coiffage Homme\",\n                  \"price\": 800,\n                  \"duration\": 10,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"979\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing Homme\",\n                  \"price\": 300,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"980\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe Homme\",\n                  \"price\": 1500,\n                  \"duration\": 20,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"recipient\": \"Chambre 202\",\n        \"collectiveGroup\": {\n          \"id\": \"2401\",\n          \"groupName\": \"RÉSIDENCE DU VALLON\",\n          \"phone\": \"0565711400\",\n          \"address\": {\n            \"id\": \"2402\",\n            \"street\": \"Cougousse\",\n            \"postalCode\": \"12330\",\n            \"city\": \"Salles La Source\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-13-CG20180305\",\n        \"deliveryDate\": 1520204400000,\n        \"cltype\": \"collectivegroupbill\",\n        \"amount\": 1500,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1520204400000,\n        \"issueDate\": 1520283737431,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2405\",\n            \"amount\": 1500,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2406\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1500,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"980\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"recipient\": \"Chambre 203 - Dupond\",\n        \"collectiveGroup\": {\n          \"id\": \"2401\",\n          \"groupName\": \"RÉSIDENCE DU VALLON\",\n          \"phone\": \"0565711400\",\n          \"address\": {\n            \"id\": \"2402\",\n            \"street\": \"Cougousse\",\n            \"postalCode\": \"12330\",\n            \"city\": \"Salles La Source\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-14-CX20180308\",\n        \"deliveryDate\": 1520463600000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1520463600000,\n        \"issueDate\": 1520508251808,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2502\",\n            \"amount\": 3000,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2503\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-15-CX20180315\",\n        \"deliveryDate\": 1521068400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1180,\n        \"currency\": \"EUR\",\n        \"discount\": 20,\n        \"paymentDate\": 1521068400000,\n        \"issueDate\": 1521116142534,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2756\",\n            \"amount\": 1180,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2755\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux courts\",\n              \"price\": 1200,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1200,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"955\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux courts\",\n              \"price\": 1200,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-16-CX20180315\",\n        \"deliveryDate\": 1521068400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3800,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1521068400000,\n        \"issueDate\": 1521116278559,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2757\",\n            \"amount\": 3800,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2758\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coloration Complète - cheveux mi-longs\",\n              \"price\": 3800,\n              \"duration\": 60,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3800,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"964\",\n              \"cltype\": \"service\",\n              \"name\": \"Coloration Complète - cheveux mi-longs\",\n              \"price\": 3800,\n              \"duration\": 60,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-17-CX20180315\",\n        \"deliveryDate\": 1521068400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 2000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1526076000000,\n        \"issueDate\": 1521202663229,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"5404\",\n            \"amount\": 2000,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2804\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe - cheveux courts\",\n              \"price\": 2000,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 2000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"952\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe - cheveux courts\",\n              \"price\": 2000,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-18-CX20180320\",\n        \"deliveryDate\": 1521500400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1521500400000,\n        \"issueDate\": 1521566908102,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"3013\",\n            \"amount\": 3000,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"3014\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-19-CX20180325\",\n        \"deliveryDate\": 1521932400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1620,\n        \"currency\": \"EUR\",\n        \"discount\": 180,\n        \"paymentDate\": 1521932400000,\n        \"issueDate\": 1521936138700,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"3252\",\n            \"amount\": 1620,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"3251\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1500,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"980\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-2-CX20180208\",\n        \"deliveryDate\": 1518044400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 800,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1518130800000,\n        \"issueDate\": 1518120635285,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"1176\",\n            \"amount\": 340,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          },\n          {\n            \"id\": \"1177\",\n            \"amount\": 460,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1051\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coiffage Homme\",\n              \"price\": 800,\n              \"duration\": 10,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 800,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"978\",\n              \"cltype\": \"service\",\n              \"name\": \"Coiffage Homme\",\n              \"price\": 800,\n              \"duration\": 10,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-20-CX20180403\",\n        \"deliveryDate\": 1522706400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 4600,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1530482400000,\n        \"issueDate\": 1522751332684,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"7901\",\n            \"amount\": 2000,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          },\n          {\n            \"id\": \"7902\",\n            \"amount\": 2600,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"3662\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"3663\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-21-CX20180417\",\n        \"deliveryDate\": 1523916000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1400,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1523916000000,\n        \"issueDate\": 1523964103967,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"4301\",\n            \"amount\": 1400,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"4302\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux mi-longs\",\n              \"price\": 1400,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1400,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"956\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux mi-longs\",\n              \"price\": 1400,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-22-CX20180424\",\n        \"deliveryDate\": 1524520800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1710,\n        \"currency\": \"EUR\",\n        \"discount\": 190,\n        \"issueDate\": 1524579305116,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"4604\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1900,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1007\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"978\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coiffage Homme\",\n                  \"price\": 800,\n                  \"duration\": 10,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"979\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing Homme\",\n                  \"price\": 300,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"980\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe Homme\",\n                  \"price\": 1500,\n                  \"duration\": 20,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-23-CX20180424\",\n        \"deliveryDate\": 1524520800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3600,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1524520800000,\n        \"issueDate\": 1524580628223,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"4611\",\n            \"amount\": 3600,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"4612\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-24-CX20180424\",\n        \"deliveryDate\": 1524520800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1524520800000,\n        \"issueDate\": 1524580753823,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"4613\",\n            \"amount\": 3000,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"4614\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-25-CX20180424\",\n        \"deliveryDate\": 1524520800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1600,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1524520800000,\n        \"issueDate\": 1524580825525,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"4618\",\n            \"amount\": 1600,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"4619\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-26-CX20180528\",\n        \"deliveryDate\": 1527458400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 38500,\n        \"currency\": \"EUR\",\n        \"discount\": 5000,\n        \"paymentDate\": 1527458400000,\n        \"issueDate\": 1527510621702,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"5901\",\n            \"amount\": 38500,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"5902\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Chignon prestige\",\n              \"price\": 12000,\n              \"duration\": 90,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 12000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"988\",\n              \"cltype\": \"service\",\n              \"name\": \"Chignon prestige\",\n              \"price\": 12000,\n              \"duration\": 90,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"5903\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux longs\",\n              \"price\": 10900,\n              \"duration\": 240,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 10900,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1006\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux longs\",\n              \"price\": 10900,\n              \"duration\": 240,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"951\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing - cheveux longs\",\n                  \"price\": 500,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"954\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe - cheveux longs\",\n                  \"price\": 2500,\n                  \"duration\": 45,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"957\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Brushing Simple - cheveux longs\",\n                  \"price\": 1600,\n                  \"duration\": 25,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"965\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coloration Complète - cheveux longs\",\n                  \"price\": 4200,\n                  \"duration\": 65,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"968\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Mèches / Balayage - cheveux longs\",\n                  \"price\": 5100,\n                  \"duration\": 80,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"5904\",\n            \"qty\": 2,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux mi-longs\",\n              \"price\": 10300,\n              \"duration\": 220,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 10300,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1005\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux mi-longs\",\n              \"price\": 10300,\n              \"duration\": 220,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"950\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing - cheveux mi-longs\",\n                  \"price\": 500,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"953\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe - cheveux mi-longs\",\n                  \"price\": 2200,\n                  \"duration\": 30,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"956\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Brushing Simple - cheveux mi-longs\",\n                  \"price\": 1400,\n                  \"duration\": 20,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"964\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coloration Complète - cheveux mi-longs\",\n                  \"price\": 3800,\n                  \"duration\": 60,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"967\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Mèches / Balayage - cheveux mi-longs\",\n                  \"price\": 4700,\n                  \"duration\": 70,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-27-CX20180528\",\n        \"deliveryDate\": 1527458400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 6480,\n        \"currency\": \"EUR\",\n        \"discount\": 720,\n        \"paymentDate\": 1527458400000,\n        \"issueDate\": 1527510910974,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"comments\": [\n          \"Allergie produit coiffure \"\n        ],\n        \"payments\": [\n          {\n            \"id\": \"5907\",\n            \"amount\": 6480,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"5906\",\n            \"qty\": 2,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-28-CX20180528\",\n        \"deliveryDate\": 1527458400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1530050400000,\n        \"issueDate\": 1527511244625,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"7605\",\n            \"amount\": 3000,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"5910\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-29-CX20180604\",\n        \"deliveryDate\": 1528063200000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1620,\n        \"currency\": \"EUR\",\n        \"discount\": 180,\n        \"paymentDate\": 1530050400000,\n        \"issueDate\": 1528103369173,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"7604\",\n            \"amount\": 1620,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"6252\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1500,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"980\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-3-CX20180209\",\n        \"deliveryDate\": 1518130800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1518130800000,\n        \"issueDate\": 1518207985955,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"1173\",\n            \"amount\": 20,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          },\n          {\n            \"id\": \"1174\",\n            \"amount\": 10,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          },\n          {\n            \"id\": \"1175\",\n            \"amount\": 2970,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1170\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-30-CG20180703\",\n        \"deliveryDate\": 1530568800000,\n        \"cltype\": \"collectivegroupbill\",\n        \"amount\": 3080,\n        \"currency\": \"EUR\",\n        \"discount\": 720,\n        \"paymentDate\": 1531087200000,\n        \"issueDate\": 1530651891000,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"8251\",\n            \"amount\": 3080,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"8109\",\n            \"qty\": 2,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1900,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1007\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"978\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coiffage Homme\",\n                  \"price\": 800,\n                  \"duration\": 10,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"979\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing Homme\",\n                  \"price\": 300,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"980\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe Homme\",\n                  \"price\": 1500,\n                  \"duration\": 20,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"recipient\": \"M. Dupont\",\n        \"collectiveGroup\": {\n          \"id\": \"2401\",\n          \"groupName\": \"RÉSIDENCE DU VALLON\",\n          \"phone\": \"0565711400\",\n          \"address\": {\n            \"id\": \"2402\",\n            \"street\": \"Cougousse\",\n            \"postalCode\": \"12330\",\n            \"city\": \"Salles La Source\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-31-CX20180718\",\n        \"deliveryDate\": 1531864800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1325,\n        \"currency\": \"EUR\",\n        \"discount\": 175,\n        \"paymentDate\": 1531864800000,\n        \"issueDate\": 1532979725199,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"comments\": [\n          \"client sympa\"\n        ],\n        \"payments\": [\n          {\n            \"id\": \"9001\",\n            \"amount\": 1325,\n            \"paymentMode\": {\n              \"name\": \"Paylib\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"9002\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1500,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"980\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-32-CX20180731\",\n        \"deliveryDate\": 1532988000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1800,\n        \"currency\": \"EUR\",\n        \"discount\": 200,\n        \"paymentDate\": 1532988000000,\n        \"issueDate\": 1533052549026,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"9051\",\n            \"amount\": 1800,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"9052\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe - cheveux courts\",\n              \"price\": 2000,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 2000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"952\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe - cheveux courts\",\n              \"price\": 2000,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-33-CG20181002\",\n        \"deliveryDate\": 1538431200000,\n        \"cltype\": \"collectivegroupbill\",\n        \"amount\": 2700,\n        \"currency\": \"EUR\",\n        \"discount\": 300,\n        \"paymentDate\": 1539036000000,\n        \"issueDate\": 1539162996524,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"comments\": [\n          \"Cheveux qui tombent\",\n          \"Couleur 1514\"\n        ],\n        \"payments\": [\n          {\n            \"id\": \"9760\",\n            \"amount\": 2700,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"9759\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple - cheveux courts\",\n              \"price\": 3000,\n              \"duration\": 50,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"989\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple - cheveux courts\",\n              \"price\": 3000,\n              \"duration\": 50,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"949\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing - cheveux courts\",\n                  \"price\": 300,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"952\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe - cheveux courts\",\n                  \"price\": 2000,\n                  \"duration\": 20,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"955\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Brushing Simple - cheveux courts\",\n                  \"price\": 1200,\n                  \"duration\": 15,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"985\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Attachés (rapide) ou tresses\",\n                  \"price\": 3000,\n                  \"duration\": 30,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"recipient\": \"405 - Mme levallois\",\n        \"collectiveGroup\": {\n          \"id\": \"2401\",\n          \"groupName\": \"RÉSIDENCE DU VALLON\",\n          \"phone\": \"0565711400\",\n          \"address\": {\n            \"id\": \"2402\",\n            \"street\": \"Cougousse\",\n            \"postalCode\": \"12330\",\n            \"city\": \"Salles La Source\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-34-CX20181009\",\n        \"deliveryDate\": 1539036000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 2760,\n        \"currency\": \"EUR\",\n        \"discount\": 700,\n        \"paymentDate\": 1539036000000,\n        \"issueDate\": 1539163702899,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"9765\",\n            \"amount\": 2000,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          },\n          {\n            \"id\": \"9766\",\n            \"amount\": 760,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"9767\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"9768\",\n            \"qty\": 1,\n            \"vatRate\": 10.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Fille (-10)\",\n              \"price\": 1400,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1400,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"982\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Fille (-10)\",\n              \"price\": 1400,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1984\",\n          \"email\": \"sylvie.suard@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"2753\"\n          },\n          \"customerDetails\": {\n            \"id\": \"2752\",\n            \"firstName\": \"Sylvie\",\n            \"lastName\": \"Suard\",\n            \"nickname\": \"Lavioque\",\n            \"phone\": \"0671803327\",\n            \"birthdate\": -608695200000,\n            \"sex\": \"F\",\n            \"comments\": [\n              \"la belle mère\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"2751\",\n            \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"chanteloup en brie\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-35-CX20181211\",\n        \"deliveryDate\": 1544482800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 2600,\n        \"currency\": \"EUR\",\n        \"discount\": 1000,\n        \"paymentDate\": 1544482800000,\n        \"issueDate\": 1544540409649,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"10155\",\n            \"amount\": 2600,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"10156\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"10151\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"10154\"\n          },\n          \"customerDetails\": {\n            \"id\": \"10153\",\n            \"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"nickname\": \"Jane Doe\",\n            \"phone\": \"0666666666\",\n            \"sex\": \"F\"\n          },\n          \"address\": {\n            \"id\": \"10152\",\n            \"street\": \"36 boulevard magenta\",\n            \"postalCode\": \"75010\",\n            \"city\": \"Patis\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-36-CX20181219\",\n        \"deliveryDate\": 1545174000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 2400,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1545174000000,\n        \"issueDate\": 1545231603004,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"10251\",\n            \"amount\": 2400,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"10252\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux longs\",\n              \"price\": 2400,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 2400,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"960\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux longs\",\n              \"price\": 2400,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"10151\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"10154\"\n          },\n          \"customerDetails\": {\n            \"id\": \"10153\",\n            \"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"nickname\": \"Jane Doe\",\n            \"phone\": \"0666666666\",\n            \"sex\": \"F\"\n          },\n          \"address\": {\n            \"id\": \"10152\",\n            \"street\": \"36 boulevard magenta\",\n            \"postalCode\": \"75010\",\n            \"city\": \"Patis\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-37-CX20190108\",\n        \"deliveryDate\": 1546902000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3840,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1546902000000,\n        \"issueDate\": 1546969976352,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"10401\",\n            \"amount\": 3840,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"10402\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"10403\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux longs\",\n              \"price\": 1600,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"957\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Simple - cheveux longs\",\n              \"price\": 1600,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"10151\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"10154\"\n          },\n          \"customerDetails\": {\n            \"id\": \"10153\",\n            \"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"nickname\": \"Jane Doe\",\n            \"phone\": \"0666666666\",\n            \"sex\": \"F\"\n          },\n          \"address\": {\n            \"id\": \"10152\",\n            \"street\": \"36 boulevard magenta\",\n            \"postalCode\": \"75010\",\n            \"city\": \"Patis\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-38-CX20190203\",\n        \"deliveryDate\": 1549148400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 11080,\n        \"currency\": \"EUR\",\n        \"discount\": 2000,\n        \"paymentDate\": 1549148400000,\n        \"issueDate\": 1549207081241,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"10951\",\n            \"amount\": 11080,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"10952\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux longs\",\n              \"price\": 10900,\n              \"duration\": 240,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 10900,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1006\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux longs\",\n              \"price\": 10900,\n              \"duration\": 240,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"951\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing - cheveux longs\",\n                  \"price\": 500,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"954\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe - cheveux longs\",\n                  \"price\": 2500,\n                  \"duration\": 45,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"957\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Brushing Simple - cheveux longs\",\n                  \"price\": 1600,\n                  \"duration\": 25,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"965\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coloration Complète - cheveux longs\",\n                  \"price\": 4200,\n                  \"duration\": 65,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"968\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Mèches / Balayage - cheveux longs\",\n                  \"price\": 5100,\n                  \"duration\": 80,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-39-CX20190206\",\n        \"deliveryDate\": 1549407600000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1920,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1549407600000,\n        \"issueDate\": 1549460120064,\n        \"vatInclusive\": true,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"11051\",\n            \"amount\": 1920,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"11052\",\n            \"qty\": 1,\n            \"vatRate\": 20.00,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-4-CX20180209\",\n        \"deliveryDate\": 1518130800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 30,\n        \"currency\": \"EUR\",\n        \"discount\": 270,\n        \"paymentDate\": 1518130800000,\n        \"issueDate\": 1518211096721,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"1180\",\n            \"amount\": 20,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          },\n          {\n            \"id\": \"1181\",\n            \"amount\": 10,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1182\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Shampoing - cheveux courts\",\n              \"price\": 300,\n              \"duration\": 5,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 300,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"949\",\n              \"cltype\": \"service\",\n              \"name\": \"Shampoing - cheveux courts\",\n              \"price\": 300,\n              \"duration\": 5,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-40-CX20190217\",\n        \"deliveryDate\": 1550358000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 7000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1550358000000,\n        \"issueDate\": 1550363116280,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"11151\",\n            \"amount\": 7000,\n            \"paymentMode\": {\n              \"name\": \"CB\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"11152\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"11153\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1600,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"958\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n              \"price\": 1600,\n              \"duration\": 15,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          },\n          {\n            \"id\": \"11154\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux longs\",\n              \"price\": 2400,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 2400,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"960\",\n              \"cltype\": \"service\",\n              \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux longs\",\n              \"price\": 2400,\n              \"duration\": 25,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"10151\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"10154\"\n          },\n          \"customerDetails\": {\n            \"id\": \"10153\",\n            \"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"nickname\": \"Jane Doe\",\n            \"phone\": \"0666666666\",\n            \"sex\": \"F\"\n          },\n          \"address\": {\n            \"id\": \"10152\",\n            \"street\": \"36 boulevard magenta\",\n            \"postalCode\": \"75010\",\n            \"city\": \"Patis\",\n            \"country\": \"France\"\n          }\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-41-CX20190415\",\n        \"deliveryDate\": 1555279200000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 1710,\n        \"currency\": \"EUR\",\n        \"discount\": 190,\n        \"issueDate\": 1555315931243,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"11702\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1900,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"1007\",\n              \"cltype\": \"pack\",\n              \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n              \"price\": 1900,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ],\n              \"offerings\": [\n                {\n                  \"id\": \"978\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coiffage Homme\",\n                  \"price\": 800,\n                  \"duration\": 10,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"979\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Shampoing Homme\",\n                  \"price\": 300,\n                  \"duration\": 5,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                },\n                {\n                  \"id\": \"980\",\n                  \"cltype\": \"service\",\n                  \"name\": \"Coupe Homme\",\n                  \"price\": 1500,\n                  \"duration\": 20,\n                  \"businesses\": [\n                    {\n                      \"designation\": \"Coiffure\"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"11401\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"11407\"\n          },\n          \"customerDetails\": {\n            \"id\": \"11406\",\n            \"firstName\": \"Kusic\",\n            \"lastName\": \"Alexandre \",\n            \"phone\": \"0686230882\",\n            \"sex\": \"M\"\n          },\n          \"address\": {\n            \"id\": \"11405\",\n            \"street\": \"9 rue du Général Leclerc\",\n            \"postalCode\": \"35260\",\n            \"city\": \"Cancale\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-5-CX20180209\",\n        \"deliveryDate\": 1518130800000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3540,\n        \"currency\": \"EUR\",\n        \"discount\": 460,\n        \"paymentDate\": 1518130800000,\n        \"issueDate\": 1518211118040,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"1183\",\n            \"amount\": 3540,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1184\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Permanente - cheveux longs\",\n              \"price\": 4000,\n              \"duration\": 55,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 4000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"977\",\n              \"cltype\": \"service\",\n              \"name\": \"Permanente - cheveux longs\",\n              \"price\": 4000,\n              \"duration\": 55,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-6-CX20180210\",\n        \"deliveryDate\": 1518217200000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 30,\n        \"currency\": \"EUR\",\n        \"discount\": 270,\n        \"paymentDate\": 1518217200000,\n        \"issueDate\": 1518307660396,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"1251\",\n            \"amount\": 10,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          },\n          {\n            \"id\": \"1252\",\n            \"amount\": 20,\n            \"paymentMode\": {\n              \"name\": \"Espèces\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1253\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Shampoing - cheveux courts\",\n              \"price\": 300,\n              \"duration\": 5,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 300,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"949\",\n              \"cltype\": \"service\",\n              \"name\": \"Shampoing - cheveux courts\",\n              \"price\": 300,\n              \"duration\": 5,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-7-CX20180213\",\n        \"deliveryDate\": 1518476400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 2500,\n        \"currency\": \"EUR\",\n        \"discount\": 500,\n        \"paymentDate\": 1520463600000,\n        \"issueDate\": 1518524409401,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"2501\",\n            \"amount\": 2500,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1480\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-8-CX20180222\",\n        \"deliveryDate\": 1519254000000,\n        \"cltype\": \"clientbill\",\n        \"amount\": -500,\n        \"currency\": \"EUR\",\n        \"discount\": 2000,\n        \"paymentDate\": 1519254000000,\n        \"issueDate\": 1519327704863,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"1860\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 1500,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"980\",\n              \"cltype\": \"service\",\n              \"name\": \"Coupe Homme\",\n              \"price\": 1500,\n              \"duration\": 20,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      },\n      {\n        \"reference\": \"PRO-637c2d32ab2e46f1bcf7e13965a1d755-9-CX20180228\",\n        \"deliveryDate\": 1519772400000,\n        \"cltype\": \"clientbill\",\n        \"amount\": 3000,\n        \"currency\": \"EUR\",\n        \"discount\": 0,\n        \"paymentDate\": 1526076000000,\n        \"issueDate\": 1519832508559,\n        \"vatInclusive\": false,\n        \"cancelled\": false,\n        \"payments\": [\n          {\n            \"id\": \"5403\",\n            \"amount\": 3000,\n            \"paymentMode\": {\n              \"name\": \"Chèque\"\n            }\n          }\n        ],\n        \"purchasedOfferings\": [\n          {\n            \"id\": \"2251\",\n            \"qty\": 1,\n            \"offeringSnapshot\": {\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            },\n            \"offeringExtents\": {\n              \"services\": 3000,\n              \"sales\": 0\n            },\n            \"offering\": {\n              \"id\": \"985\",\n              \"cltype\": \"service\",\n              \"name\": \"Attachés (rapide) ou tresses\",\n              \"price\": 3000,\n              \"duration\": 30,\n              \"businesses\": [\n                {\n                  \"designation\": \"Coiffure\"\n                }\n              ]\n            }\n          }\n        ],\n        \"client\": {\n          \"id\": \"1008\",\n          \"email\": \"julien.sie@gmail.com\",\n          \"socialNetworkAccounts\": {\n            \"id\": \"3676\"\n          },\n          \"customerDetails\": {\n            \"id\": \"3675\",\n            \"firstName\": \"Julien\",\n            \"lastName\": \"Sié\",\n            \"nickname\": \"Skonx\",\n            \"phone\": \"0787428425\",\n            \"birthdate\": 407286000000,\n            \"sex\": \"M\",\n            \"comments\": [\n              \"Juju est cool\"\n            ]\n          },\n          \"address\": {\n            \"id\": \"3674\",\n            \"street\": \"47 rue René Benoist\",\n            \"postalCode\": \"77860\",\n            \"city\": \"Quincy-Voisins\",\n            \"country\": \"France\"\n          },\n          \"categories\": [\n            {\n              \"id\": \"2598\",\n              \"description\": \"-20 % de réduction sur les forfaits\",\n              \"name\": \"Programme Gold\"\n            },\n            {\n              \"id\": \"9761\",\n              \"description\": \"ils sont tops\",\n              \"name\": \"Mes clients fidèles\"\n            }\n          ]\n        }\n      }\n    ],\n    \"businesses\": [\n      {\n        \"designation\": \"Coiffure\"\n      },\n      {\n        \"designation\": \"Esthétique\"\n      }\n    ],\n    \"clients\": [\n      {\n        \"id\": \"1008\",\n        \"email\": \"julien.sie@gmail.com\",\n        \"socialNetworkAccounts\": {\n          \"id\": \"3676\"\n        },\n        \"customerDetails\": {\n          \"id\": \"3675\",\n          \"firstName\": \"Julien\",\n          \"lastName\": \"Sié\",\n          \"nickname\": \"Skonx\",\n          \"phone\": \"0787428425\",\n          \"birthdate\": 407286000000,\n          \"sex\": \"M\",\n          \"comments\": [\n            \"Juju est cool\"\n          ]\n        },\n        \"address\": {\n          \"id\": \"3674\",\n          \"street\": \"47 rue René Benoist\",\n          \"postalCode\": \"77860\",\n          \"city\": \"Quincy-Voisins\",\n          \"country\": \"France\"\n        },\n        \"categories\": [\n          {\n            \"id\": \"2598\",\n            \"description\": \"-20 % de réduction sur les forfaits\",\n            \"name\": \"Programme Gold\"\n          },\n          {\n            \"id\": \"9761\",\n            \"description\": \"ils sont tops\",\n            \"name\": \"Mes clients fidèles\"\n          }\n        ]\n      },\n      {\n        \"id\": \"10151\",\n        \"socialNetworkAccounts\": {\n          \"id\": \"10154\"\n        },\n        \"customerDetails\": {\n          \"id\": \"10153\",\n          \"firstName\": \"Jane\",\n          \"lastName\": \"Doe\",\n          \"nickname\": \"Jane Doe\",\n          \"phone\": \"0666666666\",\n          \"sex\": \"F\"\n        },\n        \"address\": {\n          \"id\": \"10152\",\n          \"street\": \"36 boulevard magenta\",\n          \"postalCode\": \"75010\",\n          \"city\": \"Patis\",\n          \"country\": \"France\"\n        }\n      },\n      {\n        \"id\": \"11401\",\n        \"socialNetworkAccounts\": {\n          \"id\": \"11407\"\n        },\n        \"customerDetails\": {\n          \"id\": \"11406\",\n          \"firstName\": \"Kusic\",\n          \"lastName\": \"Alexandre \",\n          \"phone\": \"0686230882\",\n          \"sex\": \"M\"\n        },\n        \"address\": {\n          \"id\": \"11405\",\n          \"street\": \"9 rue du Général Leclerc\",\n          \"postalCode\": \"35260\",\n          \"city\": \"Cancale\",\n          \"country\": \"France\"\n        },\n        \"categories\": [\n          {\n            \"id\": \"9761\",\n            \"description\": \"ils sont tops\",\n            \"name\": \"Mes clients fidèles\"\n          }\n        ]\n      },\n      {\n        \"id\": \"1984\",\n        \"email\": \"sylvie.suard@gmail.com\",\n        \"socialNetworkAccounts\": {\n          \"id\": \"2753\"\n        },\n        \"customerDetails\": {\n          \"id\": \"2752\",\n          \"firstName\": \"Sylvie\",\n          \"lastName\": \"Suard\",\n          \"nickname\": \"Lavioque\",\n          \"phone\": \"0671803327\",\n          \"birthdate\": -608695200000,\n          \"sex\": \"F\",\n          \"comments\": [\n            \"la belle mère\"\n          ]\n        },\n        \"address\": {\n          \"id\": \"2751\",\n          \"street\": \"10 route de la ferme du pavillon\",\n          \"postalCode\": \"77600\",\n          \"city\": \"chanteloup en brie\",\n          \"country\": \"France\"\n        },\n        \"categories\": [\n          {\n            \"id\": \"2598\",\n            \"description\": \"-20 % de réduction sur les forfaits\",\n            \"name\": \"Programme Gold\"\n          }\n        ]\n      }\n    ],\n    \"offerings\": [\n      {\n        \"id\": \"1000\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Mèches / Balayage - cheveux longs\",\n        \"price\": 7900,\n        \"duration\": 140,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"951\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"954\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux longs\",\n            \"price\": 2500,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"957\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux longs\",\n            \"price\": 1600,\n            \"duration\": 25,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"968\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux longs\",\n            \"price\": 5100,\n            \"duration\": 80,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1001\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Repousse + Mèches / Balayage - cheveux courts\",\n        \"price\": 8900,\n        \"duration\": 180,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"949\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux courts\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"952\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux courts\",\n            \"price\": 2000,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"955\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux courts\",\n            \"price\": 1200,\n            \"duration\": 15,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"962\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Repousse\",\n            \"price\": 2400,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"966\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux courts\",\n            \"price\": 4300,\n            \"duration\": 60,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1002\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Repousse + Mèches / Balayage - cheveux mi-longs\",\n        \"price\": 9300,\n        \"duration\": 210,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"950\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux mi-longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"953\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux mi-longs\",\n            \"price\": 2200,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"956\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux mi-longs\",\n            \"price\": 1400,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"962\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Repousse\",\n            \"price\": 2400,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"967\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux mi-longs\",\n            \"price\": 4700,\n            \"duration\": 70,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1003\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Repousse + Mèches / Balayage - cheveux longs\",\n        \"price\": 9900,\n        \"duration\": 230,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"951\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"954\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux longs\",\n            \"price\": 2500,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"957\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux longs\",\n            \"price\": 1600,\n            \"duration\": 25,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"962\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Repousse\",\n            \"price\": 2400,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"968\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux longs\",\n            \"price\": 5100,\n            \"duration\": 80,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1004\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux courts\",\n        \"price\": 9900,\n        \"duration\": 210,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"949\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux courts\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"952\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux courts\",\n            \"price\": 2000,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"955\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux courts\",\n            \"price\": 1200,\n            \"duration\": 15,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"963\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Complète - cheveux courts\",\n            \"price\": 3400,\n            \"duration\": 55,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"966\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux courts\",\n            \"price\": 4300,\n            \"duration\": 60,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1005\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux mi-longs\",\n        \"price\": 10300,\n        \"duration\": 220,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"950\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux mi-longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"953\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux mi-longs\",\n            \"price\": 2200,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"956\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux mi-longs\",\n            \"price\": 1400,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"964\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Complète - cheveux mi-longs\",\n            \"price\": 3800,\n            \"duration\": 60,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"967\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux mi-longs\",\n            \"price\": 4700,\n            \"duration\": 70,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1006\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète + Mèches / Balayage - cheveux longs\",\n        \"price\": 10900,\n        \"duration\": 240,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"951\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"954\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux longs\",\n            \"price\": 2500,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"957\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux longs\",\n            \"price\": 1600,\n            \"duration\": 25,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"965\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Complète - cheveux longs\",\n            \"price\": 4200,\n            \"duration\": 65,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"968\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux longs\",\n            \"price\": 5100,\n            \"duration\": 80,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1007\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Coiffage - Homme\",\n        \"price\": 1900,\n        \"duration\": 30,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"978\",\n            \"cltype\": \"service\",\n            \"name\": \"Coiffage Homme\",\n            \"price\": 800,\n            \"duration\": 10,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"979\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing Homme\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"980\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe Homme\",\n            \"price\": 1500,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"1505\",\n        \"cltype\": \"service\",\n        \"name\": \"Presta Carli Paris\",\n        \"price\": 2000,\n        \"duration\": 60,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"2351\",\n        \"cltype\": \"service\",\n        \"name\": \"Conseil\",\n        \"price\": 2000,\n        \"duration\": 15,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"5560\",\n        \"cltype\": \"service\",\n        \"name\": \"Styling\",\n        \"price\": 2000,\n        \"duration\": 15,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"949\",\n        \"cltype\": \"service\",\n        \"name\": \"Shampoing - cheveux courts\",\n        \"price\": 300,\n        \"duration\": 5,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"950\",\n        \"cltype\": \"service\",\n        \"name\": \"Shampoing - cheveux mi-longs\",\n        \"price\": 500,\n        \"duration\": 5,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"951\",\n        \"cltype\": \"service\",\n        \"name\": \"Shampoing - cheveux longs\",\n        \"price\": 500,\n        \"duration\": 5,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"952\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe - cheveux courts\",\n        \"price\": 2000,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"953\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe - cheveux mi-longs\",\n        \"price\": 2200,\n        \"duration\": 30,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"954\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe - cheveux longs\",\n        \"price\": 2500,\n        \"duration\": 45,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"955\",\n        \"cltype\": \"service\",\n        \"name\": \"Brushing Simple - cheveux courts\",\n        \"price\": 1200,\n        \"duration\": 15,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"956\",\n        \"cltype\": \"service\",\n        \"name\": \"Brushing Simple - cheveux mi-longs\",\n        \"price\": 1400,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"957\",\n        \"cltype\": \"service\",\n        \"name\": \"Brushing Simple - cheveux longs\",\n        \"price\": 1600,\n        \"duration\": 25,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"958\",\n        \"cltype\": \"service\",\n        \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux courts\",\n        \"price\": 1600,\n        \"duration\": 15,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"959\",\n        \"cltype\": \"service\",\n        \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux mi-longs\",\n        \"price\": 2000,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"960\",\n        \"cltype\": \"service\",\n        \"name\": \"Brushing Ondulé (ou Bouclé) - cheveux longs\",\n        \"price\": 2400,\n        \"duration\": 25,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"961\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe Rafraîchissement\",\n        \"price\": 1500,\n        \"duration\": 15,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"962\",\n        \"cltype\": \"service\",\n        \"name\": \"Coloration Repousse\",\n        \"price\": 2400,\n        \"duration\": 45,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"963\",\n        \"cltype\": \"service\",\n        \"name\": \"Coloration Complète - cheveux courts\",\n        \"price\": 3400,\n        \"duration\": 55,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"964\",\n        \"cltype\": \"service\",\n        \"name\": \"Coloration Complète - cheveux mi-longs\",\n        \"price\": 3800,\n        \"duration\": 60,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"965\",\n        \"cltype\": \"service\",\n        \"name\": \"Coloration Complète - cheveux longs\",\n        \"price\": 4200,\n        \"duration\": 65,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"966\",\n        \"cltype\": \"service\",\n        \"name\": \"Mèches / Balayage - cheveux courts\",\n        \"price\": 4300,\n        \"duration\": 60,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"967\",\n        \"cltype\": \"service\",\n        \"name\": \"Mèches / Balayage - cheveux mi-longs\",\n        \"price\": 4700,\n        \"duration\": 70,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"968\",\n        \"cltype\": \"service\",\n        \"name\": \"Mèches / Balayage - cheveux longs\",\n        \"price\": 5100,\n        \"duration\": 80,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"969\",\n        \"cltype\": \"service\",\n        \"name\": \"Soin - cheveux courts\",\n        \"price\": 500,\n        \"duration\": 10,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"970\",\n        \"cltype\": \"service\",\n        \"name\": \"Soin - cheveux mi-longs\",\n        \"price\": 700,\n        \"duration\": 12,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"971\",\n        \"cltype\": \"service\",\n        \"name\": \"Soin - cheveux longs\",\n        \"price\": 900,\n        \"duration\": 15,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"972\",\n        \"cltype\": \"service\",\n        \"name\": \"Patine - cheveux courts\",\n        \"price\": 1400,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"973\",\n        \"cltype\": \"service\",\n        \"name\": \"Patine - cheveux mi-longs\",\n        \"price\": 1600,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"974\",\n        \"cltype\": \"service\",\n        \"name\": \"Patine - cheveux longs\",\n        \"price\": 1800,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"975\",\n        \"cltype\": \"service\",\n        \"name\": \"Permanente - cheveux courts\",\n        \"price\": 3200,\n        \"duration\": 45,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"976\",\n        \"cltype\": \"service\",\n        \"name\": \"Permanente - cheveux mi-longs\",\n        \"price\": 3600,\n        \"duration\": 50,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"977\",\n        \"cltype\": \"service\",\n        \"name\": \"Permanente - cheveux longs\",\n        \"price\": 4000,\n        \"duration\": 55,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"978\",\n        \"cltype\": \"service\",\n        \"name\": \"Coiffage Homme\",\n        \"price\": 800,\n        \"duration\": 10,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"979\",\n        \"cltype\": \"service\",\n        \"name\": \"Shampoing Homme\",\n        \"price\": 300,\n        \"duration\": 5,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"980\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe Homme\",\n        \"price\": 1500,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"981\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe Garçon (-10)\",\n        \"price\": 1200,\n        \"duration\": 20,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"982\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe Fille (-10)\",\n        \"price\": 1400,\n        \"duration\": 25,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"983\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe Garçon (-16)\",\n        \"price\": 1400,\n        \"duration\": 25,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"984\",\n        \"cltype\": \"service\",\n        \"name\": \"Coupe Fille (-16)\",\n        \"price\": 1600,\n        \"duration\": 30,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"985\",\n        \"cltype\": \"service\",\n        \"name\": \"Attachés (rapide) ou tresses\",\n        \"price\": 3000,\n        \"duration\": 30,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"986\",\n        \"cltype\": \"service\",\n        \"name\": \"Chignon soirée\",\n        \"price\": 5000,\n        \"duration\": 60,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"987\",\n        \"cltype\": \"service\",\n        \"name\": \"Chignon élégance\",\n        \"price\": 9000,\n        \"duration\": 75,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"988\",\n        \"cltype\": \"service\",\n        \"name\": \"Chignon prestige\",\n        \"price\": 12000,\n        \"duration\": 90,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ]\n      },\n      {\n        \"id\": \"989\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple - cheveux courts\",\n        \"price\": 3000,\n        \"duration\": 50,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"949\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux courts\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"952\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux courts\",\n            \"price\": 2000,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"955\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux courts\",\n            \"price\": 1200,\n            \"duration\": 15,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"985\",\n            \"cltype\": \"service\",\n            \"name\": \"Attachés (rapide) ou tresses\",\n            \"price\": 3000,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"990\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple - cheveux mi-longs\",\n        \"price\": 3200,\n        \"duration\": 50,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"950\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux mi-longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"953\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux mi-longs\",\n            \"price\": 2200,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"956\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux mi-longs\",\n            \"price\": 1400,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"991\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple - cheveux longs\",\n        \"price\": 3600,\n        \"duration\": 60,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"951\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"954\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux longs\",\n            \"price\": 2500,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"957\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux longs\",\n            \"price\": 1600,\n            \"duration\": 25,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"992\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Repousse - cheveux courts\",\n        \"price\": 4900,\n        \"duration\": 120,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"949\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux courts\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"952\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux courts\",\n            \"price\": 2000,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"955\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux courts\",\n            \"price\": 1200,\n            \"duration\": 15,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"962\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Repousse\",\n            \"price\": 2400,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"993\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Repousse - cheveux mi-longs\",\n        \"price\": 5300,\n        \"duration\": 130,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"950\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux mi-longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"953\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux mi-longs\",\n            \"price\": 2200,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"956\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux mi-longs\",\n            \"price\": 1400,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"962\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Repousse\",\n            \"price\": 2400,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"994\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Repousse - cheveux longs\",\n        \"price\": 5700,\n        \"duration\": 140,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"951\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"954\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux longs\",\n            \"price\": 2500,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"957\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux longs\",\n            \"price\": 1600,\n            \"duration\": 25,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"962\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Repousse\",\n            \"price\": 2400,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"995\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète - cheveux courts\",\n        \"price\": 5900,\n        \"duration\": 130,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"949\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux courts\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"952\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux courts\",\n            \"price\": 2000,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"955\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux courts\",\n            \"price\": 1200,\n            \"duration\": 15,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"963\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Complète - cheveux courts\",\n            \"price\": 3400,\n            \"duration\": 55,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"996\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète - cheveux mi-longs\",\n        \"price\": 6400,\n        \"duration\": 140,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"950\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux mi-longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"953\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux mi-longs\",\n            \"price\": 2200,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"956\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux mi-longs\",\n            \"price\": 1400,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"964\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Complète - cheveux mi-longs\",\n            \"price\": 3800,\n            \"duration\": 60,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"997\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Color. Complète - cheveux longs\",\n        \"price\": 6900,\n        \"duration\": 150,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"951\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"954\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux longs\",\n            \"price\": 2500,\n            \"duration\": 45,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"957\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux longs\",\n            \"price\": 1600,\n            \"duration\": 25,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"965\",\n            \"cltype\": \"service\",\n            \"name\": \"Coloration Complète - cheveux longs\",\n            \"price\": 4200,\n            \"duration\": 65,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"998\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Mèches / Balayage - cheveux courts\",\n        \"price\": 6900,\n        \"duration\": 120,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"949\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux courts\",\n            \"price\": 300,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"952\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux courts\",\n            \"price\": 2000,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"955\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux courts\",\n            \"price\": 1200,\n            \"duration\": 15,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"966\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux courts\",\n            \"price\": 4300,\n            \"duration\": 60,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"id\": \"999\",\n        \"cltype\": \"pack\",\n        \"name\": \"Shamp. + Coupe + Brush. Simple + Mèches / Balayage - cheveux mi-longs\",\n        \"price\": 7300,\n        \"duration\": 130,\n        \"businesses\": [\n          {\n            \"designation\": \"Coiffure\"\n          }\n        ],\n        \"offerings\": [\n          {\n            \"id\": \"950\",\n            \"cltype\": \"service\",\n            \"name\": \"Shampoing - cheveux mi-longs\",\n            \"price\": 500,\n            \"duration\": 5,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"953\",\n            \"cltype\": \"service\",\n            \"name\": \"Coupe - cheveux mi-longs\",\n            \"price\": 2200,\n            \"duration\": 30,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"956\",\n            \"cltype\": \"service\",\n            \"name\": \"Brushing Simple - cheveux mi-longs\",\n            \"price\": 1400,\n            \"duration\": 20,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          },\n          {\n            \"id\": \"967\",\n            \"cltype\": \"service\",\n            \"name\": \"Mèches / Balayage - cheveux mi-longs\",\n            \"price\": 4700,\n            \"duration\": 70,\n            \"businesses\": [\n              {\n                \"designation\": \"Coiffure\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"categories\": [\n      {\n        \"id\": \"2598\",\n        \"description\": \"-20 % de réduction sur les forfaits\",\n        \"name\": \"Programme Gold\"\n      },\n      {\n        \"id\": \"9761\",\n        \"description\": \"ils sont tops\",\n        \"name\": \"Mes clients fidèles\"\n      }\n    ],\n    \"collectiveGroups\": [\n      {\n        \"id\": \"2401\",\n        \"groupName\": \"RÉSIDENCE DU VALLON\",\n        \"phone\": \"0565711400\",\n        \"address\": {\n          \"id\": \"2402\",\n          \"street\": \"Cougousse\",\n          \"postalCode\": \"12330\",\n          \"city\": \"Salles La Source\",\n          \"country\": \"France\"\n        }\n      }\n    ],\n    \"paymentModes\": [\n      {\n        \"name\": \"CB\"\n      },\n      {\n        \"name\": \"Chèque\"\n      },\n      {\n        \"name\": \"Espèces\"\n      },\n      {\n        \"name\": \"Paylib\"\n      },\n      {\n        \"name\": \"Virement\"\n      }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Backup/control/json",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Backup",
								"control",
								"json"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"ADDRESS table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Address/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.id);",
									"",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"street\": \"47 Rue René Benoist\",\n    \"optional\": \"TRENDev SASU\",\n    \"postalCode\": \"77860\",\n    \"city\": \"Quincy-Voisins\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is undefined\"] = jsonData.optional === undefined;",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\":\"{{created_address_id}}\",\"street\":\"47 Rue René Benoist\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "Administrator",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 2 elements...\"] = jsonData.length >= 2;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body is correct\"] = responseBody >= 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Administrator/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200 ok\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"body content is has expected\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body.email).to.be.equal(\"comptandye@gmail.com\");",
									"    pm.expect(body.cltype).to.be.equal(\"Administrator\");",
									"    pm.expect(body.password).to.not.be.undefined;",
									"    pm.expect(body.username).to.be.equal(\"comptandye_admin\");",
									"    pm.expect(body.uuid).to.not.be.undefined;",
									"    pm.expect(body.uuid.startsWith(\"ADMIN-\")).to.be.true;",
									"    pm.expect(body.registrationDate).to.not.be.undefined;",
									"    pm.expect(body.blocked).to.be.false;",
									"});",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"comptandye@gmail.com\\\"\"] = jsonData.email === \"comptandye@gmail.com\";",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\\\"\"] = jsonData.password === \"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\";",
									"tests[\"username is \\\"comptandye_admin\\\"\"] = jsonData.username === username;",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups is undefined\"] = jsonData.userGroups === undefined;*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 201\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"body content is has expected\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body.email).to.be.equal(\"newadmin@trendev.fr\");",
									"    pm.expect(body.cltype).to.be.equal(\"Administrator\");",
									"    pm.expect(body.password).to.not.be.undefined;",
									"    pm.expect(body.username).to.be.equal(\"new_admin\");",
									"    pm.expect(body.uuid).to.not.be.undefined;",
									"    pm.expect(body.uuid.startsWith(\"ADMIN-\")).to.be.true;",
									"    pm.expect(body.registrationDate).to.not.be.undefined;",
									"    pm.expect(body.blocked).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"cltype\": \"Administrator\",\n    \"password\": \"PASSWORD\",\n    \"username\": \"new_admin\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"body content is has expected\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body.email).to.be.equal(\"newadmin@trendev.fr\");",
									"    pm.expect(body.cltype).to.be.equal(\"Administrator\");",
									"    pm.expect(body.password).to.not.be.undefined;",
									"    pm.expect(body.username).to.be.equal(\"LewAshby\");",
									"    pm.expect(body.uuid).to.not.be.undefined;",
									"    pm.expect(body.uuid.startsWith(\"ADMIN-\")).to.be.true;",
									"    pm.expect(body.registrationDate).to.not.be.undefined;",
									"    pm.expect(body.blocked).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"cltype\": \"Administrator\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"LewAshby\",\n    \"uuid\":\"another_one\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/newadmin@trendev.fr",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"newadmin@trendev.fr"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"body content is has expected\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.not.be.empty;",
									"    var userGroup = body[0];",
									"    pm.expect(userGroup.name).to.be.equal(\"Administrator\");",
									"    pm.expect(userGroup.description).to.be.equal(\"Administrator Group\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"body content is has expected\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body.name).to.be.equal(\"Individual\");",
									"    pm.expect(body.description).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/insertToUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"insertToUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"body content is has expected\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body.name).to.be.equal(\"Individual\");",
									"    pm.expect(body.description).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/removeFromUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"removeFromUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				}
			],
			"description": "Manage Administrators. Requires Administrator Authorization."
		},
		{
			"name": "BasicExpense",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"Expense table is not empty\"] = jsonData.length >= 1;*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/BasicExpense",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/BasicExpense/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"basic\\\"\"] = jsonData.cltype === \"basic\";",
									"tests[\"description is \\\"Purple Color\\\"\"] = jsonData.description === \"Purple Color\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"provider is \\\"L'OREAL\\\"\"] = jsonData.provider === \"L'OREAL\";",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"basic\",\n  \"description\":\"Purple Color\",\n  \"amount\":4050,\n  \"paymentDate\":1505707896023,\n  \"provider\":\"L'OREAL\",\n  \"vatInclusive\": false,\n  \"categories\": [\n            \"Color\",\n            \"Perfect Color from Paris\"\n    ],\n    \"payments\": [\n            {\n        \"amount\": 4000,\n                \"paymentMode\": {\n                    \"name\": \"CB\"\n                }\n            },\n            {\n                \"amount\": 50,\n                \"paymentMode\": {\n                    \"name\": \"Espèces\"\n                }\n            }\n        ],\n    \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n    ],\n    \"expenseItems\":[\n      {\n      \"description\":\"Purple #1\",\n      \"amount\":1000,\n      \"qty\":2,\n      \"vatRate\":20\n      },\n      {\n      \"description\":\"Purple #2\",\n      \"amount\":500,\n      \"qty\":3,\n      \"vatRate\":10\n      }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/BasicExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"basic\\\"\"] = jsonData.cltype === \"basic\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description === \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_expense_id}}\",\n  \"cltype\": \"basic\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/BasicExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update - cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"basic\\\"\"] = jsonData.cltype === \"basic\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description === \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_expense_id}}\",\n  \"cltype\": \"basic\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"cancelled\":true,\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/BasicExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.get(\"created_expense_id\");",
									"//created_expense_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.id == pm.environment.get(\"created_expense_id\");",
									"",
									"tests[\"cltype is \\\"basic\\\"\"] = jsonData.cltype === \"basic\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description === \"Purple Color sticks\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/BasicExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/BasicExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"BasicExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Business",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"body content is not empty\", function() {",
									"    pm.response.to.have.jsonBody();",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Business",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Business/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is defined\"] = jsonData.designation !== undefined;",
									"pm.environment.set(\"created_business_designation\", jsonData.designation);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"designation\": \"beauty_at_home\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Business",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is \"+pm.environment.get(\"created_business_designation\")] = jsonData.designation == pm.environment.get(\"created_business_designation\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Category table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Category",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Category/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 201\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.be.success;",
									"});",
									"",
									"pm.test(\"response has a json body\", function() {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"var body = pm.response.json();",
									"",
									"pm.test(\"id is defined\", function() {",
									"    pm.expect(body.id).to.not.be.undefined;",
									"    pm.environment.set(\"created_category_id\", body.id);",
									"});",
									"",
									"pm.test(\"name is \\\"NEW_CATEGORY\\\"\", function() {",
									"    pm.expect(body.name).to.be.equal(\"NEW_CATEGORY\");",
									"});",
									"",
									"pm.test(\"description is \\\"This a new category for special clients\\\"\", function() {",
									"    pm.expect(body.description).to.be.equal(\"This a new category for special clients\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"NEW_CATEGORY\",\n  \"description\":\"This a new category for special clients\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"response has a json body\", function() {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"var body = pm.response.json();",
									"",
									"pm.test(\"id is \"+pm.environment.get(\"created_category_id\"), function() {",
									"    pm.expect(body.id).to.not.be.undefined;",
									"    pm.expect(pm.environment.get(\"created_category_id\")).to.equal(body.id);",
									"});",
									"",
									"pm.test(\"name is \\\"NEW_CATEGORY\\\"\", function() {",
									"    pm.expect(body.name).to.be.equal(\"NEW_CATEGORY\");",
									"});",
									"",
									"pm.test(\"description is \\\"This a new category for special clients\\\"\", function() {",
									"    pm.expect(body.description).to.be.equal(\"This a new category for special clients\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"response has a json body\", function() {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"var body = pm.response.json();",
									"",
									"pm.test(\"id is \"+pm.environment.get(\"created_category_id\"), function() {",
									"    pm.expect(body.id).to.not.be.undefined;",
									"    pm.expect(pm.environment.get(\"created_category_id\")).to.equal(body.id);",
									"});",
									"",
									"pm.test(\"name is \\\"New Category\\\"\", function() {",
									"    pm.expect(body.name).to.be.equal(\"New Category\");",
									"});",
									"",
									"pm.test(\"description is \\\"This a new description for the Category\\\"\", function() {",
									"    pm.expect(body.description).to.be.equal(\"This a new description for the Category\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_category_id}}\",\n  \"name\":\"New Category\",\n  \"description\":\"This a new description for the Category\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addClient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer '+pm.environment.get('JWT')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                email:\"newclient@domain.com\",",
									"                address:{",
									"                    street:\"79 avenue de la jonchère\",",
									"                    optional:\"appart A113\",",
									"                    postalCode:\"77600\",",
									"                    city:\"Chanteloup-en-Brie\"",
									"                },",
									"                customerDetails:{",
									"                    firstName:\"John\",",
									"                    lastName:\"DOE\",",
									"                    nickname:\"WhoIsHe\",",
									"                    sex:'M'",
									"                }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/addClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"addClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/clients?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"clients"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client/\"+pm.environment.get('created_client_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer '+pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/removeClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"removeClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"response has a json body\", function() {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"pm.test(\"Client table is not empty\", function() {",
									"    var body = pm.response.json();",
									"    pm.expect(body.length).to.be.above(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Client",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Client/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_client_id\", jsonData.id);",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"client@domain.com\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  },\n  \"socialNetworkAccounts\":{\n    \"twitter\":\"@client_facebook_account\"\n  },\n  \"customerDetails\":{\n    \"firstName\":\"Paul\",\n    \"lastName\":\"Newman\",\n    \"sex\":\"M\",\n    \"comments\":[\n      \"old american actor\",\n      \"old shool boy\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client_email02@domain.com\\\"\"] = jsonData.email === \"client_email02@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"tests[\"socialNetworkAccounts.facebook is \\\"https://facebook.com/client_account\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://facebook.com/client_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_client_id}}\",\n  \"email\":\"client_email02@domain.com\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  },\n  \"socialNetworkAccounts\":{\n    \"twitter\":\"@client_facebook_account\",\n    \"facebook\":\"https://facebook.com/client_account\"\n  },\n  \"customerDetails\":{\n    \"firstName\":\"Paul\",\n    \"lastName\":\"Newman\",\n    \"sex\":\"M\",\n    \"comments\":[\n      \"old american actor\",\n      \"old shool boy\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClientBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/clientBills?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"clientBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/categories?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"categories"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ClientBill",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE ClientBill) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ClientBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ClientBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0, 0, 0, 0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            name: \"beauty service\",",
									"            price: 1500,",
									"            duration: 180,",
									"            businesses: [{",
									"                designation: \"Esthétique\"",
									"            }],",
									"            cltype: \"service\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 13,",
									"            \"thresholdWarning\": 2,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Sale?professional=vanessa.gay@gmail.com\",",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                name: \"beauty product\",",
									"                qty: 2,",
									"                price: 1000,",
									"                businesses: [{",
									"                    designation: \"Esthétique\"",
									"                }],",
									"                cltype: \"sale\",",
									"                product: {",
									"                    \"availableQty\": 13,",
									"                    \"thresholdWarning\": 2,",
									"                    \"thresholdSevere\": 1,",
									"                    \"comments\": [",
									"                        \"No restriction\",",
									"                        \"ok for me\"",
									"                    ],",
									"                    \"productReference\": {",
									"                        \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                        \"description\": \"blond color stick\",",
									"                        \"brand\": \"L'OREAL\",",
									"                        \"business\": {",
									"                            \"designation\": \"Coiffure\"",
									"                        }",
									"                    }",
									"                }",
									"            })",
									"        }",
									"    }, function(err, response) {",
									"        console.log(response.json());",
									"        pm.environment.set(\"created_sale_id\", response.json().id);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":9000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_offering_id}}\",\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    },\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_sale_id}}\",\n        \"cltype\": \"sale\",\n        \"name\": \"beauty service\",\n        \"price\": 1000,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":\"{{created_client_id}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "identify autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"There is one or more SoldItem\"] = jsonData.length >= 1;",
									"",
									"var solditems = jsonData;",
									"solditems.sort(function(si1, si2) {",
									"    return si2.recordDate - si1.recordDate; // reorder : most recent first...",
									"});",
									"",
									"// the auto created sold item should be the last one...",
									"var autoCreatedSoldItem = solditems[0];",
									"",
									"// save the id",
									"pm.environment.set(\"auto_created_product_record_id\", autoCreatedSoldItem.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"cltype is clientbill\"] = jsonData.cltype === \"clientbill\";",
									"tests[\"amount is 9000\"] = jsonData.amount === 9000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"client.id is \"+pm.environment.get(\"created_client_id\")] = jsonData.client.id == pm.environment.get(\"created_client_id\");",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.purchasedOfferings[0].offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_clientbill_reference}}\",\n    \"deliveryDate\": {{created_clientbill_deliveryDate}},\n    \"paymentDate\": {{created_clientbill_deliveryDate}},\n    \"cltype\": \"clientbill\",\n    \"amount\": 9000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 8000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"client\": {\n        \"id\": \"{{created_client_id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update a paid bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"cltype is clientbill\"] = jsonData.cltype === \"clientbill\";",
									"tests[\"amount is 9000\"] = jsonData.amount === 9000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"",
									"/*Bills is paid and cannot be cancelled using this service*/",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"client.id is \"+pm.environment.get(\"created_client_id\")] = jsonData.client.id == pm.environment.get(\"created_client_id\");",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.purchasedOfferings[0].offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_clientbill_reference}}\",\n    \"deliveryDate\": {{created_clientbill_deliveryDate}},\n    \"paymentDate\": {{created_clientbill_deliveryDate}},\n    \"cltype\": \"clientbill\",\n    \"amount\": 9000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"cancelled\": true,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 8000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"client\": {\n        \"id\": \"{{created_client_id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Cancel a paid bill will do nothing : bill is definitively closed."
					},
					"response": []
				},
				{
					"name": "cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"response has a json body\", function() {",
									"    pm.response.to.have.jsonBody();",
									"});",
									"",
									"var body = pm.response.json();",
									"",
									"pm.test(\"Bill is cancelled\", function() {",
									"    pm.expect(body.cancelled).to.be.true;",
									"    pm.expect(body.cancellationDate).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/cancel/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"cancel",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Cancel a paid bill will do nothing : bill is definitively closed."
					},
					"response": []
				},
				{
					"name": "delete autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{auto_created_product_record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{auto_created_product_record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service/\" + pm.environment.get('created_offering_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Sale/\" + pm.environment.get('created_sale_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"        pm.sendRequest({",
									"            url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"            header: {",
									"                'Content-Type': 'application/json',",
									"                'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"            },",
									"            method: 'DELETE'",
									"        }, function(err, res) {",
									"            pm.expect(res).to.have.property('code', 200);",
									"            pm.expect(res).to.have.property('status', 'OK');",
									"        });",
									"    });",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Client/\" + pm.environment.get('created_client_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroup",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CollectiveGroup table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_collectivegroup_id\", jsonData.id);",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",\n  \"phone\":\"0123456789\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"E.H.P.A.D. LE CHATEAU DE FONTENELLE\\\"\"] = jsonData.groupName === \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\";",
									"tests[\"phone is \\\"0132547698\\\"\"] = jsonData.phone === \"0132547698\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée Fontenelle\\\"\"] = jsonData.address.street === \"Allée Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{created_collectivegroup_id}}\",\n    \"groupName\": \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\",\n    \"phone\": \"0132547698\",\n    \"address\": {\n        \"street\": \"Allée Fontenelle\",\n        \"optional\": \"Château de Fontenelle\",\n        \"postalCode\": \"77600\",\n        \"city\": \"Chanteloup-en-Brie\",\n        \"country\": \"France\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroupBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/collectiveGroupBills?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"collectiveGroupBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroupBill",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE CollectiveGroupBill) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0,0,0,0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/CollectiveGroup?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"              \"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",",
									"              \"phone\":\"0123456789\",",
									"              \"address\":{",
									"                \"street\":\"Allée de Fontenelle\",",
									"                \"optional\":\"Château de Fontenelle\",",
									"                \"postalCode\":\"77600\",",
									"                \"city\":\"Chanteloup-en-Brie\"",
									"              }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_collectivegroup_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_collectivegroupbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_collectivegroupbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"collectivegroupbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_offering_id}}\",\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"collectiveGroup\":{\n    \"id\":\"{{created_collectivegroup_id}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_collectivegroupbill_reference\")] = jsonData.reference == pm.environment.get(\"created_collectivegroupbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_collectivegroupbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_collectivegroupbill_deliveryDate\");",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup.id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"tests[\"purchasedOfferings[0].id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = pm.environment.get(\"created_purchasedoffering_id\") == jsonData.purchasedOfferings[0].id;",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/{{created_collectivegroupbill_reference}}/{{created_collectivegroupbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"{{created_collectivegroupbill_reference}}",
								"{{created_collectivegroupbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_collectivegroupbill_reference\")] = jsonData.reference == pm.environment.get(\"created_collectivegroupbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_collectivegroupbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_collectivegroupbill_deliveryDate\");",
									"",
									"tests[\"cltype is collectivegroupbill\"] = jsonData.cltype === \"collectivegroupbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup.id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"tests[\"purchasedOfferings[0].id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = pm.environment.get(\"created_purchasedoffering_id\") == jsonData.purchasedOfferings[0].id;",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_collectivegroupbill_reference}}\",\n    \"deliveryDate\": {{created_collectivegroupbill_deliveryDate}},\n    \"paymentDate\": {{created_collectivegroupbill_deliveryDate}},\n    \"cltype\": \"collectivegroupbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": \"{{created_offering_id}}\",\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"collectiveGroup\":{\n      \"id\":\"{{created_collectivegroup_id}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/CollectiveGroup/\"+pm.environment.get('created_collectivegroup_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/{{created_collectivegroupbill_reference}}/{{created_collectivegroupbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"{{created_collectivegroupbill_reference}}",
								"{{created_collectivegroupbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CustomerDetails",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CustomerDetails table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.id);",
									"",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"jobrole is \\\"dancer\\\"\"] = jsonData.jobrole === \"dancer\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"nickname\": \"X\",\n        \"jobrole\": \"dancer\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": {{birthdate}},\n        \"sex\": \"M\",\n        \"picturePath\": \"C:/Documents and Settings/whateverUwant.png\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\"\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is undefine\"] = jsonData.nickname === undefined;",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \\\"1467986000\\\"\"] = jsonData.birthdate === 1467986000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is undefined\"] = jsonData.picturePath === undefined;",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 5;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\":\"{{created_customer_details_id}}\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": 1467986000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\",\n            \"But he has no name LOL\"\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code is 200\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.success;",
									"    pm.response.to.be.ok;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ExpenseItem",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"ExpenseItem table is not empty\"] = jsonData.length >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ExpenseItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"/*tests[\"Total count >= 1\"] = responseBody >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ExpenseItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense-item_id\", jsonData.id);",
									"",
									"tests[\"description is \\\"An expense itemt\\\"\"] = jsonData.description === \"An expense item\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"vatRate is 10\"] = jsonData.vatRate === 10;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\":\"An expense item\",\n  \"amount\": 1000,\n  \"qty\":2,\n  \"vatRate\":10\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_expense-item_id\")] = jsonData.id == pm.environment.get(\"created_expense-item_id\");",
									"tests[\"description is \\\"An expense itemt\\\"\"] = jsonData.description === \"An expense item\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"vatRate is 10\"] = jsonData.vatRate === 10;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ExpenseItem/{{created_expense-item_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem",
								"{{created_expense-item_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_expense-item_id\")] = jsonData.id == pm.environment.get(\"created_expense-item_id\");",
									"tests[\"description is \\\"An expense itemt\\\"\"] = jsonData.description === \"An expense item\";",
									"tests[\"amount is 1500\"] = jsonData.amount === 1500;",
									"tests[\"qty is 3\"] = jsonData.qty === 3;",
									"tests[\"vatRate is 10\"] = jsonData.vatRate === 10;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{created_expense-item_id}}\",\n    \"description\": \"An expense item\",\n    \"amount\": 1500,\n    \"qty\": 3,\n    \"vatRate\": 10\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem/{{created_expense-item_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem",
								"{{created_expense-item_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "Individual",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Individual/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962,11,25));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\";",
									"tests[\"cltype is Individual\"] = jsonData.cltype === \"Individual\";",
									"",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.password).to.not.be.undefined;",
									"});",
									"",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"individual@gmail.com\",\n  \"cltype\":\"Individual\",\n  \"password\":\"PASSWORD\",\n  \"username\":\"individual_test\",\n  \"customerDetails\": {\n            \"firstName\": \"prenom\",\n            \"lastName\": \"nom\",\n            \"nickname\": \"surnom\",\n            \"phone\": \"0102030405\",\n            \"birthdate\": {{birthdate}},\n            \"sex\": \"F\",\n            \"comments\": [\n                \"Cool\",\n                \"Good looking\",\n                \"Open minded\",\n                \"Likes art and music\",\n                \"Nice hair\"\n            ]\n        },\n        \"address\": {\n          \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"Chanteloup-en-Brie\"\n        },\n        \"socialNetworkAccounts\": {\n          \"facebook\": \"https://www.facebook.com/individual\",\n            \"twitter\": \"@individualtwitter\",\n            \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"\n        }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\"",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.password).to.not.be.undefined;",
									"});",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\";",
									"tests[\"cltype is Individual\"] = jsonData.cltype === \"Individual\";",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.password).to.not.be.undefined;",
									"});",
									"tests[\"username is \\\"ind_test\\\"\"] = jsonData.username === \"ind_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"individual@gmail.com\",\n    \"cltype\": \"Individual\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"ind_test\",\n    \"registrationDate\": 1504361329000,\n    \"customerDetails\": {\n        \"id\": \"{{created_customer_details_id}}\",\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": \"{{created_address_id}}\",\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": \"{{created_socialnetworkaccounts_id}}\",\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Individual UserGroup\"] = responseBody.has(\"Individual\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIndividualBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/individualBills",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"individualBills"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/insertToUserGroup/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"insertToUserGroup",
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/removeFromUserGroup/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"removeFromUserGroup",
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/buildBusinessRelationship/vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"buildBusinessRelationship",
								"vanessa.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProfessionals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/professionals",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"professionals"
							]
						}
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/endBusinessRelationship/vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"endBusinessRelationship",
								"vanessa.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IndividualBill",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE IndividualBill) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/IndividualBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/IndividualBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0, 0, 0, 0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962, 11, 25));",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Individual\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": \"individual@gmail.com\",",
									"            \"cltype\": \"Individual\",",
									"            \"password\": \"PASSWORD\",",
									"            \"username\": \"individual_test\",",
									"            \"customerDetails\": {",
									"                \"firstName\": \"prenom\",",
									"                \"lastName\": \"nom\",",
									"                \"nickname\": \"surnom\",",
									"                \"phone\": \"0102030405\",",
									"                \"birthdate\": pm.environment.get(\"birthdate\"),",
									"                \"sex\": \"F\",",
									"                \"comments\": [",
									"                    \"Cool\",",
									"                    \"Good looking\",",
									"                    \"Open minded\",",
									"                    \"Likes art and music\",",
									"                    \"Nice hair\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"10 route de la ferme du pavillon\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\"",
									"            },",
									"            \"socialNetworkAccounts\": {",
									"                \"facebook\": \"https://www.facebook.com/individual\",",
									"                \"twitter\": \"@individualtwitter\",",
									"                \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_individual_email\", response.json().email);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            name: \"beauty service\",",
									"            price: 1500,",
									"            duration: 180,",
									"            businesses: [{",
									"                designation: \"Esthétique\"",
									"            }],",
									"            cltype: \"service\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_offering_id\", response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_individualbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_individualbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"",
									"tests[\"email is \" + pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"pm.test(\"password is defined\", function() {",
									"    pm.expect(jsonData.individual.password).to.not.be.undefined;",
									"",
									"});",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \" + new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962, 11, 25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"individualbill\",\n    \"deliveryDate\":{{billdate}},\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_offering_id}}\",\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"individual\":{\n    \"email\":\"{{created_individual_email}}\",\n    \"cltype\":\"Individual\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"reference is \"+pm.environment.get(\"created_individualbill_reference\")] = jsonData.reference == pm.environment.get(\"created_individualbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_individualbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_individualbill_deliveryDate\");",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.individual.password).to.not.be.undefined;",
									"});",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/IndividualBill/{{created_individualbill_reference}}/{{created_individualbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"{{created_individualbill_reference}}",
								"{{created_individualbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"reference is \" + pm.environment.get(\"created_individualbill_reference\")] = jsonData.reference == pm.environment.get(\"created_individualbill_reference\");",
									"tests[\"deliveryDate is \" + pm.environment.get(\"created_individualbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_individualbill_deliveryDate\");",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \" + new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"email is \" + pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"pm.test(\"password is defined\", function() {",
									"    pm.expect(jsonData.individual.password).to.not.be.undefined;",
									"",
									"});",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \" + new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962, 11, 25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_individualbill_reference}}\",\n    \"deliveryDate\": {{created_individualbill_deliveryDate}},\n    \"paymentDate\":{{created_individualbill_deliveryDate}},\n    \"cltype\": \"individualbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": \"{{created_offering_id}}\",\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n  \"individual\":{\n    \"email\":\"{{created_individual_email}}\",\n    \"cltype\":\"Individual\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service/\" + pm.environment.get('created_offering_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Individual/\" + pm.environment.get('created_individual_email'),",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/{{created_individualbill_reference}}/{{created_individualbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"{{created_individualbill_reference}}",
								"{{created_individualbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pack",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Pack",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Pack/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_pack_id\", jsonData.id);",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"MASTER PACK\",\n  \"price\":100000,\n  \"duration\":600,\n  \"cltype\":\"pack\",\n  \"businesses\": [\n        {\n                \"designation\": \"Coiffure\"\n        }\n  ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/purchasedOfferings?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"purchasedOfferings"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getParentPacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/parentPacks?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"parentPacks"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"WEDDING PACK\\\"\"] = jsonData.name === \"WEDDING PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"businesses length is 2\"] = jsonData.businesses.length === 2;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{created_pack_id}}\",\n    \"name\": \"WEDDING PACK\",\n    \"price\": 100000,\n    \"duration\": 600,\n    \"cltype\": \"pack\",\n    \"businesses\": [\n        {\n            \"designation\": \"Coiffure\"\n        },\n        {\n            \"designation\": \"Esthétique\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addService",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:10000,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_service_id\", response.json().id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_service_id environment variable is stored as a string...",
									"tests[\"id is \" + pm.environment.get(\"created_service_id\")] = jsonData.id == pm.environment.get(\"created_service_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addService/offering/{{created_service_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addService",
								"offering",
								"{{created_service_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addSale",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 3,",
									"            \"thresholdWarning\": 2,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Sale?professional=vanessa.gay@gmail.com\",",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                name: \"beauty product\",",
									"                price: 10000,",
									"                qty: 2,",
									"                businesses: [{",
									"                    designation: \"Esthétique\"",
									"                }],",
									"                cltype: \"sale\",",
									"                product: {",
									"                    \"availableQty\": 3,",
									"                    \"thresholdWarning\": 2,",
									"                    \"thresholdSevere\": 1,",
									"                    \"comments\": [",
									"                        \"No restriction\",",
									"                        \"ok for me\"",
									"                    ],",
									"                    \"productReference\": {",
									"                        \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                        \"description\": \"blond color stick\",",
									"                        \"brand\": \"L'OREAL\",",
									"                        \"business\": {",
									"                            \"designation\": \"Coiffure\"",
									"                        }",
									"                    }",
									"                }",
									"            })",
									"        }",
									"    }, function(err, response) {",
									"        console.log(response.json());",
									"        pm.environment.set(\"created_sale_id\", response.json().id);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_sale_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_sale_id\")] = jsonData.id == pm.environment.get(\"created_sale_id\");",
									"tests[\"name is \\\"beauty product\\\"\"] = jsonData.name === \"beauty product\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 0\"] = jsonData.duration === 0;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addSale/offering/{{created_sale_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addSale",
								"offering",
								"{{created_sale_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addPack",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Pack?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            name: \"SubPack for Winners\",",
									"            price: 5000,",
									"            duration: 10,",
									"            businesses: [{",
									"                designation: \"Esthétique\"",
									"            }],",
									"            cltype: \"pack\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_subpack_id\", response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addPack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addPack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeService",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service/\" + pm.environment.get('created_service_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_service_id environment variable is stored as a string...",
									"tests[\"id is \" + pm.environment.get(\"created_service_id\")] = jsonData.id == pm.environment.get(\"created_service_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removeService/offering/{{created_service_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removeService",
								"offering",
								"{{created_service_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeSale",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Sale/\" + pm.environment.get('created_sale_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"        pm.sendRequest({",
									"            url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"            header: {",
									"                'Content-Type': 'application/json',",
									"                'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"            },",
									"            method: 'DELETE'",
									"        }, function(err, res) {",
									"            pm.expect(res).to.have.property('code', 200);",
									"            pm.expect(res).to.have.property('status', 'OK');",
									"        });",
									"    });",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_sale_id environment variable is stored as a string...",
									"tests[\"id is \" + pm.environment.get(\"created_sale_id\")] = jsonData.id == pm.environment.get(\"created_sale_id\");",
									"tests[\"name is \\\"beauty product\\\"\"] = jsonData.name === \"beauty product\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 0\"] = jsonData.duration === 0;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removeSale/offering/{{created_sale_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removeSale",
								"offering",
								"{{created_sale_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removePack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \" + pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Pack/\" + pm.environment.get('created_subpack_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removePack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removePack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payment table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Payment/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_payment_id\", jsonData.id);",
									"",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\":100,\n  \"paymentMode\":\n  {\n    \"name\":\"CB\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 200\"] = jsonData.amount === 200;",
									"tests[\"paymentMode.name is \\\"Chèque\\\"\"] = jsonData.paymentMode.name === \"Chèque\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_payment_id}}\",\n  \"amount\":200,\n  \"paymentMode\":\n  {\n    \"name\":\"Chèque\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PaymentMode",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"PaymentMode table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PaymentMode",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PaymentMode/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is defined\"] = jsonData.name !== undefined;",
									"pm.environment.set(\"created_paymentmode_name\", jsonData.name);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"BitCoins\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \"+pm.environment.get(\"created_paymentmode_name\")] = jsonData.name == pm.environment.get(\"created_paymentmode_name\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Product table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Product",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Product/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response is 201 Created',function(){",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.status(\"Created\");",
									"})",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('availableQty is 3',function(){",
									"    pm.expect(jsonData.availableQty).to.equal(3);",
									"})",
									"",
									"pm.test('thresholdWarning is 2 and thresholdSevere is 1',function(){",
									"    pm.expect(jsonData.thresholdWarning).to.equal(2);",
									"    pm.expect(jsonData.thresholdSevere).to.equal(1);",
									"})",
									"",
									"var pr = {",
									"        \"description\": \"blond color stick\",",
									"        \"brand\": \"L'OREAL\",",
									"        \"business\": {",
									"            \"designation\": \"Coiffure\"",
									"        }",
									"    };",
									"pr.barcode = pm.environment.get('created_product-reference_barcode');",
									"    ",
									"pm.test('productReference is correct',function(){",
									"    pm.expect(jsonData.productReference).to.deep.equal(pr);",
									"})",
									"",
									"pm.test('comments.length is 2',function(){",
									"    pm.expect(jsonData.comments).to.have.lengthOf(2);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"availableQty\": 3,\n        \"thresholdWarning\": 2,\n        \"thresholdSevere\": 1,\n        \"comments\":[\n        \t\"No restriction\",\n        \t\"ok for me\"\n        ],\n        \"productReference\": {\n\t\"barcode\": \"{{created_product-reference_barcode}}\",\n\t\"description\": \"blond color stick\",\n\t\"brand\": \"L'OREAL\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n}\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/Product?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Response is 200 OK',function(){",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('availableQty is 3',function(){",
									"    pm.expect(jsonData.availableQty).to.equal(3);",
									"})",
									"",
									"pm.test('thresholdWarning is 2 and thresholdSevere is 1',function(){",
									"    pm.expect(jsonData.thresholdWarning).to.equal(2);",
									"    pm.expect(jsonData.thresholdSevere).to.equal(1);",
									"})",
									"",
									"var pr = {",
									"        \"description\": \"blond color stick\",",
									"        \"brand\": \"L'OREAL\",",
									"        \"business\": {",
									"            \"designation\": \"Coiffure\"",
									"        }",
									"    };",
									"pr.barcode = pm.environment.get('created_product-reference_barcode');",
									"    ",
									"pm.test('productReference is correct',function(){",
									"    pm.expect(jsonData.productReference).to.deep.equal(pr);",
									"})",
									"",
									"pm.test('comments.length is 2',function(){",
									"    pm.expect(jsonData.comments).to.have.lengthOf(2);",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response is 200 OK',function(){",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('availableQty is 3',function(){",
									"    pm.expect(jsonData.availableQty).to.equal(3);",
									"})",
									"",
									"pm.test('thresholdWarning is 3 and thresholdSevere is 2',function(){",
									"    pm.expect(jsonData.thresholdWarning).to.equal(3);",
									"    pm.expect(jsonData.thresholdSevere).to.equal(2);",
									"})",
									"",
									"var pr = {",
									"        \"description\": \"blond color stick\",",
									"        \"brand\": \"L'OREAL\",",
									"        \"business\": {",
									"            \"designation\": \"Coiffure\"",
									"        }",
									"    };",
									"pr.barcode = pm.environment.get('created_product-reference_barcode');",
									"    ",
									"pm.test('productReference is correct',function(){",
									"    pm.expect(jsonData.productReference).to.deep.equal(pr);",
									"})",
									"",
									"pm.test('comments.length is 1',function(){",
									"    pm.expect(jsonData.comments).to.have.lengthOf(1);",
									"    pm.expect(jsonData.comments[0]).to.equal('Just one comment');",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"availableQty\": 3,\n        \"thresholdWarning\": 3,\n        \"thresholdSevere\": 2,\n        \"comments\":[\n        \t\"Just one comment\"\n        ],\n        \"productReference\": {\n\t\t\t\"barcode\": \"{{created_product-reference_barcode}}\"\n\t\t}\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/Product?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getSales",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}/sales?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}",
								"sales"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getProductRecords",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}/productRecords?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}",
								"productRecords"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ProductReference",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ProductReference",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ProductReference/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"barcode is defined\"] = jsonData.barcode !== undefined;",
									"pm.environment.set(\"created_product-reference_barcode\", jsonData.barcode);",
									"",
									"tests[\"description is \\\"blond color stick\\\"\"] = jsonData.description === \"blond color stick\";",
									"tests[\"brand is \\\"L'OREAL\\\"\"] = jsonData.brand === \"L'OREAL\";",
									"tests[\"business.designation is \\\"Coiffure\\\"\"] = jsonData.business.designation === \"Coiffure\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"barcode\": \"1234567899\",\n\t\"description\": \"blond color stick\",\n\t\"brand\": \"L'OREAL\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"description is \\\"blond color stick\\\"\"] = jsonData.description === \"blond color stick\";",
									"tests[\"brand is \\\"L'OREAL\\\"\"] = jsonData.brand === \"L'OREAL\";",
									"tests[\"business.designation is \\\"Coiffure\\\"\"] = jsonData.business.designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ProductReference/{{created_product-reference_barcode}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"{{created_product-reference_barcode}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									" pm.test(\"response should be 200 OK\", function () {",
									"           pm.response.to.be.ok",
									" });",
									" ",
									" var jsonData = pm.response.json();",
									" ",
									" pm.test(\"response should contain an array with at least one ProductReference\", function(){",
									"     pm.expect(Array.isArray(jsonData)).to.be.true;",
									"     pm.expect(jsonData.length).gt(0);",
									"});",
									" ",
									"pm.test(\"response should contain barcode \"+pm.environment.get(\"created_product-reference_barcode\"),function(){",
									"    ",
									"    var pr = jsonData",
									"        .filter(pr => pr.barcode === pm.environment.get(\"created_product-reference_barcode\"))",
									"        .pop();",
									"    ",
									"    pm.expect(pr.barcode).to.equal(pm.environment.get(\"created_product-reference_barcode\"));",
									" });",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"searched_product-reference_barcode\", pm.environment.get(\"created_product-reference_barcode\").substring(0,4));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ProductReference/search/{{searched_product-reference_barcode}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"search",
								"{{searched_product-reference_barcode}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"",
									"tests[\"description is \\\"black color stick\\\"\"] = jsonData.description === \"black color stick\";",
									"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
									"tests[\"business.designation is \\\"Coiffure\\\"\"] = jsonData.business.designation === \"Coiffure\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"barcode\": \"{{created_product-reference_barcode}}\",\n\t\"description\": \"black color stick\",\n\t\"brand\": \"WELLA\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference/{{created_product-reference_barcode}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"{{created_product-reference_barcode}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "Professional",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;",
									"",
									"tests[\"vanessa.gay@gmail.com\"] = responseBody.has(\"vanessa.gay@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"cltype is Professional\"] = jsonData.cltype === \"Professional\";",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.password).to.not.be.undefined;",
									"});",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails.jobrole is \\\"Coiffeur\\\"\"] = jsonData.customerDetails.jobrole === \"Coiffeur\"",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0132039405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 4\"] = jsonData.customerDetails.comments.length === 4;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"79 Avenue de la jonchère\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pro@domain.com\",\n    \"cltype\": \"Professional\",\n    \"password\": \"PASSWORD\",\n    \"username\": \"pro_test\",\n    \"customerDetails\": {\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Author\",\n        \"jobrole\": \"Coiffeur\",\n        \"phone\": \"0132039405\",\n        \"birthdate\": {{birthdate}},\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"street\": \"79 Avenue de la jonchère\",\n        \"optional\": \"Appart A113\",\n        \"postalCode\": \"77600\",\n        \"city\": \"Chanteloup-en-Brie\"\n    },\n    \"socialNetworkAccounts\": {\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    },\n    \"companyName\": \"Californation\",\n    \"companyID\": \"55211846503644\",\n    \"vatcode\": \"FR91552118465\",\n    \"creationDate\": 1483225200000,\n    \"businesses\": [\n        {\n            \"designation\": \"Coiffure\"\n        }\n    ],\n    \"paymentModes\": [\n        {\n            \"name\": \"Espèces\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "buildModelOfferings",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/OfferingsModel/build/?professional=pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"OfferingsModel",
								"build",
								""
							],
							"query": [
								{
									"key": "professional",
									"value": "pro@domain.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/offerings?email=pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"offerings"
							],
							"query": [
								{
									"key": "email",
									"value": "pro@domain.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.password).to.not.be.undefined;",
									"});",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0132039405\\\"\"] = jsonData.customerDetails.phone === \"0132039405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 4;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"tests[\"street is \\\"79 Avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 Avenue de la jonchère\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\";",
									"tests[\"cltype is Professional\"] = jsonData.cltype === \"Professional\";",
									"pm.test(\"password is defined\", function(){",
									"    pm.expect(jsonData.password).to.not.be.undefined;",
									"});",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"tests[\"companyName is \\\"Boss Company\\\"\"] = jsonData.companyName === \"Boss Company\";",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pro@domain.com\",\n    \"cltype\":\"Professional\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"pro_test\",\n    \"uuid\": \"PRO_d7d1b42c88b8450c96236d0a0f5b8294\",\n    \"registrationDate\": 1504361329000,\n    \"vatcode\": \"FR91552118465\",\n    \"companyName\": \"Boss Company\",\n    \"customerDetails\": {\n        \"id\": \"{{created_customer_details_id}}\",\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": \"{{created_address_id}}\",\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": \"{{created_socialnetworkaccounts_id}}\",\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    },\n    \"businesses\":[\n      {\n          \"designation\": \"Coiffure\"\n      },\n      {\n          \"designation\": \"Esthétique\"\n      }\n  ],\n  \"paymentModes\":[\n      {\n          \"name\": \"CB\"\n      },\n      {\n          \"name\": \"Chèque\"\n      },\n      {\n          \"name\": \"Espèces\"\n      },\n      {\n        \"name\": \"Virement\"\n      }  \n  ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "clear-subscription-info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is 202 Accepted\", function () {",
									"    pm.response.to.have.status(202);",
									"    pm.response.to.be.accepted",
									"});",
									"",
									"",
									"pm.test('response has body',function(){",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test('subscription info are CLEARED',function(){",
									"    pm.response.to.have.jsonBody('tos');",
									"    pm.expect(pm.response.json().tos).to.equal(false);",
									"    pm.response.to.not.have.jsonBody('stripeCustomerId');",
									"    pm.response.to.not.have.jsonBody('stripeSubscriptionId');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/clear-subscription-info/demo@comptandye.fr",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"clear-subscription-info",
								"demo@comptandye.fr"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Professional UserGroup\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/insertToUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"insertToUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/removeFromUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"removeFromUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and OK\", function (){",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"});",
									"",
									"pm.test(\"Response has a json body\", function (){",
									"    pm.response.to.have.jsonBody;",
									"});",
									"",
									"pm.test(\"Response contains a json array\", function(){",
									"    const jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData),\"Response should contain a json array\").to.be.true;",
									"});",
									"",
									"pm.test(\"Many bills are received\", function(){",
									"    const jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData),\"Many bills should have been received\").to.be.true;",
									"    pm.expect(jsonData,\"json array should not be empty\").to.not.be.empty;",
									"    pm.variables.set(\"bills_count\",jsonData.length)",
									"});",
									"",
									"const bc = pm.variables.get(\"bills_count\");",
									"",
									"pm.test(\"Bills count \"+bc+\" >= 0\", function(){",
									"    pm.expect(bc).to.be.gte(0,bc+\"should be >= 0\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/bills?email=vanessa.gay@gmail.com&year=2",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"bills"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "year",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/clients?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"clients"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/categories?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"categories"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/collectiveGroups?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"collectiveGroups"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getExpenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/expenses?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"expenses"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getStock",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/stock?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"stock"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/notifications?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"notifications"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIndividuals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Professional/individuals?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"individuals"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be sylvie.gay@gmail.com\"] = jsonData.email === \"sylvie.gay@gmail.com\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/endBusinessRelationship/sylvie.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"endBusinessRelationship",
								"sylvie.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be sylvie.gay@gmail.com\"] = jsonData.email === \"sylvie.gay@gmail.com\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/buildBusinessRelationship/sylvie.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"buildBusinessRelationship",
								"sylvie.gay@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PurchaseExpense",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"Expense table is not empty\"] = jsonData.length >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*tests[\"count >= 1\"] = responseBody >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color\\\"\"] = jsonData.description === \"Purple Color\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"provider is \\\"L'OREAL\\\"\"] = jsonData.provider === \"L'OREAL\";",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"purchase\",\n  \"description\":\"Purple Color\",\n  \"amount\":4050,\n  \"paymentDate\":1505707896023,\n  \"provider\":\"L'OREAL\",\n  \"vatInclusive\": false,\n  \"categories\": [\n            \"Color\",\n            \"Perfect Color from Paris\"\n    ],\n    \"payments\": [\n            {\n        \"amount\": 4000,\n                \"paymentMode\": {\n                    \"name\": \"CB\"\n                }\n            },\n            {\n                \"amount\": 50,\n                \"paymentMode\": {\n                    \"name\": \"Espèces\"\n                }\n            }\n        ],\n    \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n    ],\n    \"expenseItems\":[\n      {\n      \"description\":\"Purple #1\",\n      \"amount\":1000,\n      \"qty\":2,\n      \"vatRate\":20\n      },\n      {\n      \"description\":\"Purple #2\",\n      \"amount\":500,\n      \"qty\":3,\n      \"vatRate\":10\n      }\n    ],\n    \"invoiceRef\":\"FR123456XXLOREAL\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description !== \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_expense_id}}\",\n  \"cltype\": \"purchase\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update - cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description !== \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_expense_id}}\",\n  \"cltype\": \"purchase\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"cancelled\":true,\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.get(\"created_expense_id\");",
									"//created_expense_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.id == pm.environment.get(\"created_expense_id\");",
									"",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color\\\"\"] = jsonData.description === \"Purple Color\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/{{created_expense_id}}/purchasedItems?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"{{created_expense_id}}",
								"purchasedItems"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PurchasedItem",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchasedItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchasedItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"tests[\"purchaseExpense.id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.purchaseExpense.id === pm.environment.get(\"created_expense_id\");",
									"",
									"/*",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";*/",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 3,",
									"            \"thresholdWarning\": 3,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/PurchaseExpense?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"cltype\": \"purchase\",",
									"            \"description\": \"Purple Color\",",
									"            \"amount\": 4050,",
									"            \"paymentDate\": 1505707896023,",
									"            \"provider\": \"L'OREAL\",",
									"            \"vatInclusive\": false,",
									"            \"categories\": [",
									"                \"Color\",",
									"                \"Perfect Color from Paris\"",
									"            ],",
									"            \"payments\": [{",
									"                \"amount\": 4000,",
									"                \"paymentMode\": {",
									"                    \"name\": \"CB\"",
									"                }",
									"            }, {",
									"                \"amount\": 50,",
									"                \"paymentMode\": {",
									"                    \"name\": \"Espèces\"",
									"                }",
									"            }],",
									"            \"businesses\": [{",
									"                \"designation\": \"Coiffure\"",
									"            }],",
									"            \"expenseItems\": [{",
									"                \"description\": \"Purple #1\",",
									"                \"amount\": 1000,",
									"                \"qty\": 2,",
									"                \"vatRate\": 20",
									"            }, {",
									"                \"description\": \"Purple #2\",",
									"                \"amount\": 500,",
									"                \"qty\": 3,",
									"                \"vatRate\": 10",
									"            }],",
									"            \"invoiceRef\": \"FR123456XXLOREAL\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_expense_id\", response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"purchased\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"{{created_product-reference_barcode}}\"\n            }\n        },\n        \"purchaseExpense\": {\n            \"id\": \"{{created_expense_id}}\",\n            \"cltype\": \"purchase\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"tests[\"purchaseExpense.id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.purchaseExpense.id === pm.environment.get(\"created_expense_id\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchasedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"tests[\"purchaseExpense.id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.purchaseExpense.id === pm.environment.get(\"created_expense_id\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": \"{{created_product-record_id}}\",\n        \"cltype\": \"purchased\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"1234567891\"\n            }\n        },\n        \"purchaseExpense\": {\n            \"id\": 9,\n            \"cltype\": \"purchase\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"    });",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/PurchaseExpense/\" + pm.environment.get('created_expense_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "PurchasedOffering",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"PurchasedOffering table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            name: \"beauty service\",",
									"            price: 10000,",
									"            duration: 180,",
									"            businesses: [{",
									"                designation: \"Esthétique\"",
									"            }],",
									"            cltype: \"service\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_offering_id\", response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.id);",
									"",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"qty\":2,\n  \"offering\":{\n    \"id\":\"{{created_offering_id}}\",\n      \"name\":\"beauty service\",\n      \"price\":10000,\n      \"duration\":180,\n      \"businesses\": [\n         {\n             \"designation\": \"Esthétique\"\n         }\n       ],\n      \"cltype\":\"service\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = jsonData.id == pm.environment.get(\"created_purchasedoffering_id\");",
									"",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";",
									"",
									"tests[\"offering.cltype = offeringSnapshot.cltype\"] = jsonData.offering.cltype === jsonData.offeringSnapshot.cltype;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/{{created_purchasedoffering_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"{{created_purchasedoffering_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = jsonData.id == pm.environment.get(\"created_purchasedoffering_id\");",
									"",
									"tests[\"qty is 20\"] = jsonData.qty === 20;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_purchasedoffering_id}}\",\n  \"qty\":20,\n  \"offering\":{\n    \"id\":\"{{created_offering_id}}\",\n      \"name\":\"beauty service\",\n      \"price\":10000,\n      \"duration\":180,\n      \"businesses\": [\n         {\n             \"designation\": \"Esthétique\"\n         }\n       ],\n      \"cltype\":\"service\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service/\" + pm.environment.get('created_offering_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/{{created_purchasedoffering_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"{{created_purchasedoffering_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ReturnedItem",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ReturnedItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ReturnedItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "inits create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0, 0, 0, 0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            name: \"beauty service\",",
									"            price: 1500,",
									"            duration: 180,",
									"            businesses: [{",
									"                designation: \"Esthétique\"",
									"            }],",
									"            cltype: \"service\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 13,",
									"            \"thresholdWarning\": 2,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Sale?professional=vanessa.gay@gmail.com\",",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                name: \"beauty product\",",
									"                qty: 2,",
									"                price: 1000,",
									"                businesses: [{",
									"                    designation: \"Esthétique\"",
									"                }],",
									"                cltype: \"sale\",",
									"                product: {",
									"                    \"availableQty\": 13,",
									"                    \"thresholdWarning\": 2,",
									"                    \"thresholdSevere\": 1,",
									"                    \"comments\": [",
									"                        \"No restriction\",",
									"                        \"ok for me\"",
									"                    ],",
									"                    \"productReference\": {",
									"                        \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                        \"description\": \"blond color stick\",",
									"                        \"brand\": \"L'OREAL\",",
									"                        \"business\": {",
									"                            \"designation\": \"Coiffure\"",
									"                        }",
									"                    }",
									"                }",
									"            })",
									"        }",
									"    }, function(err, response) {",
									"        console.log(response.json());",
									"        pm.environment.set(\"created_sale_id\", response.json().id);",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":9000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_offering_id}}\",\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    },\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_sale_id}}\",\n        \"cltype\": \"sale\",\n        \"name\": \"beauty service\",\n        \"price\": 1000,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":\"{{created_client_id}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "identify autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"There is one or more SoldItem\"] = jsonData.length >= 1;",
									"",
									"var lng = jsonData.length;",
									"// the auto created sold item should be the last one...",
									"var autoCreatedSoldItem = jsonData[lng-1];",
									"",
									"// save the id",
									"pm.environment.set(\"auto_created_product_record_id\", autoCreatedSoldItem.id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/cancel/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"cancel",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Cancel a paid bill will do nothing : bill is definitively closed."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 7\"] = jsonData.product.availableQty === 7;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"cancelledBill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.cancelledBill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"cancelledBill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.cancelledBill.deliveryDate === pm.environment.get(\"billdate\");",
									"",
									"tests[\"cancelledBill.cancelled is true\"] = jsonData.cancelledBill.cancelled === true;",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"returned\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"{{created_product-reference_barcode}}\"\n            }\n        },\n        \"cancelledBill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 7\"] = jsonData.product.availableQty === 7;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"cancelledBill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.cancelledBill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"cancelledBill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.cancelledBill.deliveryDate === pm.environment.get(\"billdate\");",
									"",
									"tests[\"cancelledBill.cancelled is true\"] = jsonData.cancelledBill.cancelled === true;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/ReturnedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"cancelledBill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.cancelledBill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"cancelledBill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.cancelledBill.deliveryDate === pm.environment.get(\"billdate\");",
									"",
									"tests[\"cancelledBill.cancelled is true\"] = jsonData.cancelledBill.cancelled === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": \"{{created_product-record_id}}\",\n        \"cltype\": \"returned\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"{{created_product-reference_barcode}}\"\n            }\n        },\n        \"cancelledBill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "delete autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{auto_created_product_record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{auto_created_product_record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "clean after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service/\" + pm.environment.get('created_offering_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Sale/\" + pm.environment.get('created_sale_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"        pm.sendRequest({",
									"            url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"            header: {",
									"                'Content-Type': 'application/json',",
									"                'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"            },",
									"            method: 'DELETE'",
									"        }, function(err, res) {",
									"            pm.expect(res).to.have.property('code', 200);",
									"            pm.expect(res).to.have.property('status', 'OK');",
									"        });",
									"    });",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Client/\" + pm.environment.get('created_client_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "Sale",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Sale (Offering) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Sale",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Sale/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"product sale\\\"\"] = jsonData.name === \"product sale\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";",
									"",
									"tests[\"product.productReference.barcode is \"+pm.environment.get('created_product-reference_barcode')] = jsonData.product.productReference.barcode === pm.environment.get('created_product-reference_barcode');"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 3,",
									"            \"thresholdWarning\": 2,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"sale\",\n  \"name\":\"product sale\",\n  \"price\":10000,\n  \"qty\":2,\n  \"businesses\": [\n        {\n                \"designation\": \"Coiffure\"\n        }],\n  \"product\": {\n        \"availableQty\": 3,\n        \"thresholdWarning\": 2,\n        \"thresholdSevere\": 1,\n        \"comments\":[\n        \t\"No restriction\",\n        \t\"ok for me\"\n        ],\n        \"productReference\": {\n\t\"barcode\": \"{{created_product-reference_barcode}}\",\n\t\"description\": \"blond color stick\",\n\t\"brand\": \"L'OREAL\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n        }\n        }\n  \n}"
						},
						"url": {
							"raw": "{{API_URL}}/Sale?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"product sale\\\"\"] = jsonData.name === \"product sale\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 0\"] = jsonData.duration === 0;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}/purchasedOfferings?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}",
								"purchasedOfferings"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getParentPacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}/parentPacks?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}",
								"parentPacks"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"new product\\\"\"] = jsonData.name === \"new product\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"first business designation is \\\"Esthétique\\\"\"] = jsonData.businesses[0].designation === \"Esthétique\";",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"sale\",\n  \"id\":\"{{created_offering_id}}\",\n  \"name\":\"new product\",\n  \"price\":100000,\n  \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Sale?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Service",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Service/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"shortname is \\\"bs\\\"\"] = jsonData.shortname === \"bs\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"beauty service\",\n  \"shortname\":\"bs\",\n  \"price\":10000,\n  \"duration\":180,\n  \"cltype\":\"service\",\n  \"businesses\": [\n        {\n                \"designation\": \"Coiffure\"\n        }\n  ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}/purchasedOfferings?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}",
								"purchasedOfferings"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getParentPacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}/parentPacks?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}",
								"parentPacks"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"new beauty service\\\"\"] = jsonData.name === \"new beauty service\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 300\"] = jsonData.duration === 300;",
									"tests[\"first business designation is \\\"Esthétique\\\"\"] = jsonData.businesses[0].designation === \"Esthétique\";",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"service\",\n  \"id\":\"{{created_offering_id}}\",\n  \"name\":\"new beauty service\",\n  \"price\":100000,\n  \"duration\":300,\n  \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SocialNetworkAccounts",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.id);",
									"",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"facebook\":\"http://www.facebook.com/comptandye\",\n  \"twitter\":\"@comptandye\"\n}\n"
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is \\\"my_pinterest_account\\\"\"] = jsonData.pinterest === \"my_pinterest_account\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":\"{{created_socialnetworkaccounts_id}}\",\n  \"facebook\":\"http://www.facebook.com/comptandye\",\n  \"twitter\":\"@comptandye\",\n  \"pinterest\":\"my_pinterest_account\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SoldItem",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SoldItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "inits create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0, 0, 0, 0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            name: \"beauty service\",",
									"            price: 1500,",
									"            duration: 180,",
									"            businesses: [{",
									"                designation: \"Esthétique\"",
									"            }],",
									"            cltype: \"service\"",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 13,",
									"            \"thresholdWarning\": 2,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Sale?professional=vanessa.gay@gmail.com\",",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                name: \"beauty product\",",
									"                qty: 2,",
									"                price: 1000,",
									"                businesses: [{",
									"                    designation: \"Esthétique\"",
									"                }],",
									"                cltype: \"sale\",",
									"                product: {",
									"                    \"availableQty\": 13,",
									"                    \"thresholdWarning\": 2,",
									"                    \"thresholdSevere\": 1,",
									"                    \"comments\": [",
									"                        \"No restriction\",",
									"                        \"ok for me\"",
									"                    ],",
									"                    \"productReference\": {",
									"                        \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                        \"description\": \"blond color stick\",",
									"                        \"brand\": \"L'OREAL\",",
									"                        \"business\": {",
									"                            \"designation\": \"Coiffure\"",
									"                        }",
									"                    }",
									"                }",
									"            })",
									"        }",
									"    }, function(err, response) {",
									"        console.log(response.json());",
									"        pm.environment.set(\"created_sale_id\", response.json().id);",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":9000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_offering_id}}\",\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    },\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": \"{{created_sale_id}}\",\n        \"cltype\": \"sale\",\n        \"name\": \"beauty service\",\n        \"price\": 1000,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":\"{{created_client_id}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "identify autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"There is one or more SoldItem\"] = jsonData.length >= 1;",
									"",
									"var lng = jsonData.length;",
									"// the auto created sold item should be the last one...",
									"var autoCreatedSoldItem = jsonData[lng-1];",
									"",
									"// save the id",
									"pm.environment.set(\"auto_created_product_record_id\", autoCreatedSoldItem.id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"bill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.bill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"bill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.bill.deliveryDate === pm.environment.get(\"billdate\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"sold\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"{{created_product-reference_barcode}}\"\n            }\n        },\n        \"bill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"bill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.bill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"bill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.bill.deliveryDate === pm.environment.get(\"billdate\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"bill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.bill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"bill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.bill.deliveryDate === pm.environment.get(\"billdate\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": \"{{created_product-record_id}}\",\n        \"cltype\": \"sold\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"{{created_product-reference_barcode}}\"\n            }\n        },\n        \"bill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "delete autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{auto_created_product_record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{auto_created_product_record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "clean after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Service/\" + pm.environment.get('created_offering_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Sale/\" + pm.environment.get('created_sale_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"        pm.sendRequest({",
									"            url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"            header: {",
									"                'Content-Type': 'application/json',",
									"                'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"            },",
									"            method: 'DELETE'",
									"        }, function(err, res) {",
									"            pm.expect(res).to.have.property('code', 200);",
									"            pm.expect(res).to.have.property('status', 'OK');",
									"        });",
									"    });",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Client/\" + pm.environment.get('created_client_id') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "UsedItem",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UsedItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UsedItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 1\"] = jsonData.product.availableQty === 1;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"/*",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";*/",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"availableQty\": 3,",
									"            \"thresholdWarning\": 2,",
									"            \"thresholdSevere\": 1,",
									"            \"comments\": [",
									"                \"No restriction\",",
									"                \"ok for me\"",
									"            ],",
									"            \"productReference\": {",
									"                \"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"                \"description\": \"blond color stick\",",
									"                \"brand\": \"L'OREAL\",",
									"                \"business\": {",
									"                    \"designation\": \"Coiffure\"",
									"                }",
									"            }",
									"        })",
									"    }",
									"}, function(err, response) {",
									"    console.log(response.json());",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"used\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"{{created_product-reference_barcode}}\"\n            }\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 1\"] = jsonData.product.availableQty === 1;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UsedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": \"{{created_product-record_id}}\",\n        \"cltype\": \"used\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"1234567891\"\n            }\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Product/\" + pm.environment.get('created_product-reference_barcode') + \"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type': 'application/json',",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    },",
									"    method: 'DELETE'",
									"}, function(err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"        url: pm.environment.get('API_URL') + \"/ProductReference/\" + pm.environment.get('created_product-reference_barcode'),",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"        },",
									"        method: 'DELETE'",
									"    }, function(err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"        pm.expect(res).to.have.property('status', 'OK');",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			],
			"description": "Manage Addresses.\nRequires Administrator Authorization."
		},
		{
			"name": "UserAccount",
			"item": [
				{
					"name": "create-professional",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: pm.environment.get('API_URL') + \"/Professional/\" + pm.environment.get(\"email_pro_new_account\"),",
									"    method: 'DELETE',",
									"    header: {",
									"        'Authorization': 'Bearer ' + pm.environment.get('JWT')",
									"    }",
									"}, function (err, response) {",
									"    // console.log(response.json());",
									"    // pm.environment.set(\"created_client_id\", response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email_pro_new_account\", \"skonx2006@hotmail.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email_pro_new_account}}\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/user-account/create-professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"user-account",
								"create-professional"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UserGroup",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements\"] = jsonData.length >= 3;",
									"",
									"tests[\"Administrator\"] = responseBody.has(\"Administrator\");",
									"tests[\"Individual\"] = responseBody.has(\"Individual\");",
									"tests[\"Professional\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Total count >= 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UserGroup/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"Administrator\\\"\"] = jsonData.name === \"Administrator\";",
									"tests[\"description is \\\"Administrator Group\\\"\"] = jsonData.description === \"Administrator Group\";",
									"tests[\"userAccounts is undefined\"] = jsonData.userAccounts === undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UserGroup/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is a test group\\\"\"] = jsonData.description === \"This is a test group\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TEST_GRP01\",\n    \"description\": \"This is a test group\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is the test group TEST_GRP01\\\"\"] = jsonData.description === \"This is the test group TEST_GRP01\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TEST_GRP01\",\n    \"description\": \"This is the test group TEST_GRP01\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/TEST_GRP01",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"TEST_GRP01"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain 2 or more elements \"] = jsonData.length >= 2;",
									"",
									"function checkAdmin(admin){",
									"    return admin.email === \"trendevfr@gmail.com\";",
									"}",
									"",
									"var admin = jsonData.filter(checkAdmin);",
									"tests[\"There is an Administrator\"] = admin.length === 1;",
									"if(admin.lengt === 1){",
									"    tests[\"trendevfr@gmail.com is an Administrator\"] = admin[0].email === \"trendevfr@gmail.com\";",
									"    tests[\"trendevfr@gmail.com username = trendevfr_admin\"] = admin[0].username === \"trendevfr_admin\";",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/UserGroup/Administrator/userAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"Administrator",
								"userAccounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "VatRates",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 1 element\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/VatRates",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/VatRates/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"countryId is \\\"FR\\\"\"] = jsonData.countryId === \"FR\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									"tests[\"rates.length >= 1\"] = jsonData.rates.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/VatRates/FR",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates",
								"FR"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"countryId is \\\"XX\\\"\"] = jsonData.countryId === \"XX\";",
									"tests[\"country is \\\"Wonderland\\\"\"] = jsonData.country === \"Wonderland\";",
									"tests[\"rates.length >= 1\"] = jsonData.rates.length >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"countryId\": \"XX\",\n        \"country\": \"Wonderland\",\n        \"rates\": [\n            21,\n            12,\n            6\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/VatRates",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"countryId is \\\"XX\\\"\"] = jsonData.countryId === \"XX\";",
									"tests[\"country is \\\"NewCountry\\\"\"] = jsonData.country === \"NewCountry\";",
									"tests[\"rates.length >= 1\"] = jsonData.rates.length >= 1;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"countryId\": \"XX\",\n    \"country\": \"NewCountry\",\n    \"rates\": [\n        25,\n        12.5,\n        6,\n        3.4\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/VatRates",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/VatRates/XX",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates",
								"XX"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "ThresholdAlert",
					"item": [
						{
							"name": "create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"id is defined\"] = jsonData.id !== undefined;",
											"pm.environment.set(\"created_notification_id\", jsonData.id);",
											"",
											"pm.test(\"id is not the provided one \\\"fake-id\\\"\",function(){",
											"    pm.expect(jsonData.id).to.not.be.equal(\"fake-id\");",
											"});",
											"",
											"tests[\"cltype is \\\"threshold\\\"\"] = jsonData.cltype === \"threshold\";",
											"tests[\"checked is false\"] = jsonData.checked === false;",
											"tests[\"levelRank is \\\"WARNING\\\"\"] = jsonData.levelRank === \"WARNING\";",
											"tests[\"barcode is \\\"123456789\\\"\"] = jsonData.barcode === \"123456789\";",
											"tests[\"description is \\\"a haircut product\\\"\"] = jsonData.description === \"a haircut product\";",
											"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
											"tests[\"threshold is 5\"] = jsonData.threshold === 5;",
											"tests[\"qty is 2\"] = jsonData.qty === 2;",
											"tests[\"qualifier is \\\"WARNING\\\"\"] = jsonData.qualifier === \"WARNING\";",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"fake-id\",\n    \"cltype\": \"threshold\",\n    \"checked\": false,\n    \"levelRank\": \"WARNING\",\n    \"barcode\": \"123456789\",\n    \"description\": \"a haircut product\",\n    \"brand\": \"WELLA\",\n    \"threshold\": 5,\n    \"qty\": 2,\n    \"qualifier\": \"WARNING\"\n}"
								},
								"url": {
									"raw": "{{API_URL}}/ThresholdAlert?professional=vanessa.gay@gmail.com",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"ThresholdAlert"
									],
									"query": [
										{
											"key": "professional",
											"value": "vanessa.gay@gmail.com"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"id is \"+pm.environment.get(\"created_notification_id\")] = jsonData.id === pm.environment.get(\"created_notification_id\");",
											"",
											"tests[\"cltype is \\\"threshold\\\"\"] = jsonData.cltype === \"threshold\";",
											"tests[\"checked is false\"] = jsonData.checked === false;",
											"tests[\"levelRank is \\\"SEVERE\\\"\"] = jsonData.levelRank === \"SEVERE\";",
											"tests[\"barcode is \\\"123456789\\\"\"] = jsonData.barcode === \"123456789\";",
											"tests[\"description is \\\"a haircut product\\\"\"] = jsonData.description === \"a haircut product\";",
											"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
											"tests[\"threshold is 0\"] = jsonData.threshold === 0;",
											"tests[\"qty is 0\"] = jsonData.qty === 0;",
											"tests[\"qualifier is \\\"EMPTY\\\"\"] = jsonData.qualifier === \"EMPTY\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"id\": \"{{created_notification_id}}\",\n        \"cltype\": \"threshold\",\n        \"checked\": false,\n        \"levelRank\": \"SEVERE\",\n        \"barcode\": \"123456789\",\n        \"description\": \"a haircut product\",\n        \"brand\": \"WELLA\",\n        \"threshold\": 0,\n        \"qty\": 0,\n        \"qualifier\": \"EMPTY\"\n    }"
								},
								"url": {
									"raw": "{{API_URL}}/ThresholdAlert?professional=vanessa.gay@gmail.com",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"ThresholdAlert"
									],
									"query": [
										{
											"key": "professional",
											"value": "vanessa.gay@gmail.com"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Notification table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Notification",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Notification/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{API_URL}}/Notification/{{created_notification_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"{{created_notification_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_notification_id\")] = jsonData.id === pm.environment.get(\"created_notification_id\");",
									"",
									"tests[\"cltype is \\\"threshold\\\"\"] = jsonData.cltype === \"threshold\";",
									"tests[\"checked is true\"] = jsonData.checked === true;",
									"tests[\"levelRank is \\\"SEVERE\\\"\"] = jsonData.levelRank === \"SEVERE\";",
									"tests[\"barcode is \\\"123456789\\\"\"] = jsonData.barcode === \"123456789\";",
									"tests[\"description is \\\"a haircut product\\\"\"] = jsonData.description === \"a haircut product\";",
									"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
									"tests[\"threshold is 0\"] = jsonData.threshold === 0;",
									"tests[\"qty is 0\"] = jsonData.qty === 0;",
									"tests[\"qualifier is \\\"EMPTY\\\"\"] = jsonData.qualifier === \"EMPTY\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/check/{{created_notification_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"check",
								"{{created_notification_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "checkAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"totalChecked >= 1\"] = jsonData.totalChecked >= 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/check-all?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"check-all"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/{{created_notification_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"{{created_notification_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/delete-all?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"delete-all"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stripe",
			"item": [
				{
					"name": "SetupIntent",
					"item": [
						{
							"name": "create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is 200 OK\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.ok;",
											"});",
											"",
											"pm.test('response has a body',function(){",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test('id is defined',function(){",
											"    pm.response.to.have.jsonBody('id');",
											"    pm.environment.set('setup_intent_id',pm.response.json().id)",
											"});",
											"",
											"pm.test('object is setup_intent',function(){",
											"    pm.response.to.have.jsonBody('object');",
											"    pm.expect(pm.response.json().object).to.equal('setup_intent');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/stripe-setup-intent",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"stripe-setup-intent"
									]
								}
							},
							"response": []
						},
						{
							"name": "cancel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is 200 OK\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.ok;",
											"});",
											"",
											"pm.test('response has a body',function(){",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test('id is defined',function(){",
											"    pm.response.to.have.jsonBody('id');",
											"    pm.expect(pm.environment.get('setup_intent_id')).to.equal(pm.response.json().id)",
											"});",
											"",
											"pm.test('object is setup_intent',function(){",
											"    pm.response.to.have.jsonBody('object');",
											"    pm.expect(pm.response.json().object).to.equal('setup_intent');",
											"});",
											"",
											"pm.test('status is canceled',function(){",
											"    pm.response.to.have.jsonBody('status');",
											"    pm.expect(pm.response.json().status).to.equal('canceled');",
											"});",
											"",
											"pm.test('cancellation_reason is abandoned',function(){",
											"    pm.response.to.have.jsonBody('cancellation_reason');",
											"    pm.expect(pm.response.json().cancellation_reason).to.equal('abandoned');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/stripe-setup-intent/cancel/{{setup_intent_id}}",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"stripe-setup-intent",
										"cancel",
										"{{setup_intent_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PaymentMethod",
					"item": [
						{
							"name": "getPaymentMethods",
							"request": {
								"method": "OPTIONS",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/stripe-payment-method?email=demo@comptandye.fr",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"stripe-payment-method"
									],
									"query": [
										{
											"key": "email",
											"value": "demo@comptandye.fr"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Plan",
					"item": [
						{
							"name": "getPlans",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"response is 200 OK\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.response.to.be.ok;",
											"});",
											"",
											"pm.test('response has a body',function(){",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test('data arrays is defined and length >= 1',function(){",
											"    pm.response.to.have.jsonBody('data');",
											"    pm.expect(pm.response.json().data).to.be.an('array');",
											"    pm.expect(pm.response.json().data.length).to.be.gte(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/stripe-plan",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"stripe-plan"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){",
							"    pm.response.to.be.ok;",
							"})",
							"",
							"if(pm.response.code === 200){",
							"   pm.environment.unset(\"JWT\"); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{API_URL}}/Authentication/logout",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"Authentication",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{JWT}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// intercept JWT",
					"if(pm.response.headers.has(\"JWT\")){",
					"    console.log(\"JWT SET or REFRESHED : \"+pm.response.headers.get(\"JWT\"));",
					"    pm.environment.set(\"JWT\", pm.response.headers.get(\"JWT\"));",
					"}"
				]
			}
		}
	]
}