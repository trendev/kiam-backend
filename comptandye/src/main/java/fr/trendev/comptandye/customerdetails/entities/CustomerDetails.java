/** * This file was generated by the JPA Modeler */
package fr.trendev.comptandye.customerdetails.entities;

import com.fasterxml.jackson.annotation.JsonInclude;
import fr.trendev.comptandye.utils.Visitor;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Past;

/**
 * @author jsie
 */
@Entity
@Table(name = "CUSTOMER_DETAILS")
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@SuppressWarnings("unchecked")
public class CustomerDetails {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @Basic
    private String firstName;

    @Basic
    private String lastName;

    @Basic
    private String nickname;

    /**
     * The phone is represented by a String. At the present time, no regexp
     * validation is performed.
     */
    @Basic
    private String phone;

    /**
     * Birthdate is stored in DB as DATETIME(3). In order to avoid issues with
     * javascript/JAVA conversion on Dates before 1970 and earlier, we've
     * decided to store the DATETIME and let down the DATE only.
     */
    @Column(columnDefinition = "DATETIME(3)")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    @Past(message = "Birthdate cannot be today or in the future...")
    private Date birthdate;

    /**
     * Should be 'F' or 'M'
     */
    @Basic
    private char sex = 'F';

    /**
     * Path on the server FS - not used at the present time
     */
    @Basic
    private String picturePath;

    @ElementCollection
    private List<String> comments = new ArrayList<>();

    public CustomerDetails(String firstName, String lastName, String nickname,
            String phone, Date birthdate, char sex, String picturePath,
            List comments) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.nickname = nickname;
        this.phone = phone;
        this.birthdate = birthdate;
        this.sex = sex;
        this.picturePath = picturePath;
        this.comments = comments;
    }

    public CustomerDetails() {
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getNickname() {
        return this.nickname;
    }

    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public Date getBirthdate() {
        return this.birthdate;
    }

    public void setBirthdate(Date birthdate) {
        this.birthdate = birthdate;
    }

    public char getSex() {
        return this.sex;
    }

    public void setSex(char sex) {
        this.sex = sex;
    }

    public String getPicturePath() {
        return this.picturePath;
    }

    public void setPicturePath(String picturePath) {
        this.picturePath = picturePath;
    }

    public List<String> getComments() {
        return this.comments;
    }

    public void setComments(List<String> comments) {
        this.comments = comments;
    }

    public <T> T accept(Visitor<T> v) {
        return v.visit(this);
    }

}