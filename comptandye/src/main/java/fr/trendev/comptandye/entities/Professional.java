/** * This file was generated by the JPA Modeler */
package fr.trendev.comptandye.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import fr.trendev.comptandye.utils.UserAccountType;
import fr.trendev.comptandye.utils.visitors.Visitor;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * @author jsie
 */
@Entity
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class Professional extends Customer {

    @Basic
    private String website;

    @Basic
    private String companyName;

    @Basic
    private String companyID;

    /**
     * Value Added Tax code
     */
    @Basic
    private String vatcode;

    @Basic
    @Temporal(TemporalType.DATE)
    private Date creationDate;

    /**
     * Must be only updated when a Bill is persisted. Should be unique and lock
     * during concurent access and preserve Bill Number integrity.
     */
    @Basic
    private long billsCount = 0;

    /**
     * The reference date on the Bill timeline. Must be only updated when a Bill
     * is persisted.
     */
    @Column(columnDefinition = "DATETIME(3)")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date billsRefDate;

    @Basic
    private String stripeCustomerId;

    @Basic
    private String stripeSubscriptionId;

    /**
     * Terms of Service
     */
    @Basic
    private boolean tos;

    /**
     * When the Stripe Subscription has been rescinded
     */
    @Column(columnDefinition = "DATETIME(3)")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date rescissionDate = new Date();

    @ManyToOne(targetEntity = VatRates.class)
    private VatRates vatRates;

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Bill.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<Bill> bills = new LinkedList<>();

    @OneToMany(targetEntity = Business.class)
    private List<Business> businesses = new LinkedList<>();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Client.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<Client> clients = new LinkedList<>();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Offering.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<Offering> offerings = new LinkedList<>();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Category.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<Category> categories = new LinkedList<>();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Expense.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<Expense> expenses = new LinkedList<>();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = CollectiveGroup.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<CollectiveGroup> collectiveGroups = new LinkedList<>();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Product.class,
            mappedBy = "professional")
    @JsonIgnore
    private List<Product> stock = new LinkedList();

    @OneToMany(cascade = {CascadeType.ALL}, targetEntity = Notification.class,
            orphanRemoval = true, mappedBy = "professional")
    @JsonIgnore
    private List<Notification> notifications = new LinkedList();

    @ManyToMany(targetEntity = Individual.class, mappedBy = "professionals")
    @JsonIgnore
    private List<Individual> individuals = new LinkedList<>();

    @ManyToMany(targetEntity = PaymentMode.class)
    private List<PaymentMode> paymentModes = new LinkedList<>();

    @Version
    @JsonIgnore
    private long version = 0l;

    public Professional(String email, String password, String username,
            String uuid) {
        super(email, password, username, uuid);
        this.cltype = UserAccountType.PROFESSIONAL;
    }

    public Professional() {
        super();
        this.cltype = UserAccountType.PROFESSIONAL;
    }

    public Professional(String email, String password, String username,
            String uuid, CustomerDetails customerDetails, Address address,
            SocialNetworkAccounts socialNetworkAccounts, String website,
            String companyName, String companyID, String vatcode,
            Date creationDate) {
        super(email, password, username, uuid, customerDetails, address,
                socialNetworkAccounts);
        this.website = website;
        this.companyName = companyName;
        this.companyID = companyID;
        this.vatcode = vatcode;
        this.creationDate = creationDate;
        this.cltype = UserAccountType.PROFESSIONAL;
    }

    public String getWebsite() {
        return this.website;
    }

    public void setWebsite(String website) {
        this.website = website;
    }

    public String getCompanyName() {
        return this.companyName;
    }

    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    public String getCompanyID() {
        return this.companyID;
    }

    public void setCompanyID(String companyID) {
        this.companyID = companyID;
    }

    public String getVatcode() {
        return this.vatcode;
    }

    public void setVatcode(String vatcode) {
        this.vatcode = vatcode;
    }

    public Date getCreationDate() {
        return this.creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    public long getBillsCount() {
        return this.billsCount;
    }

    public void setBillsCount(long billsCount) {
        this.billsCount = billsCount;
    }

    public Date getBillsRefDate() {
        return this.billsRefDate;
    }

    public void setBillsRefDate(Date billsRefDate) {
        this.billsRefDate = billsRefDate;
    }

    public String getStripeCustomerId() {
        return this.stripeCustomerId;
    }

    public void setStripeCustomerId(String stripeCustomerId) {
        this.stripeCustomerId = stripeCustomerId;
    }

    public String getStripeSubscriptionId() {
        return this.stripeSubscriptionId;
    }

    public void setStripeSubscriptionId(String stripeSubscriptionId) {
        this.stripeSubscriptionId = stripeSubscriptionId;
    }

    public boolean isTos() {
        return this.tos;
    }

    public void setTos(boolean tos) {
        this.tos = tos;
    }

    public Date getRescissionDate() {
        return this.rescissionDate;
    }

    public void setRescissionDate(Date rescissionDate) {
        this.rescissionDate = rescissionDate;
    }

    public VatRates getVatRates() {
        return this.vatRates;
    }

    public void setVatRates(VatRates vatRates) {
        this.vatRates = vatRates;
    }

    public List<Bill> getBills() {
        return this.bills;
    }

    public void setBills(List<Bill> bills) {
        this.bills = bills;
    }

    public List<Business> getBusinesses() {
        return this.businesses;
    }

    public void setBusinesses(List<Business> businesses) {
        this.businesses = businesses;
    }

    public List<Client> getClients() {
        return this.clients;
    }

    public void setClients(List<Client> clients) {
        this.clients = clients;
    }

    public List<Offering> getOfferings() {
        return this.offerings;
    }

    public void setOfferings(List<Offering> offerings) {
        this.offerings = offerings;
    }

    public List<Category> getCategories() {
        return this.categories;
    }

    public void setCategories(List<Category> categories) {
        this.categories = categories;
    }

    public List<Expense> getExpenses() {
        return this.expenses;
    }

    public void setExpenses(List<Expense> expenses) {
        this.expenses = expenses;
    }

    public List<CollectiveGroup> getCollectiveGroups() {
        return this.collectiveGroups;
    }

    public void setCollectiveGroups(List<CollectiveGroup> collectiveGroups) {
        this.collectiveGroups = collectiveGroups;
    }

    public List<Product> getStock() {
        return this.stock;
    }

    public void setStock(List<Product> stock) {
        this.stock = stock;
    }

    public List<Notification> getNotifications() {
        return this.notifications;
    }

    public void setNotifications(List<Notification> notifications) {
        this.notifications = notifications;
    }

    public List<Individual> getIndividuals() {
        return this.individuals;
    }

    public void setIndividuals(List<Individual> individuals) {
        this.individuals = individuals;
    }

    public List<PaymentMode> getPaymentModes() {
        return this.paymentModes;
    }

    public void setPaymentModes(List<PaymentMode> paymentModes) {
        this.paymentModes = paymentModes;
    }

    public long getVersion() {
        return this.version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    @Override
    public <T> T accept(Visitor<T> v) {
        return v.visit(this);
    }

}