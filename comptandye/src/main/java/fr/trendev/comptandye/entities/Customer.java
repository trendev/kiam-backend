/** * This file was generated by the JPA Modeler */
package fr.trendev.comptandye.entities;

import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.OneToOne;

/**
 * Groups common fields between Professional and Individual
 *
 * @author jsie
 */
@Entity
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public abstract class Customer extends UserAccount {

    @OneToOne(orphanRemoval = true, cascade = {CascadeType.ALL},
            targetEntity = CustomerDetails.class)
    private CustomerDetails customerDetails;

    @OneToOne(orphanRemoval = true, cascade = {CascadeType.ALL},
            targetEntity = Address.class)
    private Address address;

    @OneToOne(orphanRemoval = true, cascade = {CascadeType.ALL},
            targetEntity = SocialNetworkAccounts.class)
    private SocialNetworkAccounts socialNetworkAccounts;

    public Customer(String email, String password, String username, String uuid) {
        super(email, password, username, uuid);
        this.customerDetails = new CustomerDetails();
        this.address = new Address();
        this.socialNetworkAccounts = new SocialNetworkAccounts();
    }

    public Customer(String email, String password, String username, String uuid,
            CustomerDetails customerDetails, Address address,
            SocialNetworkAccounts socialNetworkAccounts) {
        super(email, password, username, uuid);
        this.customerDetails = customerDetails;
        this.address = address;
        this.socialNetworkAccounts = socialNetworkAccounts;
    }

    public Customer() {
        super();
        LOG.log(Level.INFO,
                "==============> I call this constructor !!!!");
        this.customerDetails = new CustomerDetails();
        this.address = new Address();
        this.socialNetworkAccounts = new SocialNetworkAccounts();
    }
    private static final Logger LOG = Logger.getLogger(Customer.class.getName());

    public CustomerDetails getCustomerDetails() {
        LOG.log(Level.INFO,
                "==============> And this getter !!!!");
        return this.customerDetails;
    }

    public void setCustomerDetails(CustomerDetails customerDetails) {
        LOG.log(Level.INFO,
                "==============> And this setter !!!!");
        this.customerDetails = customerDetails;
    }

    public Address getAddress() {
        return this.address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    public SocialNetworkAccounts getSocialNetworkAccounts() {
        return this.socialNetworkAccounts;
    }

    public void setSocialNetworkAccounts(
            SocialNetworkAccounts socialNetworkAccounts) {
        this.socialNetworkAccounts = socialNetworkAccounts;
    }

}
