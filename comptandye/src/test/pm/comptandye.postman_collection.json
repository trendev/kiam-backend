{
	"info": {
		"_postman_id": "c4f955a1-8c6f-4be5-9224-c8b27e8268ad",
		"name": "comptandye",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": null,
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29402ced-a91e-4c5d-b9e6-347e1b641b8b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
									"",
									" pm.test(\"JSESSIONID cookie is present\", function () {",
									"      pm.response.to.not.be.error;",
									"      pm.cookies.has(\"JSESSIONID\");",
									"  });",
									"",
									"if(pm.cookies.has(\"JSESSIONID\")){",
									"    console.log(pm.cookies.get(\"JSESSIONID\"));",
									"    pm.environment.set(\"JSESSIONID\", pm.cookies.get(\"JSESSIONID\"))",
									"}",
									"",
									" pm.test(\"XSRF-TOKEN cookie is present\", function () {",
									"      pm.response.to.not.be.error;",
									"      pm.cookies.has(\"XSRF-TOKEN\");",
									"  });",
									"",
									"if(pm.cookies.has(\"XSRF-TOKEN\")){",
									"    console.log(pm.cookies.get(\"XSRF-TOKEN\"));",
									"    pm.environment.set(\"XSRF-TOKEN\", pm.cookies.get(\"XSRF-TOKEN\"))",
									"}",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"cltype is Administrator or Professional or Individual ==> \"+jsonData.cltype] = jsonData.cltype === (\"Administrator\" || \"Professional\" || \"Individual\");",
									"",
									"",
									"/*if(postman.getResponseHeader(\"Set-Cookie\")){",
									"    tests[\"Set-Cookie is present\"] = postman.getResponseHeader(\"Set-Cookie\");",
									"    ",
									"    postman.setEnvironmentVariable(\"XSRF-TOKEN\",postman.getResponseHeader(\"Set-Cookie\").split(\";\")[0].split(\"=\")[1]);",
									"    console.log(postman.getEnvironmentVariable(\"XSRF-TOKEN\"));",
									"}*/",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/login?username={{username}}&password={{password}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						},
						"description": "Sends username/password and stores the JSESSIONID."
					},
					"response": []
				},
				{
					"name": "profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"cltype is Administrator or Professional or Individual ==> \"+jsonData.cltype] = jsonData.cltype === (\"Administrator\" || \"Professional\" || \"Individual\");",
									"",
									"if(postman.getResponseHeader(\"Set-Cookie\")){",
									"    tests[\"Set-Cookie is present\"] = postman.getResponseHeader(\"Set-Cookie\");",
									"    ",
									"    postman.setEnvironmentVariable(\"XSRF-TOKEN\",postman.getResponseHeader(\"Set-Cookie\").split(\"; \")[0].split(\"=\")[1]);",
									"    console.log(postman.getEnvironmentVariable(\"XSRF-TOKEN\"));",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/profile",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count lenght is 100\"] = responseBody.length === 100;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/password?size=100",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"password"
							],
							"query": [
								{
									"key": "size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "newPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"encrypted password is the right one\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"newpassword\": \"ANOTHER_PASSWORD\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/new-password",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"new-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "newPassword - reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"encrypted password is the right one\"] = jsonData.password === \"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"newpassword\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/new-password",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"new-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"ADDRESS table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.id);",
									"",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"street\":\"47 Rue René Benoist\",\"optional\":\"TRENDev SASU\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is undefined\"] = jsonData.optional === undefined;",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\":{{created_address_id}},\"street\":\"47 Rue René Benoist\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			]
		},
		{
			"name": "Administrator",
			"description": "Manage Administrators. Requires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements...\"] = jsonData.length >= 3;",
									"",
									"tests[\"comptandye@gmail.com\"] = responseBody.has(\"comptandye@gmail.com\");",
									"tests[\"julien.sie@gmail.com\"] = responseBody.has(\"julien.sie@gmail.com\");",
									"tests[\"trendevfr@gmail.com\"] = responseBody.has(\"trendevfr@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body is correct : 3 or more than 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"comptandye@gmail.com\\\"\"] = jsonData.email === \"comptandye@gmail.com\";",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\\\"\"] = jsonData.password === \"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\";",
									"tests[\"username is \\\"comptandye_admin\\\"\"] = jsonData.username === \"comptandye_admin\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups is undefined\"] = jsonData.userGroups === undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"newadmin@trendev.fr\\\"\"] = jsonData.email === \"newadmin@trendev.fr\"",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"new_admin\\\"\"] = jsonData.username === \"new_admin\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"cltype\": \"Administrator\",\n    \"password\": \"PASSWORD\",\n    \"username\": \"new_admin\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"newadmin@trendev.fr\\\"\"] = jsonData.email === \"newadmin@trendev.fr\"",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"LewAshby\\\"\"] = jsonData.username === \"LewAshby\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"cltype\": \"Administrator\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"LewAshby\",\n    \"uuid\":\"another_one\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/newadmin@trendev.fr",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"newadmin@trendev.fr"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Administrator UserGroup\"] = responseBody.has(\"Administrator\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/insertToUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"insertToUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/removeFromUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"removeFromUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Business",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Business table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is defined\"] = jsonData.designation !== undefined;",
									"pm.environment.set(\"created_business_designation\", jsonData.designation);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"designation\": \"beauty_at_home\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Business",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is \"+pm.environment.get(\"created_business_designation\")] = jsonData.designation == pm.environment.get(\"created_business_designation\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21a20227-41f0-46f0-a372-24cdae616789",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Category table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2225329f-8a77-4eec-8991-8dd3f1046d2c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_category_id\", jsonData.id);",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"NEW_CATEGORY\",\n  \"description\":\"This a new category for special clients\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"New Category\\\"\"] = jsonData.name === \"New Category\";",
									"tests[\"description is \\\"This a new description for the Category\\\"\"] = jsonData.description === \"This a new description for the Category\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_category_id}},\n  \"name\":\"New Category\",\n  \"description\":\"This a new description for the Category\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addClient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                email:\"newclient@domain.com\",",
									"                address:{",
									"                    street:\"79 avenue de la jonchère\",",
									"                    optional:\"appart A113\",",
									"                    postalCode:\"77600\",",
									"                    city:\"Chanteloup-en-Brie\"",
									"                },",
									"                customerDetails:{",
									"                    firstName:\"John\",",
									"                    lastName:\"DOE\",",
									"                    nickname:\"WhoIsHe\",",
									"                    sex:'M'",
									"                }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/addClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"addClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/clients?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"clients"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client/\"+pm.environment.get('created_client_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/removeClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"removeClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Client table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d01e323c-a309-4f2c-914b-47bc22bc3795",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_client_id\", jsonData.id);",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39e711d7-c2eb-4f2f-9ab9-b4c5d7eeeaa9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"client@domain.com\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  },\n  \"socialNetworkAccounts\":{\n    \"twitter\":\"@client_facebook_account\"\n  },\n  \"customerDetails\":{\n    \"firstName\":\"Paul\",\n    \"lastName\":\"Newman\",\n    \"sex\":\"M\",\n    \"comments\":[\n      \"old american actor\",\n      \"old shool boy\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client_email02@domain.com\\\"\"] = jsonData.email === \"client_email02@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"tests[\"socialNetworkAccounts.facebook is \\\"https://facebook.com/client_account\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://facebook.com/client_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_client_id}},\n  \"email\":\"client_email02@domain.com\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  },\n  \"socialNetworkAccounts\":{\n    \"twitter\":\"@client_facebook_account\",\n    \"facebook\":\"https://facebook.com/client_account\"\n  },\n  \"customerDetails\":{\n    \"firstName\":\"Paul\",\n    \"lastName\":\"Newman\",\n    \"sex\":\"M\",\n    \"comments\":[\n      \"old american actor\",\n      \"old shool boy\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClientBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/clientBills?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"clientBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/categories?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"categories"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b72f8191-6b19-431e-aa88-b3dcfdce36c2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								},
								{
									"key": "refresh",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ClientBill",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39778664-5063-43aa-a83b-92048bb6c39c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE ClientBill) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9d3ab20-c3ae-4200-81da-77ff8de4ac13",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0e7413d2-21a7-41f8-9646-afa2a5e1ab7f",
								"type": "text/javascript",
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0,0,0,0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 13,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"    ",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty product\",",
									"                qty:2,",
									"              price:1000,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"sale\",",
									"                product:{",
									"        \"availableQty\": 13,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_sale_id\", response.json().id);",
									"});",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "67664deb-2e01-4a25-a65e-9ff3d943d575",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":9000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    },\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_sale_id}},\n        \"cltype\": \"sale\",\n        \"name\": \"beauty service\",\n        \"price\": 1000,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":{{created_client_id}}\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "identify autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ad38598-c124-45ab-8e02-4c674d7853a1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"There is one or more SoldItem\"] = jsonData.length >= 1;",
									"",
									"var lng = jsonData.length;",
									"// the auto created sold item should be the last one...",
									"var autoCreatedSoldItem = jsonData[lng-1];",
									"",
									"// save the id",
									"pm.environment.set(\"auto_created_product_record_id\", autoCreatedSoldItem.id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d100ed7e-52bf-4c61-a95f-ff0b1fcfe9c9",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"cltype is clientbill\"] = jsonData.cltype === \"clientbill\";",
									"tests[\"amount is 9000\"] = jsonData.amount === 9000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"client.id is \"+pm.environment.get(\"created_client_id\")] = jsonData.client.id == pm.environment.get(\"created_client_id\");",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.purchasedOfferings[0].offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_clientbill_reference}}\",\n    \"deliveryDate\": {{created_clientbill_deliveryDate}},\n    \"paymentDate\": {{created_clientbill_deliveryDate}},\n    \"cltype\": \"clientbill\",\n    \"amount\": 9000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 8000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"client\": {\n        \"id\": {{created_client_id}}\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update a paid bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76dbb7de-1fb6-414d-a9da-3cc3cfdded6d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"cltype is clientbill\"] = jsonData.cltype === \"clientbill\";",
									"tests[\"amount is 9000\"] = jsonData.amount === 9000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"",
									"/*Bills is paid and cannot be cancelled using this service*/",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"client.id is \"+pm.environment.get(\"created_client_id\")] = jsonData.client.id == pm.environment.get(\"created_client_id\");",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.purchasedOfferings[0].offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_clientbill_reference}}\",\n    \"deliveryDate\": {{created_clientbill_deliveryDate}},\n    \"paymentDate\": {{created_clientbill_deliveryDate}},\n    \"cltype\": \"clientbill\",\n    \"amount\": 9000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"cancelled\": true,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 8000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"client\": {\n        \"id\": {{created_client_id}}\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Cancel a paid bill will do nothing : bill is definitively closed."
					},
					"response": []
				},
				{
					"name": "cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54dcf58-9257-4c68-83b0-57367552cb52",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"*/"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/cancel/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"cancel",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Cancel a paid bill will do nothing : bill is definitively closed."
					},
					"response": []
				},
				{
					"name": "delete autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6cb1191-4c4b-4bd2-a86c-a353870c9660",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{auto_created_product_record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{auto_created_product_record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "321d08a0-e9dd-451b-a078-1b7133cc3744",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale/\"+pm.environment.get('created_sale_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client/\"+pm.environment.get('created_client_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroup",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CollectiveGroup table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_collectivegroup_id\", jsonData.id);",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",\n  \"phone\":\"0123456789\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"E.H.P.A.D. LE CHATEAU DE FONTENELLE\\\"\"] = jsonData.groupName === \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\";",
									"tests[\"phone is \\\"0132547698\\\"\"] = jsonData.phone === \"0132547698\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée Fontenelle\\\"\"] = jsonData.address.street === \"Allée Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{created_collectivegroup_id}},\n    \"groupName\": \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\",\n    \"phone\": \"0132547698\",\n    \"address\": {\n        \"street\": \"Allée Fontenelle\",\n        \"optional\": \"Château de Fontenelle\",\n        \"postalCode\": \"77600\",\n        \"city\": \"Chanteloup-en-Brie\",\n        \"country\": \"France\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroupBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/collectiveGroupBills?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"collectiveGroupBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroupBill",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93a56176-d7e8-42e5-8098-ea7c51f33cb5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE CollectiveGroupBill) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbe459b4-90c9-4956-8b82-b009357f2a22",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0129c2ff-a9ea-447e-9154-b59db656976e",
								"type": "text/javascript",
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0,0,0,0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/CollectiveGroup?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"              \"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",",
									"              \"phone\":\"0123456789\",",
									"              \"address\":{",
									"                \"street\":\"Allée de Fontenelle\",",
									"                \"optional\":\"Château de Fontenelle\",",
									"                \"postalCode\":\"77600\",",
									"                \"city\":\"Chanteloup-en-Brie\"",
									"              }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_collectivegroup_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9cf1bc26-42ce-4bfa-8411-193ad3b1648a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_collectivegroupbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_collectivegroupbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"collectivegroupbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"collectiveGroup\":{\n    \"id\":{{created_collectivegroup_id}}\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_collectivegroupbill_reference\")] = jsonData.reference == pm.environment.get(\"created_collectivegroupbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_collectivegroupbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_collectivegroupbill_deliveryDate\");",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup.id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"tests[\"purchasedOfferings[0].id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = pm.environment.get(\"created_purchasedoffering_id\") == jsonData.purchasedOfferings[0].id;",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/{{created_collectivegroupbill_reference}}/{{created_collectivegroupbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"{{created_collectivegroupbill_reference}}",
								"{{created_collectivegroupbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_collectivegroupbill_reference\")] = jsonData.reference == pm.environment.get(\"created_collectivegroupbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_collectivegroupbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_collectivegroupbill_deliveryDate\");",
									"",
									"tests[\"cltype is collectivegroupbill\"] = jsonData.cltype === \"collectivegroupbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup.id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"tests[\"purchasedOfferings[0].id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = pm.environment.get(\"created_purchasedoffering_id\") == jsonData.purchasedOfferings[0].id;",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_collectivegroupbill_reference}}\",\n    \"deliveryDate\": {{created_collectivegroupbill_deliveryDate}},\n    \"paymentDate\": {{created_collectivegroupbill_deliveryDate}},\n    \"cltype\": \"collectivegroupbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": {{created_offering_id}},\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"collectiveGroup\":{\n      \"id\":{{created_collectivegroup_id}}\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/CollectiveGroup/\"+pm.environment.get('created_collectivegroup_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/{{created_collectivegroupbill_reference}}/{{created_collectivegroupbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"{{created_collectivegroupbill_reference}}",
								"{{created_collectivegroupbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CustomerDetails",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CustomerDetails table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.id);",
									"",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"nickname\": \"X\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": {{birthdate}},\n        \"sex\": \"M\",\n        \"picturePath\": \"C:/Documents and Settings/whateverUwant.png\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\"\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is undefine\"] = jsonData.nickname === undefined;",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \\\"1467986000\\\"\"] = jsonData.birthdate === 1467986000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is undefined\"] = jsonData.picturePath === undefined;",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 5;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\":{{created_customer_details_id}},\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": 1467986000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\",\n            \"But he has no name LOL\"\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ClassicExpense",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6eada9fb-6d13-45ee-b22b-fedea1afdce9",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"Expense table is not empty\"] = jsonData.length >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7aeef72b-2ce8-43c6-986b-32e9276030d3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38dd6504-df6b-4e0b-9295-e0177f9086bf",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"classic\\\"\"] = jsonData.cltype === \"classic\";",
									"tests[\"description is \\\"Purple Color\\\"\"] = jsonData.description === \"Purple Color\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"provider is \\\"L'OREAL\\\"\"] = jsonData.provider === \"L'OREAL\";",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"classic\",\n  \"description\":\"Purple Color\",\n  \"amount\":4050,\n  \"paymentDate\":1505707896023,\n  \"provider\":\"L'OREAL\",\n  \"vatInclusive\": false,\n  \"categories\": [\n            \"Color\",\n            \"Perfect Color from Paris\"\n    ],\n    \"payments\": [\n            {\n        \"amount\": 4000,\n                \"paymentMode\": {\n                    \"name\": \"CB\"\n                }\n            },\n            {\n                \"amount\": 50,\n                \"paymentMode\": {\n                    \"name\": \"Espèces\"\n                }\n            }\n        ],\n    \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n    ],\n    \"expenseItems\":[\n      {\n      \"description\":\"Purple #1\",\n      \"amount\":1000,\n      \"qty\":2,\n      \"vatRate\":20\n      },\n      {\n      \"description\":\"Purple #2\",\n      \"amount\":500,\n      \"qty\":3,\n      \"vatRate\":10\n      }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2975370c-b6b6-4f90-a030-d33c50d623ec",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"classic\\\"\"] = jsonData.cltype === \"classic\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description === \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_expense_id}},\n  \"cltype\": \"classic\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update - cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a292cce-f8b1-4e00-b1ac-93ecb66eb5d1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"classic\\\"\"] = jsonData.cltype === \"classic\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description === \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_expense_id}},\n  \"cltype\": \"classic\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"cancelled\":true,\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "861150bb-2bc8-4ba1-8e35-30ec60d72efb",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.get(\"created_expense_id\");",
									"//created_expense_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.id == pm.environment.get(\"created_expense_id\");",
									"",
									"tests[\"cltype is \\\"classic\\\"\"] = jsonData.cltype === \"classic\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description === \"Purple Color sticks\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClassicExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClassicExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ExpenseItem",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f242b2ad-db33-4da5-99af-2072706ba84d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"ExpenseItem table is not empty\"] = jsonData.length >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ec7ac7e-2774-4796-bad9-92b077579081",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"/*tests[\"Total count >= 1\"] = responseBody >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25633915-ad72-4282-91db-76d759ec046c",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense-item_id\", jsonData.id);",
									"",
									"tests[\"description is \\\"An expense itemt\\\"\"] = jsonData.description === \"An expense item\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"vatRate is 10\"] = jsonData.vatRate === 10;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\":\"An expense item\",\n  \"amount\": 1000,\n  \"qty\":2,\n  \"vatRate\":10\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea605b08-d37c-463b-a185-a032e776532b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_expense-item_id\")] = jsonData.id == pm.environment.get(\"created_expense-item_id\");",
									"tests[\"description is \\\"An expense itemt\\\"\"] = jsonData.description === \"An expense item\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"vatRate is 10\"] = jsonData.vatRate === 10;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem/{{created_expense-item_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem",
								"{{created_expense-item_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2e9c1d4-f72d-464e-b3ca-652c22ea62db",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_expense-item_id\")] = jsonData.id == pm.environment.get(\"created_expense-item_id\");",
									"tests[\"description is \\\"An expense itemt\\\"\"] = jsonData.description === \"An expense item\";",
									"tests[\"amount is 1500\"] = jsonData.amount === 1500;",
									"tests[\"qty is 3\"] = jsonData.qty === 3;",
									"tests[\"vatRate is 10\"] = jsonData.vatRate === 10;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":{{created_expense-item_id}},\n    \"description\": \"An expense item\",\n    \"amount\": 1500,\n    \"qty\": 3,\n    \"vatRate\": 10\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ExpenseItem/{{created_expense-item_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExpenseItem",
								"{{created_expense-item_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			]
		},
		{
			"name": "Individual",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962,11,25));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\";",
									"tests[\"cltype is Individual\"] = jsonData.cltype === \"Individual\";",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"individual@gmail.com\",\n  \"cltype\":\"Individual\",\n  \"password\":\"PASSWORD\",\n  \"username\":\"individual_test\",\n  \"customerDetails\": {\n            \"firstName\": \"prenom\",\n            \"lastName\": \"nom\",\n            \"nickname\": \"surnom\",\n            \"phone\": \"0102030405\",\n            \"birthdate\": {{birthdate}},\n            \"sex\": \"F\",\n            \"comments\": [\n                \"Cool\",\n                \"Good looking\",\n                \"Open minded\",\n                \"Likes art and music\",\n                \"Nice hair\"\n            ]\n        },\n        \"address\": {\n          \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"Chanteloup-en-Brie\"\n        },\n        \"socialNetworkAccounts\": {\n          \"facebook\": \"https://www.facebook.com/individual\",\n            \"twitter\": \"@individualtwitter\",\n            \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"\n        }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\";",
									"tests[\"cltype is Individual\"] = jsonData.cltype === \"Individual\";",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"ind_test\\\"\"] = jsonData.username === \"ind_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"individual@gmail.com\",\n  \"cltype\":\"Individual\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"ind_test\",\n    \"registrationDate\": 1504361329000,\n    \"customerDetails\": {\n        \"id\": {{created_customer_details_id}},\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": {{created_address_id}},\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": {{created_socialnetworkaccounts_id}},\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Individual UserGroup\"] = responseBody.has(\"Individual\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIndividualBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/individualBills",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"individualBills"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/insertToUserGroup/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"insertToUserGroup",
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/removeFromUserGroup/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"removeFromUserGroup",
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/buildBusinessRelationship/vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"buildBusinessRelationship",
								"vanessa.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProfessionals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/professionals",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"professionals"
							]
						}
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/endBusinessRelationship/vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"endBusinessRelationship",
								"vanessa.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IndividualBill",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "332732d5-63dd-4c0d-b2a6-4ff45c83dabe",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE IndividualBill) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1163cc2f-6962-4289-b768-8ca4c898d6c3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "053e4dc9-f91d-4580-a3c4-c937eb62b01f",
								"type": "text/javascript",
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0,0,0,0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962,11,25));",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Individual\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"              \"email\":\"individual@gmail.com\",",
									"              \"cltype\":\"Individual\",",
									"              \"password\":\"PASSWORD\",",
									"              \"username\":\"individual_test\",",
									"              \"customerDetails\": {",
									"                        \"firstName\": \"prenom\",",
									"                        \"lastName\": \"nom\",",
									"                        \"nickname\": \"surnom\",",
									"                        \"phone\": \"0102030405\",",
									"                        \"birthdate\": pm.environment.get(\"birthdate\"),",
									"                        \"sex\": \"F\",",
									"                        \"comments\": [",
									"                            \"Cool\",",
									"                            \"Good looking\",",
									"                            \"Open minded\",",
									"                            \"Likes art and music\",",
									"                            \"Nice hair\"",
									"                        ]",
									"                    },",
									"                    \"address\": {",
									"                      \"street\": \"10 route de la ferme du pavillon\",",
									"                        \"postalCode\": \"77600\",",
									"                        \"city\": \"Chanteloup-en-Brie\"",
									"                    },",
									"                    \"socialNetworkAccounts\": {",
									"                      \"facebook\": \"https://www.facebook.com/individual\",",
									"                        \"twitter\": \"@individualtwitter\",",
									"                        \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"",
									"                    }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_individual_email\", response.json().email);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a4c1da50-5757-475a-bea5-5164eed77def",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_individualbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_individualbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.individual.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"individualbill\",\n    \"deliveryDate\":{{billdate}},\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"individual\":{\n    \"email\":\"{{created_individual_email}}\",\n    \"cltype\":\"Individual\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"reference is \"+pm.environment.get(\"created_individualbill_reference\")] = jsonData.reference == pm.environment.get(\"created_individualbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_individualbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_individualbill_deliveryDate\");",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.individual.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/{{created_individualbill_reference}}/{{created_individualbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"{{created_individualbill_reference}}",
								"{{created_individualbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"reference is \"+pm.environment.get(\"created_individualbill_reference\")] = jsonData.reference == pm.environment.get(\"created_individualbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_individualbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_individualbill_deliveryDate\");",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.individual.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_individualbill_reference}}\",\n    \"deliveryDate\": {{created_individualbill_deliveryDate}},\n    \"paymentDate\":{{created_individualbill_deliveryDate}},\n    \"cltype\": \"individualbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": {{created_offering_id}},\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n  \"individual\":{\n    \"email\":\"{{created_individual_email}}\",\n    \"cltype\":\"Individual\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a3135f5-ec7f-4750-ac4e-0b2c16fcde5d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Individual/\"+pm.environment.get('created_individual_email'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/{{created_individualbill_reference}}/{{created_individualbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"{{created_individualbill_reference}}",
								"{{created_individualbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pack",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c953c0c-b1e8-44dd-8974-7989986f01a1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33d757b8-d712-4fa4-b2df-30ee4fb2685a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_pack_id\", jsonData.id);",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"MASTER PACK\",\n  \"price\":100000,\n  \"duration\":600,\n  \"cltype\":\"pack\",\n  \"businesses\": [\n        {\n                \"designation\": \"Coiffure\"\n        }\n  ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97610284-ea46-41a1-96e3-4a67ff93f70c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/purchasedOfferings?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"purchasedOfferings"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getParentPacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97610284-ea46-41a1-96e3-4a67ff93f70c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/parentPacks?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"parentPacks"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"WEDDING PACK\\\"\"] = jsonData.name === \"WEDDING PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"businesses length is 2\"] = jsonData.businesses.length === 2;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_pack_id}},\n  \"name\":\"WEDDING PACK\",\n  \"price\":100000,\n  \"duration\":600,\n  \"cltype\":\"pack\",\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            },\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addService",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02103225-32d6-4647-8a2a-887d674e45b3",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:10000,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_service_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "77e209e7-c5a0-4f5e-9082-a793d33ee1ec",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_service_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_service_id\")] = jsonData.id == pm.environment.get(\"created_service_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addService/offering/{{created_service_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addService",
								"offering",
								"{{created_service_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addSale",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a89cdabc-2515-4c6a-b1fa-90ce3d748805",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 3,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"    ",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                 name:\"beauty product\",",
									"              price:10000,",
									"              qty:2,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"sale\",",
									"                product:{",
									"        \"availableQty\": 3,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_sale_id\", response.json().id);",
									"});",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01a3315f-d206-4295-b4ef-04cb16e3515f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_sale_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_sale_id\")] = jsonData.id == pm.environment.get(\"created_sale_id\");",
									"tests[\"name is \\\"beauty product\\\"\"] = jsonData.name === \"beauty product\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 0\"] = jsonData.duration === 0;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addSale/offering/{{created_sale_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addSale",
								"offering",
								"{{created_sale_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addPack",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Pack?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"SubPack for Winners\",",
									"              price:5000,",
									"              duration:10,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"pack\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_subpack_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addPack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addPack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeService",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0ef14ec-8bc5-4f3d-bc6f-8d443a136733",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_service_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_service_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_service_id\")] = jsonData.id == pm.environment.get(\"created_service_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removeService/offering/{{created_service_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removeService",
								"offering",
								"{{created_service_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeSale",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d96d847-dff9-4dc4-912f-9c3b9d61865c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale/\"+pm.environment.get('created_sale_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_sale_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_sale_id\")] = jsonData.id == pm.environment.get(\"created_sale_id\");",
									"tests[\"name is \\\"beauty product\\\"\"] = jsonData.name === \"beauty product\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 0\"] = jsonData.duration === 0;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removeSale/offering/{{created_sale_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removeSale",
								"offering",
								"{{created_sale_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removePack",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Pack/\"+pm.environment.get('created_subpack_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removePack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removePack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payment table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_payment_id\", jsonData.id);",
									"",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\":100,\n  \"paymentMode\":\n  {\n    \"name\":\"CB\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 200\"] = jsonData.amount === 200;",
									"tests[\"paymentMode.name is \\\"Chèque\\\"\"] = jsonData.paymentMode.name === \"Chèque\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_payment_id}},\n  \"amount\":200,\n  \"paymentMode\":\n  {\n    \"name\":\"Chèque\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PaymentMode",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"PaymentMode table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is defined\"] = jsonData.name !== undefined;",
									"pm.environment.set(\"created_paymentmode_name\", jsonData.name);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"BitCoins\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \"+pm.environment.get(\"created_paymentmode_name\")] = jsonData.name == pm.environment.get(\"created_paymentmode_name\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9298f39e-df7e-402b-b5a9-074ffddb4b70",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Product table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2225329f-8a77-4eec-8991-8dd3f1046d2c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98c79e1d-a745-4599-a01d-6b0db2ba797d",
								"type": "text/javascript",
								"exec": [
									"pm.test('Response is 201 Created',function(){",
									"    pm.response.to.have.status(201);",
									"    pm.response.to.have.status(\"Created\");",
									"})",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('availableQty is 3',function(){",
									"    pm.expect(jsonData.availableQty).to.equal(3);",
									"})",
									"",
									"pm.test('thresholdWarning is 2 and thresholdSevere is 1',function(){",
									"    pm.expect(jsonData.thresholdWarning).to.equal(2);",
									"    pm.expect(jsonData.thresholdSevere).to.equal(1);",
									"})",
									"",
									"var pr = {",
									"        \"description\": \"blond color stick\",",
									"        \"brand\": \"L'OREAL\",",
									"        \"business\": {",
									"            \"designation\": \"Coiffure\"",
									"        }",
									"    };",
									"pr.barcode = pm.environment.get('created_product-reference_barcode');",
									"    ",
									"pm.test('productReference is correct',function(){",
									"    pm.expect(jsonData.productReference).to.deep.equal(pr);",
									"})",
									"",
									"pm.test('comments.length is 2',function(){",
									"    pm.expect(jsonData.comments).to.have.lengthOf(2);",
									"})",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8166e928-0c45-4c64-bf2b-2bea50336e67",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"availableQty\": 3,\n        \"thresholdWarning\": 2,\n        \"thresholdSevere\": 1,\n        \"comments\":[\n        \t\"No restriction\",\n        \t\"ok for me\"\n        ],\n        \"productReference\": {\n\t\"barcode\": {{created_product-reference_barcode}},\n\t\"description\": \"blond color stick\",\n\t\"brand\": \"L'OREAL\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n}\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/Product?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fab05c85-3081-4eb7-925a-26b3d136580d",
								"type": "text/javascript",
								"exec": [
									"pm.test('Response is 200 OK',function(){",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('availableQty is 3',function(){",
									"    pm.expect(jsonData.availableQty).to.equal(3);",
									"})",
									"",
									"pm.test('thresholdWarning is 2 and thresholdSevere is 1',function(){",
									"    pm.expect(jsonData.thresholdWarning).to.equal(2);",
									"    pm.expect(jsonData.thresholdSevere).to.equal(1);",
									"})",
									"",
									"var pr = {",
									"        \"description\": \"blond color stick\",",
									"        \"brand\": \"L'OREAL\",",
									"        \"business\": {",
									"            \"designation\": \"Coiffure\"",
									"        }",
									"    };",
									"pr.barcode = pm.environment.get('created_product-reference_barcode');",
									"    ",
									"pm.test('productReference is correct',function(){",
									"    pm.expect(jsonData.productReference).to.deep.equal(pr);",
									"})",
									"",
									"pm.test('comments.length is 2',function(){",
									"    pm.expect(jsonData.comments).to.have.lengthOf(2);",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3d68d0f-8001-4fb8-8104-1592438a9382",
								"type": "text/javascript",
								"exec": [
									"pm.test('Response is 200 OK',function(){",
									"    pm.response.to.be.ok;",
									"})",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test('availableQty is 3',function(){",
									"    pm.expect(jsonData.availableQty).to.equal(3);",
									"})",
									"",
									"pm.test('thresholdWarning is 3 and thresholdSevere is 2',function(){",
									"    pm.expect(jsonData.thresholdWarning).to.equal(3);",
									"    pm.expect(jsonData.thresholdSevere).to.equal(2);",
									"})",
									"",
									"var pr = {",
									"        \"description\": \"blond color stick\",",
									"        \"brand\": \"L'OREAL\",",
									"        \"business\": {",
									"            \"designation\": \"Coiffure\"",
									"        }",
									"    };",
									"pr.barcode = pm.environment.get('created_product-reference_barcode');",
									"    ",
									"pm.test('productReference is correct',function(){",
									"    pm.expect(jsonData.productReference).to.deep.equal(pr);",
									"})",
									"",
									"pm.test('comments.length is 1',function(){",
									"    pm.expect(jsonData.comments).to.have.lengthOf(1);",
									"    pm.expect(jsonData.comments[0]).to.equal('Just one comment');",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"availableQty\": 3,\n        \"thresholdWarning\": 3,\n        \"thresholdSevere\": 2,\n        \"comments\":[\n        \t\"Just one comment\"\n        ],\n        \"productReference\": {\n\t\t\t\"barcode\": {{created_product-reference_barcode}}\n\t\t}\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/Product?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getSales",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}/sales?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}",
								"sales"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getProductRecords",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}/productRecords?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}",
								"productRecords"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52799f14-c770-413d-9d89-9a768e64963a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Product/{{created_product-reference_barcode}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Product",
								"{{created_product-reference_barcode}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ProductReference",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52aa34a3-e453-4bff-89b8-e093a6ce3979",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8e11493-61a2-46e1-9126-03c2423a421d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1df6e47-d2bf-41b4-b1a7-6f0825707b7d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"barcode is defined\"] = jsonData.barcode !== undefined;",
									"pm.environment.set(\"created_product-reference_barcode\", jsonData.barcode);",
									"",
									"tests[\"description is \\\"blond color stick\\\"\"] = jsonData.description === \"blond color stick\";",
									"tests[\"brand is \\\"L'OREAL\\\"\"] = jsonData.brand === \"L'OREAL\";",
									"tests[\"business.designation is \\\"Coiffure\\\"\"] = jsonData.business.designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"barcode\": \"1234567899\",\n\t\"description\": \"blond color stick\",\n\t\"brand\": \"L'OREAL\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2fbed31-963a-498d-8e32-19526eb10d5f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"description is \\\"blond color stick\\\"\"] = jsonData.description === \"blond color stick\";",
									"tests[\"brand is \\\"L'OREAL\\\"\"] = jsonData.brand === \"L'OREAL\";",
									"tests[\"business.designation is \\\"Coiffure\\\"\"] = jsonData.business.designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference/{{created_product-reference_barcode}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"{{created_product-reference_barcode}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb29621b-bf9b-4fb7-9bb1-0f75833e2301",
								"type": "text/javascript",
								"exec": [
									" pm.test(\"response should be 200 OK\", function () {",
									"           pm.response.to.be.ok",
									" });",
									" ",
									" var jsonData = pm.response.json();",
									" ",
									" pm.test(\"response should contain an array with at least one ProductReference\", function(){",
									"     pm.expect(Array.isArray(jsonData)).to.be.true;",
									"     pm.expect(jsonData.length).gt(0);",
									"});",
									" ",
									"pm.test(\"response should contain barcode \"+pm.environment.get(\"created_product-reference_barcode\"),function(){",
									"    ",
									"    var pr = jsonData",
									"        .filter(pr => pr.barcode === pm.environment.get(\"created_product-reference_barcode\"))",
									"        .pop();",
									"    ",
									"    pm.expect(pr.barcode).to.equal(pm.environment.get(\"created_product-reference_barcode\"));",
									" });",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8d6b97be-40ca-4220-8425-cdb5d1a5087b",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"searched_product-reference_barcode\", pm.environment.get(\"created_product-reference_barcode\").substring(0,4));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference/search/{{searched_product-reference_barcode}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"search",
								"{{searched_product-reference_barcode}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc98c581-5234-4ffd-b025-a4fc2ab04973",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"",
									"tests[\"description is \\\"black color stick\\\"\"] = jsonData.description === \"black color stick\";",
									"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
									"tests[\"business.designation is \\\"Coiffure\\\"\"] = jsonData.business.designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"barcode\": {{created_product-reference_barcode}},\n\t\"description\": \"black color stick\",\n\t\"brand\": \"WELLA\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ProductReference/{{created_product-reference_barcode}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ProductReference",
								"{{created_product-reference_barcode}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			]
		},
		{
			"name": "Professional",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;",
									"",
									"tests[\"vanessa.gay@gmail.com\"] = responseBody.has(\"vanessa.gay@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "677fdf28-b505-4889-bcca-077c8d990cef",
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "35cf4342-b703-4dcd-b3b7-59bd19539311",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"cltype is Professional\"] = jsonData.cltype === \"Professional\";",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0132039405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 4\"] = jsonData.customerDetails.comments.length === 4;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"79 Avenue de la jonchère\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pro@domain.com\",\n    \"cltype\": \"Professional\",\n    \"password\": \"PASSWORD\",\n    \"username\": \"pro_test\",\n    \"customerDetails\": {\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Author\",\n        \"phone\": \"0132039405\",\n        \"birthdate\": {{birthdate}},\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"street\": \"79 Avenue de la jonchère\",\n        \"optional\": \"Appart A113\",\n        \"postalCode\": \"77600\",\n        \"city\": \"Chanteloup-en-Brie\"\n    },\n    \"socialNetworkAccounts\": {\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    },\n    \"companyName\": \"Californation\",\n    \"companyID\": \"55211846503644\",\n    \"vatcode\": \"FR91552118465\",\n    \"creationDate\": 1483225200000,\n    \"businesses\": [\n        {\n            \"designation\": \"Coiffure\"\n        }\n    ],\n    \"paymentModes\": [\n        {\n            \"name\": \"Espèces\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "buildModelOfferings",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4968be68-53fd-4d0c-b240-22a7d9f33f20",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8e276a8c-fbb0-4085-96e4-c2045c57c0b8",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/OfferingsModel/build/?professional=pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"OfferingsModel",
								"build",
								""
							],
							"query": [
								{
									"key": "professional",
									"value": "pro@domain.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/offerings?email=pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"offerings"
							],
							"query": [
								{
									"key": "email",
									"value": "pro@domain.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca6a35f7-6816-4c86-b1f8-742c35f5344c",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0132039405\\\"\"] = jsonData.customerDetails.phone === \"0132039405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 4;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"tests[\"street is \\\"79 Avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 Avenue de la jonchère\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\";",
									"tests[\"cltype is Professional\"] = jsonData.cltype === \"Professional\";",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"tests[\"companyName is \\\"Boss Company\\\"\"] = jsonData.companyName === \"Boss Company\";",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pro@domain.com\",\n    \"cltype\":\"Professional\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"pro_test\",\n    \"uuid\": \"PRO_d7d1b42c88b8450c96236d0a0f5b8294\",\n    \"registrationDate\": 1504361329000,\n    \"vatcode\": \"FR91552118465\",\n    \"companyName\": \"Boss Company\",\n    \"customerDetails\": {\n        \"id\": {{created_customer_details_id}},\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": {{created_address_id}},\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": {{created_socialnetworkaccounts_id}},\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    },\n    \"businesses\":[\n      {\n          \"designation\": \"Coiffure\"\n      },\n      {\n          \"designation\": \"Esthétique\"\n      }\n  ],\n  \"paymentModes\":[\n      {\n          \"name\": \"CB\"\n      },\n      {\n          \"name\": \"Chèque\"\n      },\n      {\n          \"name\": \"Espèces\"\n      },\n      {\n        \"name\": \"Virement\"\n      }  \n  ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Professional UserGroup\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/insertToUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"insertToUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/removeFromUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"removeFromUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48812e86-95b8-47a5-bf97-28ed391ee312",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/bills?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"bills"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/clients?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"clients"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/categories?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"categories"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/collectiveGroups?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"collectiveGroups"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getExpenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/expenses?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"expenses"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getStock",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/stock?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"stock"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getNotifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/notifications?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"notifications"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIndividuals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/individuals?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"individuals"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be skonx2006@gmail.com\"] = jsonData.email === \"skonx2006@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/buildBusinessRelationship/skonx2006@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"buildBusinessRelationship",
								"skonx2006@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be skonx2006@gmail.com\"] = jsonData.email === \"skonx2006@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/endBusinessRelationship/skonx2006@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"endBusinessRelationship",
								"skonx2006@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PurchaseExpense",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3be4307f-f9ef-4502-ab6b-30bfa1dbff83",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"Expense table is not empty\"] = jsonData.length >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce707784-fc39-4820-b0c3-3b7d10da0ccd",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*tests[\"count >= 1\"] = responseBody >= 1;*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a862912-f1fa-42bf-a85f-82a8e9da4688",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color\\\"\"] = jsonData.description === \"Purple Color\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"provider is \\\"L'OREAL\\\"\"] = jsonData.provider === \"L'OREAL\";",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"purchase\",\n  \"description\":\"Purple Color\",\n  \"amount\":4050,\n  \"paymentDate\":1505707896023,\n  \"provider\":\"L'OREAL\",\n  \"vatInclusive\": false,\n  \"categories\": [\n            \"Color\",\n            \"Perfect Color from Paris\"\n    ],\n    \"payments\": [\n            {\n        \"amount\": 4000,\n                \"paymentMode\": {\n                    \"name\": \"CB\"\n                }\n            },\n            {\n                \"amount\": 50,\n                \"paymentMode\": {\n                    \"name\": \"Espèces\"\n                }\n            }\n        ],\n    \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n    ],\n    \"expenseItems\":[\n      {\n      \"description\":\"Purple #1\",\n      \"amount\":1000,\n      \"qty\":2,\n      \"vatRate\":20\n      },\n      {\n      \"description\":\"Purple #2\",\n      \"amount\":500,\n      \"qty\":3,\n      \"vatRate\":10\n      }\n    ],\n    \"invoiceRef\":\"FR123456XXLOREAL\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b28845c3-65f0-49f0-a8f9-a5bde46fc7cc",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description !== \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"cancellationDate is undefined\"] = jsonData.cancellationDate === undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_expense_id}},\n  \"cltype\": \"purchase\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update - cancel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09290e0e-7de4-441e-b7cd-b5f80d41bf1b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color sticks\\\"\"] = jsonData.description !== \"Purple Color sticks\";",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"vatInclusive is true\"] = jsonData.vatInclusive === true;",
									"tests[\"expenseItems length is 2\"] = jsonData.expenseItems.length === 2;",
									"",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_expense_id}},\n  \"cltype\": \"purchase\",\n  \"description\":\"Purple Color sticks\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n  ],\n  \"provider\": \"Bleu Libellule\",\n  \"cancelled\":true,\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ca20e16-6e04-46b7-93f4-5a3385a2f8e3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.get(\"created_expense_id\");",
									"//created_expense_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.id == pm.environment.get(\"created_expense_id\");",
									"",
									"tests[\"cltype is \\\"purchase\\\"\"] = jsonData.cltype === \"purchase\";",
									"tests[\"description is \\\"Purple Color\\\"\"] = jsonData.description === \"Purple Color\";",
									"tests[\"amount is 4050\"] = jsonData.amount === 4050;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";",
									"tests[\"invoiceRef is \\\"FR123456XXLOREAL\\\"\"] = jsonData.invoiceRef === \"FR123456XXLOREAL\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/{{created_expense_id}}/purchasedItems?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"{{created_expense_id}}",
								"purchasedItems"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchaseExpense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchaseExpense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PurchasedItem",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27b7c8ab-5926-4ac2-8c58-0b3ebe93b341",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2395f75-b3f7-41a7-b1f2-6615d8b9c513",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b687e730-a03c-4490-aa98-6e70c7681f29",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"tests[\"purchaseExpense.id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.purchaseExpense.id === pm.environment.get(\"created_expense_id\");",
									"",
									"/*",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";*/",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f5b1b44c-9c85-4a29-8955-e7855cb31f46",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 3,",
									"        \"thresholdWarning\": 3,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/PurchaseExpense?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"  \"cltype\": \"purchase\",",
									"  \"description\":\"Purple Color\",",
									"  \"amount\":4050,",
									"  \"paymentDate\":1505707896023,",
									"  \"provider\":\"L'OREAL\",",
									"  \"vatInclusive\": false,",
									"  \"categories\": [",
									"            \"Color\",",
									"            \"Perfect Color from Paris\"",
									"    ],",
									"    \"payments\": [",
									"            {",
									"        \"amount\": 4000,",
									"                \"paymentMode\": {",
									"                    \"name\": \"CB\"",
									"                }",
									"            },",
									"            {",
									"                \"amount\": 50,",
									"                \"paymentMode\": {",
									"                    \"name\": \"Espèces\"",
									"                }",
									"            }",
									"        ],",
									"    \"businesses\": [",
									"            {",
									"                \"designation\": \"Coiffure\"",
									"            }",
									"    ],",
									"    \"expenseItems\":[",
									"      {",
									"      \"description\":\"Purple #1\",",
									"      \"amount\":1000,",
									"      \"qty\":2,",
									"      \"vatRate\":20",
									"      },",
									"      {",
									"      \"description\":\"Purple #2\",",
									"      \"amount\":500,",
									"      \"qty\":3,",
									"      \"vatRate\":10",
									"      }",
									"    ],",
									"    \"invoiceRef\":\"FR123456XXLOREAL\"",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"    pm.environment.set(\"created_expense_id\", response.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"purchased\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": {{created_product-reference_barcode}}\n            }\n        },\n        \"purchaseExpense\": {\n            \"id\": {{created_expense_id}},\n            \"cltype\": \"purchase\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbdc8c37-a102-4b1c-96c3-934bade7bbb1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"tests[\"purchaseExpense.id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.purchaseExpense.id === pm.environment.get(\"created_expense_id\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db5f2375-439f-44e5-be95-1b0b5e079f96",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"tests[\"purchaseExpense.id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.purchaseExpense.id === pm.environment.get(\"created_expense_id\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": {{created_product-record_id}},\n        \"cltype\": \"purchased\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"1234567891\"\n            }\n        },\n        \"purchaseExpense\": {\n            \"id\": 9,\n            \"cltype\": \"purchase\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d035ec1-f475-4a77-99ab-31a0769300e8",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/PurchaseExpense/\"+pm.environment.get('created_expense_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			]
		},
		{
			"name": "PurchasedOffering",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "981efd3c-83ca-456a-b609-ad7a6353d4fa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"PurchasedOffering table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "200c86de-62bc-4409-a9d4-60ece1ed2721",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:10000,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.id);",
									"",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"qty\":2,\n  \"offering\":{\n    \"id\":{{created_offering_id}},\n      \"name\":\"beauty service\",\n      \"price\":10000,\n      \"duration\":180,\n      \"businesses\": [\n         {\n             \"designation\": \"Esthétique\"\n         }\n       ],\n      \"cltype\":\"service\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5798ba94-9059-43ff-8ffd-a2c32505add0",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = jsonData.id == pm.environment.get(\"created_purchasedoffering_id\");",
									"",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";",
									"",
									"tests[\"offering.cltype = offeringSnapshot.cltype\"] = jsonData.offering.cltype === jsonData.offeringSnapshot.cltype;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/{{created_purchasedoffering_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"{{created_purchasedoffering_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = jsonData.id == pm.environment.get(\"created_purchasedoffering_id\");",
									"",
									"tests[\"qty is 20\"] = jsonData.qty === 20;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_purchasedoffering_id}},\n  \"qty\":20,\n  \"offering\":{\n    \"id\":{{created_offering_id}},\n      \"name\":\"beauty service\",\n      \"price\":10000,\n      \"duration\":180,\n      \"businesses\": [\n         {\n             \"designation\": \"Esthétique\"\n         }\n       ],\n      \"cltype\":\"service\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/{{created_purchasedoffering_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"{{created_purchasedoffering_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ReturnedItem",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27b7c8ab-5926-4ac2-8c58-0b3ebe93b341",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2395f75-b3f7-41a7-b1f2-6615d8b9c513",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "inits create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a980c99-3ef0-46ff-9a51-bd9c60dc93c5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7815ba55-f65e-45c8-bff9-d423aa769295",
								"type": "text/javascript",
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0,0,0,0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 13,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"    ",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty product\",",
									"                qty:2,",
									"              price:1000,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"sale\",",
									"                product:{",
									"        \"availableQty\": 13,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_sale_id\", response.json().id);",
									"});",
									"    ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":9000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    },\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_sale_id}},\n        \"cltype\": \"sale\",\n        \"name\": \"beauty service\",\n        \"price\": 1000,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":{{created_client_id}}\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "identify autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ad38598-c124-45ab-8e02-4c674d7853a1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"There is one or more SoldItem\"] = jsonData.length >= 1;",
									"",
									"var lng = jsonData.length;",
									"// the auto created sold item should be the last one...",
									"var autoCreatedSoldItem = jsonData[lng-1];",
									"",
									"// save the id",
									"pm.environment.set(\"auto_created_product_record_id\", autoCreatedSoldItem.id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "cancel Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b54dcf58-9257-4c68-83b0-57367552cb52",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"*/"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/cancel/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"cancel",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Cancel a paid bill will do nothing : bill is definitively closed."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f12e59b-d0cf-4488-91dd-f49475e2333b",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 7\"] = jsonData.product.availableQty === 7;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"cancelledBill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.cancelledBill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"cancelledBill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.cancelledBill.deliveryDate === pm.environment.get(\"billdate\");",
									"",
									"tests[\"cancelledBill.cancelled is true\"] = jsonData.cancelledBill.cancelled === true;",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3cbb147b-bd2d-490e-8f8d-bd1724f10e1d",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"returned\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": {{created_product-reference_barcode}}\n            }\n        },\n        \"cancelledBill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42dfe700-3abb-4ee4-88c5-422c7e83c998",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 7\"] = jsonData.product.availableQty === 7;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"cancelledBill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.cancelledBill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"cancelledBill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.cancelledBill.deliveryDate === pm.environment.get(\"billdate\");",
									"",
									"tests[\"cancelledBill.cancelled is true\"] = jsonData.cancelledBill.cancelled === true;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dbf88a6a-713f-47a1-9386-4ecec007dfdb",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"cancelledBill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.cancelledBill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"cancelledBill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.cancelledBill.deliveryDate === pm.environment.get(\"billdate\");",
									"",
									"tests[\"cancelledBill.cancelled is true\"] = jsonData.cancelledBill.cancelled === true;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": {{created_product-record_id}},\n        \"cltype\": \"returned\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": {{created_product-reference_barcode}}\n            }\n        },\n        \"cancelledBill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6cb1191-4c4b-4bd2-a86c-a353870c9660",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ReturnedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ReturnedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "delete autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6cb1191-4c4b-4bd2-a86c-a353870c9660",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{auto_created_product_record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{auto_created_product_record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "clean after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b258130-1679-4946-a3b3-27f362762d65",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale/\"+pm.environment.get('created_sale_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    ",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client/\"+pm.environment.get('created_client_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sale",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd96b546-294b-47cd-92e9-79e3972b6c8e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Sale (Offering) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39a649f9-b514-4402-b741-ab27e2f607c2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "480d531d-0fa1-4367-8255-4f04d9f2ad02",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"product sale\\\"\"] = jsonData.name === \"product sale\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";",
									"",
									"tests[\"product.productReference.barcode is \"+pm.environment.get('created_product-reference_barcode')] = jsonData.product.productReference.barcode === pm.environment.get('created_product-reference_barcode');"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c2ff48c4-8233-4b31-acea-8d346eec9069",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 3,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"    ",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"sale\",\n  \"name\":\"product sale\",\n  \"price\":10000,\n  \"qty\":2,\n  \"businesses\": [\n        {\n                \"designation\": \"Coiffure\"\n        }],\n  \"product\": {\n        \"availableQty\": 3,\n        \"thresholdWarning\": 2,\n        \"thresholdSevere\": 1,\n        \"comments\":[\n        \t\"No restriction\",\n        \t\"ok for me\"\n        ],\n        \"productReference\": {\n\t\"barcode\": {{created_product-reference_barcode}},\n\t\"description\": \"blond color stick\",\n\t\"brand\": \"L'OREAL\",\n\t\"business\":            \n\t\t{\n\t\t\t\"designation\": \"Coiffure\"\n    \t}\n        }\n        }\n  \n}"
						},
						"url": {
							"raw": "{{API_URL}}/Sale?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce975fc9-223e-4206-b773-ecf68700407e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"product sale\\\"\"] = jsonData.name === \"product sale\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 0\"] = jsonData.duration === 0;",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f6faa1-49cf-4c8a-90dd-05a4b1eaa792",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}/purchasedOfferings?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}",
								"purchasedOfferings"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getParentPacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f6faa1-49cf-4c8a-90dd-05a4b1eaa792",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}/parentPacks?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}",
								"parentPacks"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "791efc62-3c74-4212-b0ab-c67dc6bb9255",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"new product\\\"\"] = jsonData.name === \"new product\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"first business designation is \\\"Esthétique\\\"\"] = jsonData.businesses[0].designation === \"Esthétique\";",
									"tests[\"cltype is sale\"] = jsonData.cltype === \"sale\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"sale\",\n  \"id\":{{created_offering_id}},\n  \"name\":\"new product\",\n  \"price\":100000,\n  \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Sale?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa2bf515-01de-4eae-9421-c70e9cd7a432",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Sale/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Sale",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e49107f-de06-4b68-b5ce-8db65f753580",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table exists\"] = jsonData.length >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39a649f9-b514-4402-b741-ab27e2f607c2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 0\"] = responseBody >= 0;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9461bb2-da79-4289-a4db-bebc864eae24",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"shortname is \\\"bs\\\"\"] = jsonData.shortname === \"bs\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"beauty service\",\n  \"shortname\":\"bs\",\n  \"price\":10000,\n  \"duration\":180,\n  \"cltype\":\"service\",\n  \"businesses\": [\n        {\n                \"designation\": \"Coiffure\"\n        }\n  ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPurchasedOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f6faa1-49cf-4c8a-90dd-05a4b1eaa792",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}/purchasedOfferings?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}",
								"purchasedOfferings"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getParentPacks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4f6faa1-49cf-4c8a-90dd-05a4b1eaa792",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}/parentPacks?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}",
								"parentPacks"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"new beauty service\\\"\"] = jsonData.name === \"new beauty service\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 300\"] = jsonData.duration === 300;",
									"tests[\"first business designation is \\\"Esthétique\\\"\"] = jsonData.businesses[0].designation === \"Esthétique\";",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"service\",\n  \"id\":{{created_offering_id}},\n  \"name\":\"new beauty service\",\n  \"price\":100000,\n  \"duration\":300,\n  \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SocialNetworkAccounts",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.id);",
									"",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"facebook\":\"http://www.facebook.com/comptandye\",\n  \"twitter\":\"@comptandye\"\n}\n"
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is \\\"my_pinterest_account\\\"\"] = jsonData.pinterest === \"my_pinterest_account\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_socialnetworkaccounts_id}},\n  \"facebook\":\"http://www.facebook.com/comptandye\",\n  \"twitter\":\"@comptandye\",\n  \"pinterest\":\"my_pinterest_account\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SoldItem",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27b7c8ab-5926-4ac2-8c58-0b3ebe93b341",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2395f75-b3f7-41a7-b1f2-6615d8b9c513",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "inits create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a980c99-3ef0-46ff-9a51-bd9c60dc93c5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"issueDate is defined\"] = jsonData.issueDate !== undefined;",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e040cfc3-7dec-44ef-ba4b-6c7efb73e1e1",
								"type": "text/javascript",
								"exec": [
									"var billdate = new Date();",
									"billdate.setHours(0,0,0,0);",
									"",
									"pm.environment.set(\"billdate\", billdate.getTime());",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 13,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"    ",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty product\",",
									"                qty:2,",
									"              price:1000,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"sale\",",
									"                product:{",
									"        \"availableQty\": 13,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_sale_id\", response.json().id);",
									"});",
									"    ",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":{{billdate}},\n  \"amount\":9000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    },\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_sale_id}},\n        \"cltype\": \"sale\",\n        \"name\": \"beauty service\",\n        \"price\": 1000,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":{{created_client_id}}\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "identify autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ad38598-c124-45ab-8e02-4c674d7853a1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"There is one or more SoldItem\"] = jsonData.length >= 1;",
									"",
									"var lng = jsonData.length;",
									"// the auto created sold item should be the last one...",
									"var autoCreatedSoldItem = jsonData[lng-1];",
									"",
									"// save the id",
									"pm.environment.set(\"auto_created_product_record_id\", autoCreatedSoldItem.id);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8fa8e650-b790-431d-8522-73fa43d7047b",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"bill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.bill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"bill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.bill.deliveryDate === pm.environment.get(\"billdate\");",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3cbb147b-bd2d-490e-8f8d-bd1724f10e1d",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"sold\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": {{created_product-reference_barcode}}\n            }\n        },\n        \"bill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "533f2d79-f0aa-4ba7-8bd9-595d685e3aad",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"bill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.bill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"bill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.bill.deliveryDate === pm.environment.get(\"billdate\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf8306c5-fbba-46b7-b6a2-bf182b5ce46a",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 5\"] = jsonData.product.availableQty === 5;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"tests[\"bill.reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.bill.reference === pm.environment.get(\"created_clientbill_reference\");",
									"",
									"tests[\"bill.deliveryDate is \"+pm.environment.get(\"billdate\")] = jsonData.bill.deliveryDate === pm.environment.get(\"billdate\");"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": {{created_product-record_id}},\n        \"cltype\": \"sold\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": {{created_product-reference_barcode}}\n            }\n        },\n        \"bill\": {\n            \"reference\": \"{{created_clientbill_reference}}\",\n            \"deliveryDate\":{{billdate}},\n            \"cltype\": \"clientbill\"\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6cb1191-4c4b-4bd2-a86c-a353870c9660",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "delete autocreated SoldItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6cb1191-4c4b-4bd2-a86c-a353870c9660",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SoldItem/{{auto_created_product_record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SoldItem",
								"{{auto_created_product_record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				},
				{
					"name": "clean after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b258130-1679-4946-a3b3-27f362762d65",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Service/\"+pm.environment.get('created_offering_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Sale/\"+pm.environment.get('created_sale_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    ",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});",
									"});",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Client/\"+pm.environment.get('created_client_id')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UsedItem",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27b7c8ab-5926-4ac2-8c58-0b3ebe93b341",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2395f75-b3f7-41a7-b1f2-6615d8b9c513",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e1b83ec-35ae-486d-b769-8488bd9c4e09",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_product-record_id\", jsonData.id);",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 1\"] = jsonData.product.availableQty === 1;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									"",
									"/*",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";*/",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b0f24734-14f7-4153-bfb0-5b97b7ed1f2e",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"created_product-reference_barcode\", \"1234567899\");",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"                        {",
									"        \"availableQty\": 3,",
									"        \"thresholdWarning\": 2,",
									"        \"thresholdSevere\": 1,",
									"        \"comments\":[",
									"        \t\"No restriction\",",
									"        \t\"ok for me\"",
									"        ],",
									"        \"productReference\": {",
									"\t\"barcode\": pm.environment.get('created_product-reference_barcode'),",
									"\t\"description\": \"blond color stick\",",
									"\t\"brand\": \"L'OREAL\",",
									"\t\"business\":            ",
									"\t\t{",
									"\t\t\t\"designation\": \"Coiffure\"",
									"    \t}",
									"        }",
									"        })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"cltype\": \"used\",\n        \"qty\": 2,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": {{created_product-reference_barcode}}\n            }\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0a68a66-3aa3-44d3-a5e7-066c55daa35f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is false\"] = jsonData.cancelled === false;",
									"tests[\"product.availableQty === 1\"] = jsonData.product.availableQty === 1;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7312471-be11-4ec5-913a-03d8d7fadda5",
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_product-record_id\")] = jsonData.id == pm.environment.get(\"created_product-record_id\");",
									"",
									"tests[\"recordDate is defined\"] = jsonData.recordDate !== undefined;",
									"tests[\"cancelled is true\"] = jsonData.cancelled === true;",
									"tests[\"cancellationDate is defined\"] = jsonData.cancellationDate !== undefined;",
									"tests[\"product.availableQty === 3\"] = jsonData.product.availableQty === 3;",
									"tests[\"product.productReference.barcode is \"+pm.environment.get(\"created_product-reference_barcode\")] = jsonData.product.productReference.barcode === pm.environment.get(\"created_product-reference_barcode\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\": {{created_product-record_id}},\n        \"cltype\": \"used\",\n        \"qty\": 100,\n        \"cancelled\": true,\n        \"product\": {\n            \"productReference\": {\n                \"barcode\": \"1234567891\"\n            }\n        }\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d62ebdb-bfd1-4a4d-9e4a-34a4c1e93a6d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/Product/\"+pm.environment.get('created_product-reference_barcode')+\"?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"    pm.sendRequest({",
									"    url:pm.environment.get('API_URL')+\"/ProductReference/\"+pm.environment.get('created_product-reference_barcode'),",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':pm.environment.get('XSRF-TOKEN')",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UsedItem/{{created_product-record_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UsedItem",
								"{{created_product-record_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			]
		},
		{
			"name": "UserGroup",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements\"] = jsonData.length >= 3;",
									"",
									"tests[\"Administrator\"] = responseBody.has(\"Administrator\");",
									"tests[\"Individual\"] = responseBody.has(\"Individual\");",
									"tests[\"Professional\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Total count >= 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"Administrator\\\"\"] = jsonData.name === \"Administrator\";",
									"tests[\"description is \\\"Administrator Group\\\"\"] = jsonData.description === \"Administrator Group\";",
									"tests[\"userAccounts is undefined\"] = jsonData.userAccounts === undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is a test group\\\"\"] = jsonData.description === \"This is a test group\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"TEST_GRP01\",\"description\":\"This is a test group\"}"
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is the test group TEST_GRP01\\\"\"] = jsonData.description === \"This is the test group TEST_GRP01\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"TEST_GRP01\",\"description\":\"This is the test group TEST_GRP01\"}"
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/TEST_GRP01",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"TEST_GRP01"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain 3 or more elements \"] = jsonData.length >= 3;",
									"",
									"function checkAdmin(admin){",
									"    return admin.email === \"trendevfr@gmail.com\";",
									"}",
									"",
									"var admin = jsonData.filter(checkAdmin);",
									"tests[\"There is an Administrator\"] = admin.length === 1;",
									"if(admin.lengt === 1){",
									"    tests[\"trendevfr@gmail.com is an Administrator\"] = admin[0].email === \"trendevfr@gmail.com\";",
									"    tests[\"trendevfr@gmail.com username = trendevfr_admin\"] = admin[0].username === \"trendevfr_admin\";",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/Administrator/userAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"Administrator",
								"userAccounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "VatRates",
			"description": null,
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2109089f-6db5-45f3-9ae1-7d698c036236",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 1 element\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/VatRates",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa41defb-7282-47b4-8ff0-afb20d044bce",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/VatRates/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c90ff507-0b5a-45b6-aeb4-118b3a121f57",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"countryId is \\\"FR\\\"\"] = jsonData.countryId === \"FR\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									"tests[\"rates.length >= 1\"] = jsonData.rates.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/VatRates/FR",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates",
								"FR"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b74d9854-ceec-431d-ba75-076cfabf2c10",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"countryId is \\\"XX\\\"\"] = jsonData.countryId === \"XX\";",
									"tests[\"country is \\\"Wonderland\\\"\"] = jsonData.country === \"Wonderland\";",
									"tests[\"rates.length >= 1\"] = jsonData.rates.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"countryId\": \"XX\",\n        \"country\": \"Wonderland\",\n        \"rates\": [\n            21,\n            12,\n            6\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/VatRates",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a744923-ed0c-4e2e-95b3-074442146ac8",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"countryId is \\\"XX\\\"\"] = jsonData.countryId === \"XX\";",
									"tests[\"country is \\\"NewCountry\\\"\"] = jsonData.country === \"NewCountry\";",
									"tests[\"rates.length >= 1\"] = jsonData.rates.length >= 1;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"countryId\": \"XX\",\n    \"country\": \"NewCountry\",\n    \"rates\": [\n        25,\n        12.5,\n        6,\n        3.4\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/VatRates",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/VatRates/XX",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"VatRates",
								"XX"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"description": null,
			"item": [
				{
					"name": "ThresholdAlert",
					"description": null,
					"item": [
						{
							"name": "create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "483426b7-7362-426e-8444-7756f6f32f41",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"id is defined\"] = jsonData.id !== undefined;",
											"pm.environment.set(\"created_notification_id\", jsonData.id);",
											"",
											"tests[\"cltype is \\\"threshold\\\"\"] = jsonData.cltype === \"threshold\";",
											"tests[\"checked is false\"] = jsonData.checked === false;",
											"tests[\"levelRank is \\\"WARNING\\\"\"] = jsonData.levelRank === \"WARNING\";",
											"tests[\"barcode is \\\"123456789\\\"\"] = jsonData.barcode === \"123456789\";",
											"tests[\"description is \\\"a haircut product\\\"\"] = jsonData.description === \"a haircut product\";",
											"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
											"tests[\"threshold is 5\"] = jsonData.threshold === 5;",
											"tests[\"qty is 2\"] = jsonData.qty === 2;",
											"tests[\"qualifier is \\\"WARNING\\\"\"] = jsonData.qualifier === \"WARNING\";",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-XSRF-TOKEN",
										"value": "{{XSRF-TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"id\": 123456,\n        \"cltype\": \"threshold\",\n        \"checked\": false,\n        \"levelRank\": \"WARNING\",\n        \"barcode\": \"123456789\",\n        \"description\": \"a haircut product\",\n        \"brand\": \"WELLA\",\n        \"threshold\": 5,\n        \"qty\": 2,\n        \"qualifier\": \"WARNING\"\n    }"
								},
								"url": {
									"raw": "{{API_URL}}/ThresholdAlert?professional=vanessa.gay@gmail.com",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"ThresholdAlert"
									],
									"query": [
										{
											"key": "professional",
											"value": "vanessa.gay@gmail.com"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "457106b3-5e9c-4903-9061-f00097ce366c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"id is \"+pm.environment.get(\"created_notification_id\")] = jsonData.id === pm.environment.get(\"created_notification_id\");",
											"",
											"tests[\"cltype is \\\"threshold\\\"\"] = jsonData.cltype === \"threshold\";",
											"tests[\"checked is false\"] = jsonData.checked === false;",
											"tests[\"levelRank is \\\"SEVERE\\\"\"] = jsonData.levelRank === \"SEVERE\";",
											"tests[\"barcode is \\\"123456789\\\"\"] = jsonData.barcode === \"123456789\";",
											"tests[\"description is \\\"a haircut product\\\"\"] = jsonData.description === \"a haircut product\";",
											"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
											"tests[\"threshold is 0\"] = jsonData.threshold === 0;",
											"tests[\"qty is 0\"] = jsonData.qty === 0;",
											"tests[\"qualifier is \\\"EMPTY\\\"\"] = jsonData.qualifier === \"EMPTY\";"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-XSRF-TOKEN",
										"value": "{{XSRF-TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"id\": {{created_notification_id}},\n        \"cltype\": \"threshold\",\n        \"checked\": false,\n        \"levelRank\": \"SEVERE\",\n        \"barcode\": \"123456789\",\n        \"description\": \"a haircut product\",\n        \"brand\": \"WELLA\",\n        \"threshold\": 0,\n        \"qty\": 0,\n        \"qualifier\": \"EMPTY\"\n    }"
								},
								"url": {
									"raw": "{{API_URL}}/ThresholdAlert?professional=vanessa.gay@gmail.com",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"ThresholdAlert"
									],
									"query": [
										{
											"key": "professional",
											"value": "vanessa.gay@gmail.com"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ef4d005-c88f-489d-ab42-2801f4ebe1e0",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Notification table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55b0edff-59f4-4ed8-89d0-9ecc0c5679df",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "058f3be3-f9f4-4e0f-9435-a85549078296",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/{{created_notification_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"{{created_notification_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3bf73b8-f3c3-445e-8c41-b2d2f86d4e7e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_notification_id\")] = jsonData.id === pm.environment.get(\"created_notification_id\");",
									"",
									"tests[\"cltype is \\\"threshold\\\"\"] = jsonData.cltype === \"threshold\";",
									"tests[\"checked is true\"] = jsonData.checked === true;",
									"tests[\"levelRank is \\\"SEVERE\\\"\"] = jsonData.levelRank === \"SEVERE\";",
									"tests[\"barcode is \\\"123456789\\\"\"] = jsonData.barcode === \"123456789\";",
									"tests[\"description is \\\"a haircut product\\\"\"] = jsonData.description === \"a haircut product\";",
									"tests[\"brand is \\\"WELLA\\\"\"] = jsonData.brand === \"WELLA\";",
									"tests[\"threshold is 0\"] = jsonData.threshold === 0;",
									"tests[\"qty is 0\"] = jsonData.qty === 0;",
									"tests[\"qualifier is \\\"EMPTY\\\"\"] = jsonData.qualifier === \"EMPTY\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/check/{{created_notification_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"check",
								"{{created_notification_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "checkAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4676892-8bac-4149-9146-8b79c84d2b25",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"totalChecked >= 1\"] = jsonData.totalChecked >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/check-all?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"check-all"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/{{created_notification_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"{{created_notification_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Notification/delete-all?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Notification",
								"delete-all"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ExportData",
			"description": "",
			"item": [
				{
					"name": "export data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fa9f196-00ab-4f08-b126-7146d3cb0723",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"/*var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";*/"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ExportData/JSON?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ExportData",
								"JSON"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{XSRF-TOKEN}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{API_URL}}/Authentication/logout",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"Authentication",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}