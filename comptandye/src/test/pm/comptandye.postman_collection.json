{
	"info": {
		"name": "comptandye",
		"_postman_id": "02100dc5-b9df-4c04-a06c-2798c0b57ba4",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200 ;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"cltype is Administrator or Professional or Individual ==> \"+jsonData.cltype] = jsonData.cltype === (\"Administrator\" || \"Professional\" || \"Individual\");",
									"",
									"if(postman.getResponseHeader(\"Set-Cookie\")){",
									"    tests[\"Set-Cookie is present\"] = postman.getResponseHeader(\"Set-Cookie\");",
									"    ",
									"    postman.setEnvironmentVariable(\"XSRF-TOKEN\",postman.getResponseHeader(\"Set-Cookie\").split(\";\")[0].split(\"=\")[1]);",
									"    console.log(postman.getEnvironmentVariable(\"XSRF-TOKEN\"));",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/login?username={{username}}&password={{password}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}",
									"equals": true
								},
								{
									"key": "password",
									"value": "{{password}}",
									"equals": true
								}
							]
						},
						"description": "Sends username/password and stores the JSESSIONID."
					},
					"response": []
				},
				{
					"name": "profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"cltype is Administrator or Professional or Individual ==> \"+jsonData.cltype] = jsonData.cltype === (\"Administrator\" || \"Professional\" || \"Individual\");",
									"",
									"if(postman.getResponseHeader(\"Set-Cookie\")){",
									"    tests[\"Set-Cookie is present\"] = postman.getResponseHeader(\"Set-Cookie\");",
									"    ",
									"    postman.setEnvironmentVariable(\"XSRF-TOKEN\",postman.getResponseHeader(\"Set-Cookie\").split(\"; \")[0].split(\"=\")[1]);",
									"    console.log(postman.getEnvironmentVariable(\"XSRF-TOKEN\"));",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/Authentication/profile",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count lenght is 100\"] = responseBody.length === 100;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Authentication/password?size=100",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Authentication",
								"password"
							],
							"query": [
								{
									"key": "size",
									"value": "100",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"description": "Manage Addresses.\nRequires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"ADDRESS table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "List all addresses."
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"count"
							]
						},
						"description": "Provides the Address total count."
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.id);",
									"",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"street\":\"47 Rue René Benoist\",\"optional\":\"TRENDev SASU\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "Creates and Persists an Address. Id is auto-generated."
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							]
						},
						"description": "Finds an Address."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is undefined\"] = jsonData.optional === undefined;",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\":{{created_address_id}},\"street\":\"47 Rue René Benoist\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Address",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address"
							]
						},
						"description": "Updates and Saves an Address."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							]
						},
						"description": "Finds and Deletes an Address."
					},
					"response": []
				}
			]
		},
		{
			"name": "Administrator",
			"description": "Manage Administrators. Requires Administrator Authorization.",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements...\"] = jsonData.length >= 3;",
									"",
									"tests[\"comptandye@gmail.com\"] = responseBody.has(\"comptandye@gmail.com\");",
									"tests[\"julien.sie@gmail.com\"] = responseBody.has(\"julien.sie@gmail.com\");",
									"tests[\"trendevfr@gmail.com\"] = responseBody.has(\"trendevfr@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body is correct : 3 or more than 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"comptandye@gmail.com\\\"\"] = jsonData.email === \"comptandye@gmail.com\";",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\\\"\"] = jsonData.password === \"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\";",
									"tests[\"username is \\\"comptandye_admin\\\"\"] = jsonData.username === \"comptandye_admin\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups is undefined\"] = jsonData.userGroups === undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"newadmin@trendev.fr\\\"\"] = jsonData.email === \"newadmin@trendev.fr\"",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"new_admin\\\"\"] = jsonData.username === \"new_admin\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"cltype\": \"Administrator\",\n    \"password\": \"PASSWORD\",\n    \"username\": \"new_admin\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"newadmin@trendev.fr\\\"\"] = jsonData.email === \"newadmin@trendev.fr\"",
									"tests[\"cltype is Administrator\"] = jsonData.cltype === \"Administrator\";",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"LewAshby\\\"\"] = jsonData.username === \"LewAshby\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"cltype\": \"Administrator\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"LewAshby\",\n    \"uuid\":\"another_one\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/newadmin@trendev.fr",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"newadmin@trendev.fr"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Administrator UserGroup\"] = responseBody.has(\"Administrator\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/insertToUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"insertToUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Administrator/comptandye@gmail.com/removeFromUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Administrator",
								"comptandye@gmail.com",
								"removeFromUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Business",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Business table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is defined\"] = jsonData.designation !== undefined;",
									"pm.environment.set(\"created_business_designation\", jsonData.designation);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"designation\": \"beauty_at_home\"}"
						},
						"url": {
							"raw": "{{API_URL}}/Business",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is \"+pm.environment.get(\"created_business_designation\")] = jsonData.designation == pm.environment.get(\"created_business_designation\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Category table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_category_id\", jsonData.id);",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"NEW_CATEGORY\",\n  \"description\":\"This a new category for special clients\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"New Category\\\"\"] = jsonData.name === \"New Category\";",
									"tests[\"description is \\\"This a new description for the Category\\\"\"] = jsonData.description === \"This a new description for the Category\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_category_id}},\n  \"name\":\"New Category\",\n  \"description\":\"This a new description for the Category\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                email:\"newclient@domain.com\",",
									"                address:{",
									"                    street:\"79 avenue de la jonchère\",",
									"                    optional:\"appart A113\",",
									"                    postalCode:\"77600\",",
									"                    city:\"Chanteloup-en-Brie\"",
									"                },",
									"                customerDetails:{",
									"                    firstName:\"John\",",
									"                    lastName:\"DOE\",",
									"                    nickname:\"WhoIsHe\",",
									"                    sex:'M'",
									"                }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/addClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"addClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/clients?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"clients"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com\",",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/removeClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"removeClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Client table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_client_id\", jsonData.id);",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"client@domain.com\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  },\n  \"socialNetworkAccounts\":{\n    \"twitter\":\"@client_facebook_account\"\n  },\n  \"customerDetails\":{\n    \"firstName\":\"Paul\",\n    \"lastName\":\"Newman\",\n    \"sex\":\"M\",\n    \"comments\":[\n      \"old american actor\",\n      \"old shool boy\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client_email02@domain.com\\\"\"] = jsonData.email === \"client_email02@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"tests[\"socialNetworkAccounts.facebook is \\\"https://facebook.com/client_account\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://facebook.com/client_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_client_id}},\n  \"email\":\"client_email02@domain.com\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  },\n  \"socialNetworkAccounts\":{\n    \"twitter\":\"@client_facebook_account\",\n    \"facebook\":\"https://facebook.com/client_account\"\n  },\n  \"customerDetails\":{\n    \"firstName\":\"Paul\",\n    \"lastName\":\"Newman\",\n    \"sex\":\"M\",\n    \"comments\":[\n      \"old american actor\",\n      \"old shool boy\"\n    ]\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClientBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/clientBills?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"clientBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/collectiveGroups?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"collectiveGroups"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/categories?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"categories"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ClientBill",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE ClientBill) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_clientbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_clientbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"            \"email\": \"client@domain.com\",",
									"            \"socialNetworkAccounts\": {",
									"                \"twitter\": \"@client_facebook_account\"",
									"            },",
									"            \"customerDetails\": {",
									"                \"firstName\": \"Paul\",",
									"                \"lastName\": \"Newman\",",
									"                \"sex\": \"M\",",
									"                \"comments\": [",
									"                    \"old american actor\",",
									"                    \"old shool boy\"",
									"                ]",
									"            },",
									"            \"address\": {",
									"                \"street\": \"Allée de Fontenelle\",",
									"                \"optional\": \"Château de Fontenelle\",",
									"                \"postalCode\": \"77600\",",
									"                \"city\": \"Chanteloup-en-Brie\",",
									"                \"country\": \"France\"",
									"            }",
									"})",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"clientbill\",\n  \"deliveryDate\":1506085212900,\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"hidden\": false,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"client\":{\n    \"id\":{{created_client_id}}\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_clientbill_reference\")] = jsonData.reference == pm.environment.get(\"created_clientbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_clientbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_clientbill_deliveryDate\");",
									"",
									"tests[\"cltype is clientbill\"] = jsonData.cltype === \"clientbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"client.id is \"+pm.environment.get(\"created_client_id\")] = jsonData.client.id == pm.environment.get(\"created_client_id\");",
									"tests[\"client.email is \\\"client@domain.com\\\"\"] = jsonData.client.email === \"client@domain.com\";",
									"tests[\"client.socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.client.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"client.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.client.address.street === \"Allée de Fontenelle\";",
									"tests[\"client.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.client.address.optional === \"Château de Fontenelle\";",
									"tests[\"client.address.postalCode is \\\"77600\\\"\"] = jsonData.client.address.postalCode === \"77600\";",
									"tests[\"client.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.client.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"client.customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.client.customerDetails.firstName === \"Paul\";",
									"tests[\"client.customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.client.customerDetails.lastName === \"Newman\";",
									"tests[\"client.customerDetails.sex is \\\"M\\\"\"] = jsonData.client.customerDetails.sex === \"M\";",
									"tests[\"client.customerDetails.comments.length is 2\"] = jsonData.client.customerDetails.comments.length === 2;",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.purchasedOfferings[0].offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_clientbill_reference}}\",\n    \"deliveryDate\": {{created_clientbill_deliveryDate}},\n    \"paymentDate\": 1506085213900,\n    \"cltype\": \"clientbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": {{created_offering_id}},\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"hidden\": false,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"client\": {\n        \"id\": {{created_client_id}}\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/ClientBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/ClientBill/{{created_clientbill_reference}}/{{created_clientbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"ClientBill",
								"{{created_clientbill_reference}}",
								"{{created_clientbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroup",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CollectiveGroup table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_collectivegroup_id\", jsonData.id);",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",\n  \"phone\":\"0123456789\",\n  \"address\":{\n    \"street\":\"Allée de Fontenelle\",\n    \"optional\":\"Château de Fontenelle\",\n    \"postalCode\":\"77600\",\n    \"city\":\"Chanteloup-en-Brie\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"E.H.P.A.D. LE CHATEAU DE FONTENELLE\\\"\"] = jsonData.groupName === \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\";",
									"tests[\"phone is \\\"0132547698\\\"\"] = jsonData.phone === \"0132547698\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée Fontenelle\\\"\"] = jsonData.address.street === \"Allée Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{created_collectivegroup_id}},\n    \"groupName\": \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\",\n    \"phone\": \"0132547698\",\n    \"address\": {\n        \"street\": \"Allée Fontenelle\",\n        \"optional\": \"Château de Fontenelle\",\n        \"postalCode\": \"77600\",\n        \"city\": \"Chanteloup-en-Brie\",\n        \"country\": \"France\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                email:\"newclient@domain.com\",",
									"                address:{",
									"                    street:\"79 avenue de la jonchère\",",
									"                    optional:\"appart A113\",",
									"                    postalCode:\"77600\",",
									"                    city:\"Chanteloup-en-Brie\"",
									"                },",
									"                customerDetails:{",
									"                    firstName:\"John\",",
									"                    lastName:\"DOE\",",
									"                    nickname:\"WhoIsHe\",",
									"                    sex:'M'",
									"                }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/addClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"addClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/clients?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"clients"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroupBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/collectiveGroupBills?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"collectiveGroupBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/removeClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"removeClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroupBill",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE CollectiveGroupBill) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_collectivegroupbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_collectivegroupbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"   header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"              \"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",",
									"              \"phone\":\"0123456789\",",
									"              \"address\":{",
									"                \"street\":\"Allée de Fontenelle\",",
									"                \"optional\":\"Château de Fontenelle\",",
									"                \"postalCode\":\"77600\",",
									"                \"city\":\"Chanteloup-en-Brie\"",
									"              }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_collectivegroup_id\", response.json().id);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"collectivegroupbill\",\n  \"deliveryDate\":1506085212900,\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"hidden\": false,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"collectiveGroup\":{\n    \"id\":{{created_collectivegroup_id}}\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_collectivegroupbill_reference\")] = jsonData.reference == pm.environment.get(\"created_collectivegroupbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_collectivegroupbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_collectivegroupbill_deliveryDate\");",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup.id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"tests[\"purchasedOfferings[0].id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = pm.environment.get(\"created_purchasedoffering_id\") == jsonData.purchasedOfferings[0].id;",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/{{created_collectivegroupbill_reference}}/{{created_collectivegroupbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"{{created_collectivegroupbill_reference}}",
								"{{created_collectivegroupbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is \"+pm.environment.get(\"created_collectivegroupbill_reference\")] = jsonData.reference == pm.environment.get(\"created_collectivegroupbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_collectivegroupbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_collectivegroupbill_deliveryDate\");",
									"",
									"tests[\"cltype is collectivegroupbill\"] = jsonData.cltype === \"collectivegroupbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"collectiveGroup is defined\"] = jsonData.collectiveGroup.id !== undefined;",
									"tests[\"collectiveGroup.id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.collectiveGroup.id == pm.environment.get(\"created_collectivegroup_id\");",
									"",
									"tests[\"collectiveGroup.groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"collectiveGroup.phone is \\\"0123456789\\\"\"] = jsonData.collectiveGroup.phone === \"0123456789\";",
									"tests[\"collectiveGroup.Address is defined\"] = jsonData.collectiveGroup.address !== undefined;",
									"tests[\"collectiveGroup.address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.street === \"Allée de Fontenelle\";",
									"tests[\"collectiveGroup.address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.collectiveGroup.address.optional === \"Château de Fontenelle\";",
									"tests[\"collectiveGroup.address.postalCode is \\\"77600\\\"\"] = jsonData.collectiveGroup.address.postalCode === \"77600\";",
									"tests[\"collectiveGroup.address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.collectiveGroup.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"tests[\"purchasedOfferings[0].id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = pm.environment.get(\"created_purchasedoffering_id\") == jsonData.purchasedOfferings[0].id;",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"",
									"tests[\"purchasedOfferings[0].offering is defined\"] = jsonData.purchasedOfferings[0].offering !== undefined;",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_collectivegroupbill_reference}}\",\n    \"deliveryDate\": {{created_collectivegroupbill_deliveryDate}},\n    \"paymentDate\": 1506085213900,\n    \"cltype\": \"collectivegroupbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": {{created_offering_id}},\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"hidden\": false,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n\t  \"collectiveGroup\":{\n\t    \"id\":{{created_collectivegroup_id}}\n\t  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/CollectiveGroupBill/{{created_collectivegroupbill_reference}}/{{created_collectivegroupbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroupBill",
								"{{created_collectivegroupbill_reference}}",
								"{{created_collectivegroupbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CustomerDetails",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CustomerDetails table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.id);",
									"",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"nickname\": \"X\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": {{birthdate}},\n        \"sex\": \"M\",\n        \"picturePath\": \"C:/Documents and Settings/whateverUwant.png\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\"\n        ]\n    }"
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is undefine\"] = jsonData.nickname === undefined;",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \\\"1467986000\\\"\"] = jsonData.birthdate === 1467986000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is undefined\"] = jsonData.picturePath === undefined;",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 5;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\":{{created_customer_details_id}},\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": 1467986000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\",\n            \"But he has no name LOL\"\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Expense",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expense table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Expense",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Expense/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"name is \\\"Purple Color\\\"\"] = jsonData.name === \"Purple Color\";",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"Purple Color\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n    ],\n    \"payments\": [\n            {\n        \"amount\": 900,\n                \"paymentMode\": {\n                    \"name\": \"CB\"\n                }\n            },\n            {\n                \"amount\": 100,\n                \"paymentMode\": {\n                    \"name\": \"Espèces\"\n                }\n            }\n        ],\n        \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Expense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"name is \\\"Purple Color\\\"\"] = jsonData.name === \"Purple Color\";",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"invoiceRef is \\\"invoice#2\\\"\"] = jsonData.invoiceRef === \"invoice#2\";",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_expense_id}},\n  \"name\":\"Purple Color\",\n  \"amount\":1000,\n  \"paymentDate\":1505707896023,\n  \"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n    ],\n    \"invoiceRef\": \"invoice#2\",\n    \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Expense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.get(\"created_expense_id\");",
									"//created_expense_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.id == pm.environment.get(\"created_expense_id\");",
									"",
									"tests[\"name is \\\"Purple Color\\\"\"] = jsonData.name === \"Purple Color\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Expense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Expense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Individual",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\";",
									"tests[\"cltype is Individual\"] = jsonData.cltype === \"Individual\";",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962,11,25));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"individual@gmail.com\",\n  \"cltype\":\"Individual\",\n  \"password\":\"PASSWORD\",\n  \"username\":\"individual_test\",\n  \"customerDetails\": {\n            \"firstName\": \"prenom\",\n            \"lastName\": \"nom\",\n            \"nickname\": \"surnom\",\n            \"phone\": \"0102030405\",\n            \"birthdate\": {{birthdate}},\n            \"sex\": \"F\",\n            \"comments\": [\n                \"Cool\",\n                \"Good looking\",\n                \"Open minded\",\n                \"Likes art and music\",\n                \"Nice hair\"\n            ]\n        },\n        \"address\": {\n          \"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"Chanteloup-en-Brie\"\n        },\n        \"socialNetworkAccounts\": {\n          \"facebook\": \"https://www.facebook.com/individual\",\n            \"twitter\": \"@individualtwitter\",\n            \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"\n        }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\";",
									"tests[\"cltype is Individual\"] = jsonData.cltype === \"Individual\";",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"ind_test\\\"\"] = jsonData.username === \"ind_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"individual@gmail.com\",\n\t\"cltype\":\"Individual\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"ind_test\",\n    \"registrationDate\": 1504361329000,\n    \"customerDetails\": {\n        \"id\": {{created_customer_details_id}},\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": {{created_address_id}},\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": {{created_socialnetworkaccounts_id}},\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Individual UserGroup\"] = responseBody.has(\"Individual\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIndividualBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/individualBills",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"individualBills"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/insertToUserGroup/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"insertToUserGroup",
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/removeFromUserGroup/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"removeFromUserGroup",
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/buildBusinessRelationship/vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"buildBusinessRelationship",
								"vanessa.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProfessionals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/professionals",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"professionals"
							]
						}
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com/endBusinessRelationship/vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com",
								"endBusinessRelationship",
								"vanessa.gay@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IndividualBill",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE IndividualBill) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"reference is defined\"] = jsonData.reference !== undefined;",
									"pm.environment.set(\"created_individualbill_reference\", jsonData.reference);",
									"tests[\"deliveryDate is defined\"] = jsonData.deliveryDate !== undefined;",
									"pm.environment.set(\"created_individualbill_deliveryDate\", jsonData.deliveryDate);",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.individual.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962,11,25));",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Individual\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"              \"email\":\"individual@gmail.com\",",
									"              \"cltype\":\"Individual\",",
									"              \"password\":\"PASSWORD\",",
									"              \"username\":\"individual_test\",",
									"              \"customerDetails\": {",
									"                        \"firstName\": \"prenom\",",
									"                        \"lastName\": \"nom\",",
									"                        \"nickname\": \"surnom\",",
									"                        \"phone\": \"0102030405\",",
									"                        \"birthdate\": pm.environment.get(\"birthdate\"),",
									"                        \"sex\": \"F\",",
									"                        \"comments\": [",
									"                            \"Cool\",",
									"                            \"Good looking\",",
									"                            \"Open minded\",",
									"                            \"Likes art and music\",",
									"                            \"Nice hair\"",
									"                        ]",
									"                    },",
									"                    \"address\": {",
									"                      \"street\": \"10 route de la ferme du pavillon\",",
									"                        \"postalCode\": \"77600\",",
									"                        \"city\": \"Chanteloup-en-Brie\"",
									"                    },",
									"                    \"socialNetworkAccounts\": {",
									"                      \"facebook\": \"https://www.facebook.com/individual\",",
									"                        \"twitter\": \"@individualtwitter\",",
									"                        \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"",
									"                    }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_individual_email\", response.json().email);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:1500,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\":\"individualbill\",\n  \"deliveryDate\":1506085212900,\n  \"amount\":5000,\n  \"discount\":1000,\n  \"comments\":[\n    \"The first one created by a rest api request\"\n  ],\n  \"payments\":[\n    {\n      \"amount\":4000,\n      \"paymentMode\": {\n                    \"name\": \"CB\"\n            }\n    },\n    {\n      \"amount\":1000,\n      \"paymentMode\": {\n                    \"name\": \"Espèces\" \n            }\n    }\n  ],\n  \"purchasedOfferings\":[\n    {\n      \"qty\":4,\n      \"offering\": {\n        \"id\": {{created_offering_id}},\n        \"cltype\": \"service\",\n        \"name\": \"beauty service\",\n        \"price\": 1500,\n        \"duration\": 180,\n        \"hidden\": false,\n        \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n        ]\n    }\n    }\n  ],\n  \"individual\":{\n    \"email\":\"{{created_individual_email}}\",\n    \"cltype\":\"Individual\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"reference is \"+pm.environment.get(\"created_individualbill_reference\")] = jsonData.reference == pm.environment.get(\"created_individualbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_individualbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_individualbill_deliveryDate\");",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.individual.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/{{created_individualbill_reference}}/{{created_individualbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"{{created_individualbill_reference}}",
								"{{created_individualbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"reference is \"+pm.environment.get(\"created_individualbill_reference\")] = jsonData.reference == pm.environment.get(\"created_individualbill_reference\");",
									"tests[\"deliveryDate is \"+pm.environment.get(\"created_individualbill_deliveryDate\")] = jsonData.deliveryDate == pm.environment.get(\"created_individualbill_deliveryDate\");",
									"",
									"tests[\"cltype is individualbill\"] = jsonData.cltype === \"individualbill\";",
									"tests[\"amount is 5000\"] = jsonData.amount === 5000;",
									"tests[\"currency is EUR\"] = jsonData.currency === \"EUR\";",
									"tests[\"discount is 1000\"] = jsonData.discount === 1000;",
									"tests[\"paymentDate is \"+new Date(jsonData.paymentDate)] = jsonData.paymentDate !== undefined;",
									"tests[\"comments.length is 2\"] = jsonData.comments.length === 2;",
									"tests[\"payments.length is 2\"] = jsonData.payments.length === 2;",
									"",
									"tests[\"email is \"+pm.environment.get(\"created_individual_email\")] = jsonData.individual.email === pm.environment.get(\"created_individual_email\");",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.individual.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.individual.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.individual.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.individual.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.individual.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.individual.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.individual.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.individual.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.individual.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.individual.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.individual.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.individual.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.individual.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.individual.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.individual.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.individual.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.individual.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.individual.address.id !== undefined;",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.individual.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.individual.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.individual.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.individual.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.individual.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.individual.socialNetworkAccounts.id !== undefined;",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.individual.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.individual.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.individual.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"",
									"tests[\"purchasedOfferings[0].qty is 4\"] = jsonData.purchasedOfferings[0].qty === 4;",
									"tests[\"purchasedOfferings[0].id is defined\"] = jsonData.purchasedOfferings[0].id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.purchasedOfferings[0].id);",
									"tests[\"purchasedOfferings[0].offering.cltype = service\"] = jsonData.purchasedOfferings[0].offering.cltype === \"service\";",
									"tests[\"purchasedOfferings[0].offering.name = beauty service\"] = jsonData.purchasedOfferings[0].offering.name === \"beauty service\";",
									"tests[\"purchasedOfferings[0].offering.price = 1500\"] = jsonData.purchasedOfferings[0].offering.price === 1500;",
									"tests[\"purchasedOfferings[0].offering.duration = 180\"] = jsonData.purchasedOfferings[0].offering.duration === 180;",
									"tests[\"purchasedOfferings[0].offering.hidden = false\"] = jsonData.purchasedOfferings[0].offering.hidden === false;",
									"tests[\"purchasedOfferings[0].offering.businesses[0].designation = Esthétique\"] = jsonData.purchasedOfferings[0].offering.businesses[0].designation === \"Esthétique\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"{{created_individualbill_reference}}\",\n    \"deliveryDate\": {{created_individualbill_deliveryDate}},\n    \"paymentDate\": 1506085213900,\n    \"cltype\": \"individualbill\",\n    \"amount\": 5000,\n    \"currency\": \"EUR\",\n    \"discount\": 1000,\n    \"comments\": [\n        \"Let the color applying\",\n        \"Hair used to be darker than expected\"\n    ],\n    \"payments\": [\n        {\n            \"amount\": 4000,\n            \"paymentMode\": {\n                \"name\": \"CB\"\n            }\n        },\n        {\n            \"amount\": 1000,\n            \"paymentMode\": {\n                \"name\": \"Espèces\"\n            }\n        }\n    ],\n    \"purchasedOfferings\": [\n        {\n            \"qty\": 4,\n            \"offering\": {\n                \"id\": {{created_offering_id}},\n                \"cltype\": \"service\",\n                \"name\": \"beauty service\",\n                \"price\": 1500,\n                \"duration\": 180,\n                \"hidden\": false,\n                \"businesses\": [\n                    {\n                        \"designation\": \"Esthétique\"\n                    }\n                ]\n            }\n        }\n    ],\n  \"individual\":{\n    \"email\":\"{{created_individual_email}}\",\n    \"cltype\":\"Individual\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/IndividualBill?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Individual/{{created_individual_email}}\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/IndividualBill/{{created_individualbill_reference}}/{{created_individualbill_deliveryDate}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"IndividualBill",
								"{{created_individualbill_reference}}",
								"{{created_individualbill_deliveryDate}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pack",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_pack_id\", jsonData.id);",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"hidden is true\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"MASTER PACK\",\n  \"price\":100000,\n  \"duration\":600,\n  \"cltype\":\"pack\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"WEDDING PACK\\\"\"] = jsonData.name === \"WEDDING PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"hidden is true\"] = jsonData.hidden === true;",
									"tests[\"businesses length is 2\"] = jsonData.businesses.length === 2;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_pack_id}},\n  \"name\":\"WEDDING PACK\",\n  \"price\":100000,\n  \"duration\":600,\n  \"hidden\":true,\n  \"cltype\":\"pack\",\n  \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            },\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addService",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:10000,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addService/offering/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addService",
								"offering",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addPack",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Pack?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"SubPack for Winners\",",
									"              price:5000,",
									"              duration:10,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"pack\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_subpack_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addPack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addPack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removeService",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removeService/offering/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removeService",
								"offering",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "removePack",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Pack/{{created_subpack_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removePack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removePack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payment table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_payment_id\", jsonData.id);",
									"",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\":100,\n  \"paymentMode\":\n  {\n    \"name\":\"CB\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 200\"] = jsonData.amount === 200;",
									"tests[\"paymentMode.name is \\\"Chèque\\\"\"] = jsonData.paymentMode.name === \"Chèque\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_payment_id}},\n  \"amount\":200,\n  \"paymentMode\":\n  {\n    \"name\":\"Chèque\"\n  }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Payment",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PaymentMode",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"PaymentMode table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is defined\"] = jsonData.name !== undefined;",
									"pm.environment.set(\"created_paymentmode_name\", jsonData.name);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"BitCoins\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \"+pm.environment.get(\"created_paymentmode_name\")] = jsonData.name == pm.environment.get(\"created_paymentmode_name\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Professional",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;",
									"",
									"tests[\"vanessa.gay@gmail.com\"] = responseBody.has(\"vanessa.gay@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"cltype is Professional\"] = jsonData.cltype === \"Professional\";",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"pro@domain.com\",\n  \"cltype\":\"Professional\",\n  \"password\":\"PASSWORD\",\n  \"username\":\"pro_test\",\n  \"customerDetails\": {\n            \"firstName\": \"Hank\",\n            \"lastName\": \"Moody\",\n            \"nickname\": \"Author\",\n            \"phone\": \"0102030405\",\n            \"birthdate\": {{birthdate}},\n            \"sex\": \"M\",\n            \"comments\": [\n                \"Fun\",\n                \"Book Author\",\n                \"Smokes and drinks a lot\",\n                \"Also Weed and Sex addicted\",\n                \"Driving a Porsche 911\"\n            ]\n        },\n        \"address\": {\n          \"street\": \"26 Brooks Avenue\",\n            \"postalCode\": \"90291\",\n            \"city\": \"Venice, Ca\",\n            \"country\": \"USA\"\n        },\n        \"socialNetworkAccounts\": {\n          \"facebook\": \"https://www.facebook.com/hankmoody\",\n            \"twitter\": \"@hankfuckinmoody\",\n            \"pinterest\": \"https://www.pinterest.com/californication123/\"\n        }\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\";",
									"tests[\"cltype is Professional\"] = jsonData.cltype === \"Professional\";",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"tests[\"companyName is \\\"Boss Company\\\"\"] = jsonData.companyName === \"Boss Company\";",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pro@domain.com\",\n    \"cltype\":\"Professional\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"pro_test\",\n    \"uuid\": \"PRO_d7d1b42c88b8450c96236d0a0f5b8294\",\n    \"registrationDate\": 1504361329000,\n    \"companyName\": \"Boss Company\",\n    \"customerDetails\": {\n        \"id\": {{created_customer_details_id}},\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": {{created_address_id}},\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": {{created_socialnetworkaccounts_id}},\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    },\n    \"businesses\":[\n    \t{\n        \t\"designation\": \"Coiffure\"\n    \t},\n    \t{\n        \t\"designation\": \"Esthétique\"\n    \t}\n\t],\n\t\"paymentModes\":[\n    \t{\n        \t\"name\": \"CB\"\n    \t},\n    \t{\n        \t\"name\": \"Chèque\"\n    \t},\n\t    {\n        \t\"name\": \"Espèces\"\n    \t},\n    \t{\n    \t\t\"name\": \"Virement\"\n    \t}\t\n\t]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Professional",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Professional UserGroup\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/userGroups",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"userGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/insertToUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"insertToUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/removeFromUserGroup/Individual",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"removeFromUserGroup",
								"Individual"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more Bills \"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/bills?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"bills"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/clients?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"clients"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/offerings?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"offerings"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/categories?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"categories"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollectiveGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/collectiveGroups?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"collectiveGroups"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getExpenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/expenses?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"expenses"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIndividuals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/individuals?email=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"individuals"
							],
							"query": [
								{
									"key": "email",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be skonx2006@gmail.com\"] = jsonData.email === \"skonx2006@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/buildBusinessRelationship/skonx2006@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"buildBusinessRelationship",
								"skonx2006@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be skonx2006@gmail.com\"] = jsonData.email === \"skonx2006@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Professional/vanessa.gay@gmail.com/endBusinessRelationship/skonx2006@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"vanessa.gay@gmail.com",
								"endBusinessRelationship",
								"skonx2006@gmail.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PurchasedOffering",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payment table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_purchasedoffering_id\", jsonData.id);",
									"",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.hidden = false\"] = jsonData.offering.hidden === false;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"              price:10000,",
									"              duration:180,",
									"              businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"qty\":2,\n  \"offering\":{\n\t\t\"id\":{{created_offering_id}},\n\t    \"name\":\"beauty service\",\n\t    \"price\":10000,\n\t    \"duration\":180,\n\t    \"businesses\": [\n\t\t     {\n\t\t         \"designation\": \"Esthétique\"\n\t\t     }\n\t     ],\n\t    \"cltype\":\"service\"\n\t}\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = jsonData.id == pm.environment.get(\"created_purchasedoffering_id\");",
									"",
									"tests[\"qty is 2\"] = jsonData.qty === 2;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.hidden = false\"] = jsonData.offering.hidden === false;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/{{created_purchasedoffering_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"{{created_purchasedoffering_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_purchasedoffering_id\")] = jsonData.id == pm.environment.get(\"created_purchasedoffering_id\");",
									"",
									"tests[\"qty is 20\"] = jsonData.qty === 20;",
									"",
									"tests[\"offering is defined\"] = jsonData.offering !== undefined;",
									"tests[\"offering.id = \"+pm.environment.get(\"created_offering_id\")] = jsonData.offering.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"offering.cltype = service\"] = jsonData.offering.cltype === \"service\";",
									"tests[\"offering.name = beauty service\"] = jsonData.offering.name === \"beauty service\";",
									"tests[\"offering.price = 10000\"] = jsonData.offering.price === 10000;",
									"tests[\"offering.duration = 180\"] = jsonData.offering.duration === 180;",
									"tests[\"offering.hidden = false\"] = jsonData.offering.hidden === false;",
									"tests[\"offering.businesses[0].designation = Esthétique\"] = jsonData.offering.businesses[0].designation === \"Esthétique\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_purchasedoffering_id}},\n  \"qty\":20,\n  \"offering\":{\n\t\t\"id\":{{created_offering_id}},\n\t    \"name\":\"beauty service\",\n\t    \"price\":10000,\n\t    \"duration\":180,\n\t    \"businesses\": [\n\t\t     {\n\t\t         \"designation\": \"Esthétique\"\n\t\t     }\n\t     ],\n\t    \"cltype\":\"service\"\n\t}\n}"
						},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com\",",
									"    header: {",
									"        'Content-Type':'application/json',",
									"        'X-XSRF-TOKEN':'{{XSRF-TOKEN}}'",
									"    },",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{API_URL}}/PurchasedOffering/{{created_purchasedoffering_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PurchasedOffering",
								"{{created_purchasedoffering_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"beauty service\",\n  \"price\":10000,\n  \"duration\":180,\n  \"cltype\":\"service\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"new beauty service\\\"\"] = jsonData.name === \"new beauty service\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 300\"] = jsonData.duration === 300;",
									"tests[\"hidden is true\"] = jsonData.hidden === true;",
									"tests[\"first business designation is \\\"Esthétique\\\"\"] = jsonData.businesses[0].designation === \"Esthétique\";",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cltype\": \"service\",\n  \"id\":{{created_offering_id}},\n  \"name\":\"new beauty service\",\n  \"price\":100000,\n  \"duration\":300,\n  \"hidden\":true,\n  \"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SocialNetworkAccounts",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.id);",
									"",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"facebook\":\"http://www.facebook.com/comptandye\",\n  \"twitter\":\"@comptandye\"\n}\n"
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is \\\"my_pinterest_account\\\"\"] = jsonData.pinterest === \"my_pinterest_account\";"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":{{created_socialnetworkaccounts_id}},\n  \"facebook\":\"http://www.facebook.com/comptandye\",\n  \"twitter\":\"@comptandye\",\n  \"pinterest\":\"my_pinterest_account\"\n}"
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UserGroup",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements\"] = jsonData.length >= 3;",
									"",
									"tests[\"Administrator\"] = responseBody.has(\"Administrator\");",
									"tests[\"Individual\"] = responseBody.has(\"Individual\");",
									"tests[\"Professional\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Total count >= 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/count",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"Administrator\\\"\"] = jsonData.name === \"Administrator\";",
									"tests[\"description is \\\"Administrator Group\\\"\"] = jsonData.description === \"Administrator Group\";",
									"tests[\"userAccounts is undefined\"] = jsonData.userAccounts === undefined;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/Administrator",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"Administrator"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is a test group\\\"\"] = jsonData.description === \"This is a test group\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"TEST_GRP01\",\"description\":\"This is a test group\"}"
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is the test group TEST_GRP01\\\"\"] = jsonData.description === \"This is the test group TEST_GRP01\";",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"TEST_GRP01\",\"description\":\"This is the test group TEST_GRP01\"}"
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{XSRF-TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/TEST_GRP01",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"TEST_GRP01"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain 3 or more elements \"] = jsonData.length >= 3;",
									"",
									"function checkAdmin(admin){",
									"    return admin.email === \"trendevfr@gmail.com\";",
									"}",
									"",
									"var admin = jsonData.filter(checkAdmin);",
									"tests[\"There is an Administrator\"] = admin.length === 1;",
									"if(admin.lengt === 1){",
									"    tests[\"trendevfr@gmail.com is an Administrator\"] = admin[0].email === \"trendevfr@gmail.com\";",
									"    tests[\"trendevfr@gmail.com username = trendevfr_admin\"] = admin[0].username === \"trendevfr_admin\";",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{API_URL}}/UserGroup/Administrator/userAccounts",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"UserGroup",
								"Administrator",
								"userAccounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-XSRF-TOKEN",
						"value": "{{XSRF-TOKEN}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{API_URL}}/Authentication/logout",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"Authentication",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}