{
	"variables": [],
	"info": {
		"name": "comptandye",
		"_postman_id": "7c000a40-ed1b-debd-a6cf-7552c5dccd81",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Administrator",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements\"] = jsonData.length >= 3;",
									"",
									"tests[\"comptandye@gmail.com\"] = responseBody.has(\"comptandye@gmail.com\");",
									"tests[\"julien.sie@gmail.com\"] = responseBody.has(\"julien.sie@gmail.com\");",
									"tests[\"trendevfr@gmail.com\"] = responseBody.has(\"trendevfr@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Body is correct : 3 or more than 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"comptandye@gmail.com\\\"\"] = jsonData.email === \"comptandye@gmail.com\";",
									"tests[\"password is \\\"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\\\"\"] = jsonData.password === \"mZWR4R0bp5EPs9xfOwUPu3n/06LOL+wHK6BuUBsHgQM=\";",
									"tests[\"username is \\\"comptandye_admin\\\"\"] = jsonData.username === \"comptandye_admin\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups is undefined\"] = jsonData.userGroups === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator/comptandye@gmail.com",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"newadmin@trendev.fr\\\"\"] = jsonData.email === \"newadmin@trendev.fr\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"new_admin\\\"\"] = jsonData.username === \"new_admin\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator",
						"method": "POST",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"password\": \"PASSWORD\",\n    \"username\": \"new_admin\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"newadmin@trendev.fr\\\"\"] = jsonData.email === \"newadmin@trendev.fr\"",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"LewAshby\\\"\"] = jsonData.username === \"LewAshby\";",
									"tests[\"uuid is undefined\"] = jsonData.uuid === undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator",
						"method": "PUT",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newadmin@trendev.fr\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"LewAshby\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator/newadmin@trendev.fr",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Administrator UserGroup\"] = responseBody.has(\"Administrator\");"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator/comptandye@gmail.com/userGroups",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator/comptandye@gmail.com/insertToUserGroup/Individual",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Administrator/comptandye@gmail.com/removeFromUserGroup/Individual",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "UserGroup",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain more than 3 elements\"] = jsonData.length >= 3;",
									"",
									"tests[\"Administrator\"] = responseBody.has(\"Administrator\");",
									"tests[\"Individual\"] = responseBody.has(\"Individual\");",
									"tests[\"Professional\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"Total count >= 3\"] = responseBody >= 3;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"Administrator\\\"\"] = jsonData.name === \"Administrator\";",
									"tests[\"description is \\\"Administrator Group\\\"\"] = jsonData.description === \"Administrator Group\";",
									"tests[\"userAccounts is undefined\"] = jsonData.userAccounts === undefined;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup/Administrator",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is a test group\\\"\"] = jsonData.description === \"This is a test group\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup",
						"method": "POST",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"TEST_GRP01\",\"description\":\"This is a test group\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \\\"TEST_GRP01\\\"\"] = jsonData.name === \"TEST_GRP01\";",
									"tests[\"description is \\\"This is the test group TEST_GRP01\\\"\"] = jsonData.description === \"This is the test group TEST_GRP01\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup",
						"method": "PUT",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"TEST_GRP01\",\"description\":\"This is the test group TEST_GRP01\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup/TEST_GRP01",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getUserAccounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should contain 3 or more elements \"] = jsonData.length >= 3;",
									"",
									"function checkAdmin(admin){",
									"    return admin.email === \"trendevfr@gmail.com\";",
									"}",
									"",
									"var admin = jsonData.filter(checkAdmin);",
									"tests[\"There is an Administrator\"] = admin.length === 1;",
									"if(admin.lengt === 1){",
									"    tests[\"trendevfr@gmail.com is an Administrator\"] = admin[0].email === \"trendevfr@gmail.com\";",
									"    tests[\"trendevfr@gmail.com username = trendevfr_admin\"] = admin[0].username === \"trendevfr_admin\";",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/UserGroup/Administrator/userAccounts",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"ADDRESS table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Address",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Address/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.id);",
									"",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Address",
						"method": "POST",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"street\":\"47 Rue René Benoist\",\"optional\":\"TRENDev SASU\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is \\\"TRENDev SASU\\\"\"] = jsonData.optional === \"TRENDev SASU\";",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Address/{{created_address_id}}?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Address",
								"{{created_address_id}}"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "refresh",
									"value": "true"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_address_id\")] = jsonData.id == pm.environment.get(\"created_address_id\");",
									"tests[\"street is \\\"47 Rue René Benoist\\\"\"] = jsonData.street === \"47 Rue René Benoist\";",
									"tests[\"optional is undefined\"] = jsonData.optional === undefined;",
									"tests[\"postalCode is \\\"77860\\\"\"] = jsonData.postalCode === \"77860\";",
									"tests[\"city is \\\"Quincy-Voisins\\\"\"] = jsonData.city === \"Quincy-Voisins\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.country === \"France\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Address",
						"method": "PUT",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\":{{created_address_id}},\"street\":\"47 Rue René Benoist\",\"postalCode\":\"77860\",\"city\":\"Quincy-Voisins\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Address/{{created_address_id}}",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Payment table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Payment",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Payment/count",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_payment_id\", jsonData.id);",
									"",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Payment",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"amount\":100,\n\t\"paymentMode\":\n\t{\n\t\t\"name\":\"CB\"\n\t}\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 100\"] = jsonData.amount === 100;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentMode.name is \\\"CB\\\"\"] = jsonData.paymentMode.name === \"CB\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Payment/{{created_payment_id}}?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Payment",
								"{{created_payment_id}}"
							],
							"query": [
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_payment_id\")] = jsonData.id == pm.environment.get(\"created_payment_id\");",
									"tests[\"amount is 200\"] = jsonData.amount === 200;",
									"tests[\"currency is \\\"EUR\\\"\"] = jsonData.currency === \"EUR\";",
									"tests[\"paymentMode.name is \\\"Chèque\\\"\"] = jsonData.paymentMode.name === \"Chèque\";"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Payment",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_payment_id}},\n\t\"amount\":200,\n\t\"paymentMode\":\n\t{\n\t\t\"name\":\"Chèque\"\n\t}\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Payment/{{created_payment_id}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "CustomerDetails",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CustomerDetails table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CustomerDetails",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CustomerDetails/count",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.id);",
									"",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CustomerDetails",
						"method": "POST",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"nickname\": \"X\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": {{birthdate}},\n        \"sex\": \"M\",\n        \"picturePath\": \"C:/Documents and Settings/whateverUwant.png\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\"\n        ]\n    }"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is \\\"X\\\"\"] = jsonData.nickname === \"X\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.birthdate).toISOString().split(\"T\")[0]] = jsonData.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is \\\"C:/Documents and Settings/whateverUwant.png\\\"\"] = jsonData.picturePath === \"C:/Documents and Settings/whateverUwant.png\";",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 4;",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CustomerDetails",
								"{{created_customer_details_id}}"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "refresh",
									"value": "true"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_customer_details_id\")] = jsonData.id == pm.environment.get(\"created_customer_details_id\");",
									"tests[\"firstName is \\\"John\\\"\"] = jsonData.firstName === \"John\";",
									"tests[\"lastName is \\\"Doe\\\"\"] = jsonData.lastName === \"Doe\";",
									"tests[\"nickname is undefine\"] = jsonData.nickname === undefined;",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.phone === \"0102030405\";",
									"tests[\"birthdate is \\\"1467986000\\\"\"] = jsonData.birthdate === 1467986000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.sex === \"M\";",
									"tests[\"picturePath is undefined\"] = jsonData.picturePath === undefined;",
									"tests[\"comments contains 4 elements\"] = jsonData.comments.length === 5;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CustomerDetails",
						"method": "PUT",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id\":{{created_customer_details_id}},\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": 1467986000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Cool\",\n            \"Surfing boy\",\n            \"Able to ollie pop\",\n            \"I guess the guy is buddhist\",\n            \"But he has no name LOL\"\n        ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CustomerDetails/{{created_customer_details_id}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Business",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Business table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Business",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Business/count",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is defined\"] = jsonData.designation !== undefined;",
									"pm.environment.set(\"created_business_designation\", jsonData.designation);"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Business",
						"method": "POST",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"designation\": \"beauty_at_home\"}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"designation is \"+pm.environment.get(\"created_business_designation\")] = jsonData.designation == pm.environment.get(\"created_business_designation\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Business/{{created_business_designation}}?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Business",
								"{{created_business_designation}}"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "refresh",
									"value": "true"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Business/{{created_business_designation}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "PaymentMode",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"PaymentMode table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/PaymentMode",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Total count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/PaymentMode/count",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is defined\"] = jsonData.name !== undefined;",
									"pm.environment.set(\"created_paymentmode_name\", jsonData.name);"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/PaymentMode",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"BitCoins\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name is \"+pm.environment.get(\"created_paymentmode_name\")] = jsonData.name == pm.environment.get(\"created_paymentmode_name\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"PaymentMode",
								"{{created_paymentmode_name}}"
							],
							"query": [
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/PaymentMode/{{created_paymentmode_name}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "SocialNetworkAccounts",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/SocialNetworkAccounts",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/SocialNetworkAccounts/count",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.id);",
									"",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/SocialNetworkAccounts",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"facebook\":\"http://www.facebook.com/comptandye\",\n\t\"twitter\":\"@comptandye\"\n}\n"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is undefined\"] = jsonData.pinterest === undefined;",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"SocialNetworkAccounts",
								"{{created_socialnetworkaccounts_id}}"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "refresh",
									"value": "true"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//the stored variable is a string and the id is a number, avoid to use === and use == instead",
									"tests[\"id is \"+pm.environment.get(\"created_socialnetworkaccounts_id\")] = jsonData.id == pm.environment.get(\"created_socialnetworkaccounts_id\");",
									"tests[\"facebook is \\\"http://www.facebook.com/comptandye\\\"\"] = jsonData.facebook === \"http://www.facebook.com/comptandye\";",
									"tests[\"twitter is \\\"@comptandye\\\"\"] = jsonData.twitter === \"@comptandye\";",
									"tests[\"instagram is undefined\"] = jsonData.instagram === undefined;",
									"tests[\"pinterest is \\\"my_pinterest_account\\\"\"] = jsonData.pinterest === \"my_pinterest_account\";"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/SocialNetworkAccounts",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_socialnetworkaccounts_id}},\n\t\"facebook\":\"http://www.facebook.com/comptandye\",\n\t\"twitter\":\"@comptandye\",\n\t\"pinterest\":\"my_pinterest_account\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/SocialNetworkAccounts/{{created_socialnetworkaccounts_id}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Professional",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;",
									"",
									"tests[\"vanessa.gay@gmail.com\"] = responseBody.has(\"vanessa.gay@gmail.com\");"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1960,7,7);",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1960,7,7));"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"pro@domain.com\",\n\t\"password\":\"PASSWORD\",\n\t\"username\":\"pro_test\",\n\t\"customerDetails\": {\n            \"firstName\": \"Hank\",\n            \"lastName\": \"Moody\",\n            \"nickname\": \"Author\",\n            \"phone\": \"0102030405\",\n            \"birthdate\": {{birthdate}},\n            \"sex\": \"M\",\n            \"comments\": [\n                \"Fun\",\n                \"Book Author\",\n                \"Smokes and drinks a lot\",\n                \"Also Weed and Sex addicted\",\n                \"Driving a Porsche 911\"\n            ]\n        },\n        \"address\": {\n        \t\"street\": \"26 Brooks Avenue\",\n            \"postalCode\": \"90291\",\n            \"city\": \"Venice, Ca\",\n            \"country\": \"USA\"\n        },\n        \"socialNetworkAccounts\": {\n        \t\"facebook\": \"https://www.facebook.com/hankmoody\",\n            \"twitter\": \"@hankfuckinmoody\",\n            \"pinterest\": \"https://www.pinterest.com/californication123/\"\n        }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Author\\\"\"] = jsonData.customerDetails.nickname === \"Author\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Professional/pro@domain.com?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Professional",
								"pro@domain.com"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "refresh",
									"value": "true"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"pro@domain.com\\\"\"] = jsonData.email === \"pro@domain.com\"",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"pro_test\\\"\"] = jsonData.username === \"pro_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"tests[\"companyName is \\\"Boss Company\\\"\"] = jsonData.companyName === \"Boss Company\";",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional",
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pro@domain.com\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"pro_test\",\n    \"uuid\": \"PRO_d7d1b42c88b8450c96236d0a0f5b8294\",\n    \"registrationDate\": 1504361329000,\n    \"companyName\": \"Boss Company\",\n    \"customerDetails\": {\n        \"id\": {{created_customer_details_id}},\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": {{created_address_id}},\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": {{created_socialnetworkaccounts_id}},\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/pro@domain.com",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Professional UserGroup\"] = responseBody.has(\"Professional\");"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/userGroups",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/insertToUserGroup/Individual",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Individual\"] = jsonData.name === \"Individual\";"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/removeFromUserGroup/Individual",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more Bills \"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/bills",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/clients",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getOfferings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/offerings",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/categories",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getCollectiveGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/collectiveGroups",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getExpenses",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/expenses",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getIndividuals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/individuals",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be skonx2006@gmail.com\"] = jsonData.email === \"skonx2006@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/buildBusinessRelationship/skonx2006@gmail.com",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be skonx2006@gmail.com\"] = jsonData.email === \"skonx2006@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Professional/vanessa.gay@gmail.com/endBusinessRelationship/skonx2006@gmail.com",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Individual",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should elements\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/*birthdate should be send as UTC format only (avoid javascript GMT+2 and JAVA GMT+1 conversion errors for dates before 1970)*/",
									"pm.environment.set(\"birthdate\", Date.UTC(1962,11,25));"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"individual@gmail.com\",\n\t\"password\":\"PASSWORD\",\n\t\"username\":\"individual_test\",\n\t\"customerDetails\": {\n            \"firstName\": \"prenom\",\n            \"lastName\": \"nom\",\n            \"nickname\": \"surnom\",\n            \"phone\": \"0102030405\",\n            \"birthdate\": {{birthdate}},\n            \"sex\": \"F\",\n            \"comments\": [\n                \"Cool\",\n                \"Good looking\",\n                \"Open minded\",\n                \"Likes art and music\",\n                \"Nice hair\"\n            ]\n        },\n        \"address\": {\n        \t\"street\": \"10 route de la ferme du pavillon\",\n            \"postalCode\": \"77600\",\n            \"city\": \"Chanteloup-en-Brie\"\n        },\n        \"socialNetworkAccounts\": {\n        \t\"facebook\": \"https://www.facebook.com/individual\",\n            \"twitter\": \"@individualtwitter\",\n            \"pinterest\": \"https://www.pinterest.com/javaEEroxxx/\"\n        }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\"",
									"tests[\"password is \\\"PASSWORD\\\"\"] = jsonData.password === \"C+ZK6J3dJOIlQ03pXVAXETObru4Y8Am6m0NpryfTDWA=\";",
									"tests[\"username is \\\"individual_test\\\"\"] = jsonData.username === \"individual_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"prenom\\\"\"] = jsonData.customerDetails.firstName === \"prenom\";",
									"tests[\"lastName is \\\"nom\\\"\"] = jsonData.customerDetails.lastName === \"nom\";",
									"tests[\"nickname is \\\"surnom\\\"\"] = jsonData.customerDetails.nickname === \"surnom\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is \"+new Date(jsonData.customerDetails.birthdate).toISOString().split(\"T\")[0]] = jsonData.customerDetails.birthdate === Date.UTC(1962,11,25);",
									"tests[\"sex is \\\"F\\\"\"] = jsonData.customerDetails.sex === \"F\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"10 route de la ferme du pavillon\\\"\"] = jsonData.address.street === \"10 route de la ferme du pavillon\";",
									"tests[\"postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/individual\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/individual\";",
									"tests[\"twitter is \\\"@individualtwitter\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@individualtwitter\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/javaEEroxxx/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/javaEEroxxx/\";",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Individual/individual@gmail.com?refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Individual",
								"individual@gmail.com"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "refresh",
									"value": "true"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email is \\\"individual@gmail.com\\\"\"] = jsonData.email === \"individual@gmail.com\"",
									"tests[\"password is \\\"ANOTHER_PASSWORD\\\"\"] = jsonData.password === \"eVgyxb4vqO/zASQ7SkHckVGO7km4zUXxgevZwRdXzlM=\";",
									"tests[\"username is \\\"ind_test\\\"\"] = jsonData.username === \"ind_test\";",
									"tests[\"uuid is defined\"] = jsonData.uuid !== undefined;",
									"tests[\"registrationDate is defined\"] = jsonData.registrationDate !== undefined;",
									"tests[\"userGroups should be undefined\"] = jsonData.userGroups === undefined;",
									"",
									"tests[\"customerDetails should be defined\"] = jsonData.customerDetails !== undefined;",
									"tests[\"customerDetails.id is defined\"] = jsonData.customerDetails.id !== undefined;",
									"pm.environment.set(\"created_customer_details_id\", jsonData.customerDetails.id);",
									"tests[\"firstName is \\\"Hank\\\"\"] = jsonData.customerDetails.firstName === \"Hank\";",
									"tests[\"lastName is \\\"Moody\\\"\"] = jsonData.customerDetails.lastName === \"Moody\";",
									"tests[\"nickname is \\\"Hanky\\\"\"] = jsonData.customerDetails.nickname === \"Hanky\";",
									"tests[\"phone is \\\"0102030405\\\"\"] = jsonData.customerDetails.phone === \"0102030405\";",
									"tests[\"birthdate is -296697600000\"] = jsonData.customerDetails.birthdate === -296697600000;",
									"tests[\"sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"comments.length is 5\"] = jsonData.customerDetails.comments.length === 5;",
									"",
									"tests[\"address should be defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"street is \\\"26 Brooks Avenue\\\"\"] = jsonData.address.street === \"26 Brooks Avenue\";",
									"tests[\"postalCode is \\\"90291\\\"\"] = jsonData.address.postalCode === \"90291\";",
									"tests[\"city is \\\"Venice, Ca\\\"\"] = jsonData.address.city === \"Venice, Ca\";",
									"tests[\"country is \\\"USA\\\"\"] = jsonData.address.country === \"USA\";",
									"",
									"tests[\"socialNetworkAccounts should be defined\"] = jsonData.socialNetworkAccounts !== undefined;",
									"tests[\"socialNetworkAccounts.id is defined\"] = jsonData.socialNetworkAccounts.id !== undefined;",
									"pm.environment.set(\"created_socialnetworkaccounts_id\", jsonData.socialNetworkAccounts.id);",
									"",
									"tests[\"facebook is \\\"https://www.facebook.com/hankmoody\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://www.facebook.com/hankmoody\";",
									"tests[\"twitter is \\\"@hankfuckinmoody\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@hankfuckinmoody\";",
									"tests[\"pinterest is \\\"https://www.pinterest.com/californication123/\\\"\"] = jsonData.socialNetworkAccounts.pinterest === \"https://www.pinterest.com/californication123/\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual",
						"method": "PUT",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"individual@gmail.com\",\n    \"password\": \"ANOTHER_PASSWORD\",\n    \"username\": \"ind_test\",\n    \"uuid\": \"IND_d7d1b42c88b8450c96236d0a0f5b8294\",\n    \"registrationDate\": 1504361329000,\n    \"customerDetails\": {\n        \"id\": {{created_customer_details_id}},\n        \"firstName\": \"Hank\",\n        \"lastName\": \"Moody\",\n        \"nickname\": \"Hanky\",\n        \"phone\": \"0102030405\",\n        \"birthdate\": -296697600000,\n        \"sex\": \"M\",\n        \"comments\": [\n            \"Fun\",\n            \"Book Author\",\n            \"Smokes and drinks a lot\",\n            \"Also Weed and Sex addicted\",\n            \"Driving a Porsche 911\"\n        ]\n    },\n    \"address\": {\n        \"id\": {{created_address_id}},\n        \"street\": \"26 Brooks Avenue\",\n        \"postalCode\": \"90291\",\n        \"city\": \"Venice, Ca\",\n        \"country\": \"USA\"\n    },\n    \"socialNetworkAccounts\": {\n        \"id\": {{created_socialnetworkaccounts_id}},\n        \"facebook\": \"https://www.facebook.com/hankmoody\",\n        \"twitter\": \"@hankfuckinmoody\",\n        \"pinterest\": \"https://www.pinterest.com/californication123/\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getUserGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Should be contained in one or more UserGroup \"] = jsonData.length >= 1;",
									"",
									"tests[\"Should be in Individual UserGroup\"] = responseBody.has(\"Individual\");"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/individual@gmail.com/userGroups",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "insertToUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/individual@gmail.com/insertToUserGroup/Professional",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removeFromUserGroup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"name should be Professional\"] = jsonData.name === \"Professional\";"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}//Individual/individual@gmail.com/removeFromUserGroup/Professional",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "buildBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/individual@gmail.com/buildBusinessRelationship/vanessa.gay@gmail.com",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getProfessionals",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/individual@gmail.com/professionals",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "endBusinessRelationship",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"email should be vanessa.gay@gmail.com\"] = jsonData.email === \"vanessa.gay@gmail.com\";",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/individual@gmail.com/endBusinessRelationship/vanessa.gay@gmail.com",
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Individual/individual@gmail.com",
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Service",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Service",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Service/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"beauty service\",\n\t\"price\":10000,\n\t\"duration\":180,\n\t\"cltype\":\"service\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_offering_id\", jsonData.id);",
									"tests[\"name is \\\"new beauty service\\\"\"] = jsonData.name === \"new beauty service\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 300\"] = jsonData.duration === 300;",
									"tests[\"hidden is true\"] = jsonData.hidden === true;",
									"tests[\"first business designation is \\\"Esthétique\\\"\"] = jsonData.businesses[0].designation === \"Esthétique\";",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Service?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cltype\": \"service\",\n\t\"id\":{{created_offering_id}},\n\t\"name\":\"new beauty service\",\n\t\"price\":100000,\n\t\"duration\":300,\n\t\"hidden\":true,\n\t\"businesses\": [\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Service",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Pack",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Service (Offering) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Pack",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Pack/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_pack_id\", jsonData.id);",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"hidden is true\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"MASTER PACK\",\n\t\"price\":100000,\n\t\"duration\":600,\n\t\"cltype\":\"pack\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"MASTER PACK\\\"\"] = jsonData.name === \"MASTER PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_pack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_pack_id\")] = jsonData.id == pm.environment.get(\"created_pack_id\");",
									"tests[\"name is \\\"WEDDING PACK\\\"\"] = jsonData.name === \"WEDDING PACK\";",
									"tests[\"price is 100000\"] = jsonData.price === 100000;",
									"tests[\"duration is 600\"] = jsonData.duration === 600;",
									"tests[\"hidden is true\"] = jsonData.hidden === true;",
									"tests[\"businesses length is 2\"] = jsonData.businesses.length === 2;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_pack_id}},\n\t\"name\":\"WEDDING PACK\",\n\t\"price\":100000,\n\t\"duration\":600,\n\t\"hidden\":true,\n\t\"cltype\":\"pack\",\n\t\"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            },\n            {\n                \"designation\": \"Esthétique\"\n            }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "addService",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"beauty service\",",
									"\t            price:10000,",
									"\t            duration:180,",
									"\t            businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"service\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_offering_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addService/offering/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addService",
								"offering",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "addPack",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Pack?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                name:\"SubPack for Winners\",",
									"\t            price:5000,",
									"\t            duration:10,",
									"\t            businesses: [",
									"                {",
									"                    designation: \"Esthétique\"",
									"                }",
									"                ],",
									"                cltype:\"pack\"",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_subpack_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/addPack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"addPack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removeService",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_offering_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_offering_id\")] = jsonData.id == pm.environment.get(\"created_offering_id\");",
									"tests[\"name is \\\"beauty service\\\"\"] = jsonData.name === \"beauty service\";",
									"tests[\"price is 10000\"] = jsonData.price === 10000;",
									"tests[\"duration is 180\"] = jsonData.duration === 180;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is service\"] = jsonData.cltype === \"service\";",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Service/{{created_offering_id}}?professional=vanessa.gay@gmail.com\",",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removeService/offering/{{created_offering_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removeService",
								"offering",
								"{{created_offering_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removePack",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_subpack_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_subpack_id\")] = jsonData.id == pm.environment.get(\"created_subpack_id\");",
									"tests[\"name is \\\"SubPack for Winners\\\"\"] = jsonData.name === \"SubPack for Winners\";",
									"tests[\"price is 5000\"] = jsonData.price === 5000;",
									"tests[\"duration is 10\"] = jsonData.duration === 10;",
									"tests[\"hidden is false\"] = jsonData.hidden === false;",
									"tests[\"cltype is pack\"] = jsonData.cltype === \"pack\";",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Pack/{{created_subpack_id}}?professional=vanessa.gay@gmail.com\",",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}/removePack/offering/{{created_subpack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}",
								"removePack",
								"offering",
								"{{created_subpack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Pack/{{created_pack_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Pack",
								"{{created_pack_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Expense",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Expense table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Expense",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Expense/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"name is \\\"Purple Color\\\"\"] = jsonData.name === \"Purple Color\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Expense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"Purple Color\",\n\t\"amount\":1000,\n\t\"paymentDate\":1505707896023,\n\t\"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n    ],\n    \"payments\": [\n            {\n\t\t\t\t\"amount\": 900,\n                \"currency\": \"EUR\",\n                \"paymentMode\": {\n                    \"name\": \"CB\"\n                }\n            },\n            {\n                \"amount\": 100,\n                \"currency\": \"EUR\",\n                \"paymentMode\": {\n                    \"name\": \"Espèces\"\n                }\n            }\n        ],\n        \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_expense_id\", jsonData.id);",
									"tests[\"name is \\\"Purple Color\\\"\"] = jsonData.name === \"Purple Color\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"invoiceRef is \\\"invoice#2\\\"\"] = jsonData.invoiceRef === \"invoice#2\";",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Expense?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_expense_id}},\n\t\"name\":\"Purple Color\",\n\t\"amount\":1000,\n\t\"paymentDate\":1505707896023,\n\t\"categories\": [\n            \"Provider\",\n            \"Color Broker in Paris\"\n    ],\n    \"invoiceRef\": \"invoice#2\",\n    \"businesses\": [\n            {\n                \"designation\": \"Coiffure\"\n            }\n        ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.get(\"created_expense_id\");",
									"//created_expense_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_expense_id\")] = jsonData.id == pm.environment.get(\"created_expense_id\");",
									"",
									"tests[\"name is \\\"Purple Color\\\"\"] = jsonData.name === \"Purple Color\";",
									"tests[\"amount is 1000\"] = jsonData.amount === 1000;",
									"tests[\"paymentDate is \"+new Date(1505707896023)] = jsonData.paymentDate === 1505707896023;",
									"tests[\"categories length is 2\"] = jsonData.categories.length === 2;",
									"",
									"var total = 0;",
									"for(i=0 ; i<jsonData.payments.length ;i++){",
									"    total+=jsonData.payments[i].amount;",
									"}",
									"",
									"tests[\"Total Amount is \"+total] = jsonData.amount === total;",
									"",
									"tests[\"businesses[0].designation is \\\"Coiffure\\\"\"] = jsonData.businesses[0].designation === \"Coiffure\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Expense/{{created_expense_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Expense/{{created_expense_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Expense",
								"{{created_expense_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Category table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Category",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Category/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_category_id\", jsonData.id);",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"NEW_CATEGORY\",\n\t\"description\":\"This a new category for special clients\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"NEW_CATEGORY\\\"\"] = jsonData.name === \"NEW_CATEGORY\";",
									"tests[\"description is \\\"This a new category for special clients\\\"\"] = jsonData.description === \"This a new category for special clients\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_category_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_category_id\")] = jsonData.id == pm.environment.get(\"created_category_id\");",
									"tests[\"name is \\\"New Category\\\"\"] = jsonData.name === \"New Category\";",
									"tests[\"description is \\\"This a new description for the Category\\\"\"] = jsonData.description === \"This a new description for the Category\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_category_id}},\n\t\"name\":\"New Category\",\n\t\"description\":\"This a new description for the Category\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "addClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                email:\"newclient@domain.com\",",
									"                address:{",
									"                    street:\"79 avenue de la jonchère\",",
									"                    optional:\"appart A113\",",
									"                    postalCode:\"77600\",",
									"                    city:\"Chanteloup-en-Brie\"",
									"                },",
									"                customerDetails:{",
									"                    firstName:\"John\",",
									"                    lastName:\"DOE\",",
									"                    nickname:\"WhoIsHe\",",
									"                    sex:'M'",
									"                }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/addClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"addClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/clients?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"clients"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removeClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com\",",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}/removeClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}",
								"removeClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Category/{{created_category_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Category",
								"{{created_category_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "CollectiveGroup",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"CollectiveGroup table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CollectiveGroup",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/CollectiveGroup/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_collectivegroup_id\", jsonData.id);",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"id is defined\"] = jsonData.address.id !== undefined;",
									"pm.environment.set(\"created_address_id\", jsonData.address.id);",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"groupName\":\"Maison de retraite de Chanteloup-en-Brie\",\n\t\"phone\":\"0123456789\",\n\t\"address\":{\n\t\t\"street\":\"Allée de Fontenelle\",\n\t\t\"optional\":\"Château de Fontenelle\",\n\t\t\"postalCode\":\"77600\",\n\t\t\"city\":\"Chanteloup-en-Brie\"\n\t}\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"Maison de retraite de Chanteloup-en-Brie\\\"\"] = jsonData.groupName === \"Maison de retraite de Chanteloup-en-Brie\";",
									"tests[\"phone is \\\"0123456789\\\"\"] = jsonData.phone === \"0123456789\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_collectivegroup_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_collectivegroup_id\")] = jsonData.id == pm.environment.get(\"created_collectivegroup_id\");",
									"tests[\"groupName is \\\"E.H.P.A.D. LE CHATEAU DE FONTENELLE\\\"\"] = jsonData.groupName === \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\";",
									"tests[\"phone is \\\"0132547698\\\"\"] = jsonData.phone === \"0132547698\";",
									"tests[\"Address is defined\"] = jsonData.address !== undefined;",
									"tests[\"address.id is \"+pm.environment.get(\"created_address_id\")] = jsonData.address.id == pm.environment.get(\"created_address_id\");",
									"tests[\"address.street is \\\"Allée Fontenelle\\\"\"] = jsonData.address.street === \"Allée Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{created_collectivegroup_id}},\n    \"groupName\": \"E.H.P.A.D. LE CHATEAU DE FONTENELLE\",\n    \"phone\": \"0132547698\",\n    \"address\": {\n        \"street\": \"Allée Fontenelle\",\n        \"optional\": \"Château de Fontenelle\",\n        \"postalCode\": \"77600\",\n        \"city\": \"Chanteloup-en-Brie\",\n        \"country\": \"France\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "addClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client?professional=vanessa.gay@gmail.com\",",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body:{",
									"        mode: 'raw',",
									"        raw: JSON.stringify(",
									"            {",
									"                email:\"newclient@domain.com\",",
									"                address:{",
									"                    street:\"79 avenue de la jonchère\",",
									"                    optional:\"appart A113\",",
									"                    postalCode:\"77600\",",
									"                    city:\"Chanteloup-en-Brie\"",
									"                },",
									"                customerDetails:{",
									"                    firstName:\"John\",",
									"                    lastName:\"DOE\",",
									"                    nickname:\"WhoIsHe\",",
									"                    sex:'M'",
									"                }",
									"            })",
									"    }",
									"}, function (err, response) {",
									"    console.log(response.json());",
									"   pm.environment.set(\"created_client_id\", response.json().id);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/addClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"addClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getClients",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/clients?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"clients"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getCollectiveGroupBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/collectiveGroupBills?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"collectiveGroupBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "removeClient",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"pm.sendRequest({",
									"    url: \"{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com\",",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"    pm.expect(res).to.have.property('code', 200);",
									"    pm.expect(res).to.have.property('status', 'OK');",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"tests[\"email is \\\"newclient@domain.com\\\"\"] = jsonData.email === \"newclient@domain.com\";",
									"tests[\"customerDetails.firstName is \\\"John\\\"\"] = jsonData.customerDetails.firstName === \"John\";",
									"tests[\"customerDetails.lastName is \\\"DOE\\\"\"] = jsonData.customerDetails.lastName === \"DOE\";",
									"tests[\"customerDetails.nickname is \\\"WhoIsHe\\\"\"] = jsonData.customerDetails.nickname === \"WhoIsHe\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"",
									"tests[\"address.street is \\\"79 avenue de la jonchère\\\"\"] = jsonData.address.street === \"79 avenue de la jonchère\";",
									"tests[\"address.optional is \\\"appart A113\\\"\"] = jsonData.address.optional === \"appart A113\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"tests[\"address.country is \\\"France\\\"\"] = jsonData.address.country === \"France\";",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}/removeClient/{{created_client_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}",
								"removeClient",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/CollectiveGroup/{{created_collectivegroup_id}}?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"CollectiveGroup",
								"{{created_collectivegroup_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Client table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Client",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/Client/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"pm.environment.set(\"created_client_id\", jsonData.id);",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"client@domain.com\",\n\t\"address\":{\n\t\t\"street\":\"Allée de Fontenelle\",\n\t\t\"optional\":\"Château de Fontenelle\",\n\t\t\"postalCode\":\"77600\",\n\t\t\"city\":\"Chanteloup-en-Brie\"\n\t},\n\t\"socialNetworkAccounts\":{\n\t\t\"twitter\":\"@client_facebook_account\"\n\t},\n\t\"customerDetails\":{\n\t\t\"firstName\":\"Paul\",\n\t\t\"lastName\":\"Newman\",\n\t\t\"sex\":\"M\",\n\t\t\"comments\":[\n\t\t\t\"old american actor\",\n\t\t\t\"old shool boy\"\n\t\t]\n\t}\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "find",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client@domain.com\\\"\"] = jsonData.email === \"client@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"id is defined\"] = jsonData.id !== undefined;",
									"//created_client_id environment variable is stored as a string...",
									"tests[\"id is \"+pm.environment.get(\"created_client_id\")] = jsonData.id == pm.environment.get(\"created_client_id\");",
									"",
									"tests[\"email is \\\"client_email02@domain.com\\\"\"] = jsonData.email === \"client_email02@domain.com\";",
									"tests[\"socialNetworkAccounts.twitter is \\\"@client_facebook_account\\\"\"] = jsonData.socialNetworkAccounts.twitter === \"@client_facebook_account\";",
									"tests[\"socialNetworkAccounts.facebook is \\\"https://facebook.com/client_account\\\"\"] = jsonData.socialNetworkAccounts.facebook === \"https://facebook.com/client_account\";",
									"",
									"tests[\"address.street is \\\"Allée de Fontenelle\\\"\"] = jsonData.address.street === \"Allée de Fontenelle\";",
									"tests[\"address.optional is \\\"Château de Fontenelle\\\"\"] = jsonData.address.optional === \"Château de Fontenelle\";",
									"tests[\"address.postalCode is \\\"77600\\\"\"] = jsonData.address.postalCode === \"77600\";",
									"tests[\"address.city is \\\"Chanteloup-en-Brie\\\"\"] = jsonData.address.city === \"Chanteloup-en-Brie\";",
									"",
									"tests[\"customerDetails.firstName is \\\"Paul\\\"\"] = jsonData.customerDetails.firstName === \"Paul\";",
									"tests[\"customerDetails.lastName is \\\"Newman\\\"\"] = jsonData.customerDetails.lastName === \"Newman\";",
									"tests[\"customerDetails.sex is \\\"M\\\"\"] = jsonData.customerDetails.sex === \"M\";",
									"tests[\"customerDetails.comments.length is 2\"] = jsonData.customerDetails.comments.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client?professional=vanessa.gay@gmail.com",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":{{created_client_id}},\n\t\"email\":\"client_email02@domain.com\",\n\t\"address\":{\n\t\t\"street\":\"Allée de Fontenelle\",\n\t\t\"optional\":\"Château de Fontenelle\",\n\t\t\"postalCode\":\"77600\",\n\t\t\"city\":\"Chanteloup-en-Brie\"\n\t},\n\t\"socialNetworkAccounts\":{\n\t\t\"twitter\":\"@client_facebook_account\",\n\t\t\"facebook\":\"https://facebook.com/client_account\"\n\t},\n\t\"customerDetails\":{\n\t\t\"firstName\":\"Paul\",\n\t\t\"lastName\":\"Newman\",\n\t\t\"sex\":\"M\",\n\t\t\"comments\":[\n\t\t\t\"old american actor\",\n\t\t\t\"old shool boy\"\n\t\t]\n\t}\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getClientBills",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/clientBills?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"clientBills"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getCollectiveGroups",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/collectiveGroups?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"collectiveGroups"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}/categories?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}",
								"categories"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "{{API_URL}}/Client/{{created_client_id}}?professional=vanessa.gay@gmail.com&refresh=true",
							"host": [
								"{{API_URL}}"
							],
							"path": [
								"Client",
								"{{created_client_id}}"
							],
							"query": [
								{
									"key": "professional",
									"value": "vanessa.gay@gmail.com",
									"equals": true,
									"description": ""
								},
								{
									"key": "refresh",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "ClientBill",
			"description": "",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bill (DTYPE ClientBill) table is not empty\"] = jsonData.length >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/ClientBill",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "count",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"count >= 1\"] = responseBody >= 1;"
								]
							}
						}
					],
					"request": {
						"url": "{{API_URL}}/ClientBill/count",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}